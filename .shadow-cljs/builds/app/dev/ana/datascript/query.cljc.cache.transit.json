["^ ","~:output",["^ ","~:js","goog.provide('datascript.query');\ndatascript.query._STAR_query_cache_STAR_ = datascript.lru.cache((100));\n\n\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ndatascript.query.Context = (function (rels,sources,rules,__meta,__extmap,__hash){\nthis.rels = rels;\nthis.sources = sources;\nthis.rules = rules;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\n(datascript.query.Context.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4502__auto__,k__4503__auto__){\nvar self__ = this;\nvar this__4502__auto____$1 = this;\nreturn this__4502__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4503__auto__,null);\n}));\n\n(datascript.query.Context.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4504__auto__,k41551,else__4505__auto__){\nvar self__ = this;\nvar this__4504__auto____$1 = this;\nvar G__41555 = k41551;\nvar G__41555__$1 = (((G__41555 instanceof cljs.core.Keyword))?G__41555.fqn:null);\nswitch (G__41555__$1) {\ncase \"rels\":\nreturn self__.rels;\n\nbreak;\ncase \"sources\":\nreturn self__.sources;\n\nbreak;\ncase \"rules\":\nreturn self__.rules;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k41551,else__4505__auto__);\n\n}\n}));\n\n(datascript.query.Context.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__4522__auto__,f__4523__auto__,init__4524__auto__){\nvar self__ = this;\nvar this__4522__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4525__auto__,p__41556){\nvar vec__41557 = p__41556;\nvar k__4526__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41557,(0),null);\nvar v__4527__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41557,(1),null);\nreturn (f__4523__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4523__auto__.cljs$core$IFn$_invoke$arity$3(ret__4525__auto__,k__4526__auto__,v__4527__auto__) : f__4523__auto__.call(null,ret__4525__auto__,k__4526__auto__,v__4527__auto__));\n}),init__4524__auto__,this__4522__auto____$1);\n}));\n\n(datascript.query.Context.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4517__auto__,writer__4518__auto__,opts__4519__auto__){\nvar self__ = this;\nvar this__4517__auto____$1 = this;\nvar pr_pair__4520__auto__ = (function (keyval__4521__auto__){\nreturn cljs.core.pr_sequential_writer(writer__4518__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4519__auto__,keyval__4521__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__4518__auto__,pr_pair__4520__auto__,\"#datascript.query.Context{\",\", \",\"}\",opts__4519__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),self__.rels],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424),self__.sources],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"rules\",\"rules\",1198912366),self__.rules],null))], null),self__.__extmap));\n}));\n\n(datascript.query.Context.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__41550){\nvar self__ = this;\nvar G__41550__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__41550__$1,3,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424),new cljs.core.Keyword(null,\"rules\",\"rules\",1198912366)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(datascript.query.Context.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4500__auto__){\nvar self__ = this;\nvar this__4500__auto____$1 = this;\nreturn self__.__meta;\n}));\n\n(datascript.query.Context.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4497__auto__){\nvar self__ = this;\nvar this__4497__auto____$1 = this;\nreturn (new datascript.query.Context(self__.rels,self__.sources,self__.rules,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(datascript.query.Context.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4506__auto__){\nvar self__ = this;\nvar this__4506__auto____$1 = this;\nreturn (3 + cljs.core.count(self__.__extmap));\n}));\n\n(datascript.query.Context.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4498__auto__){\nvar self__ = this;\nvar this__4498__auto____$1 = this;\nvar h__4360__auto__ = self__.__hash;\nif((!((h__4360__auto__ == null)))){\nreturn h__4360__auto__;\n} else {\nvar h__4360__auto____$1 = (function (coll__4499__auto__){\nreturn (1014232958 ^ cljs.core.hash_unordered_coll(coll__4499__auto__));\n})(this__4498__auto____$1);\n(self__.__hash = h__4360__auto____$1);\n\nreturn h__4360__auto____$1;\n}\n}));\n\n(datascript.query.Context.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this41552,other41553){\nvar self__ = this;\nvar this41552__$1 = this;\nreturn (((!((other41553 == null)))) && ((((this41552__$1.constructor === other41553.constructor)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this41552__$1.rels,other41553.rels)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this41552__$1.sources,other41553.sources)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this41552__$1.rules,other41553.rules)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this41552__$1.__extmap,other41553.__extmap)))))))))));\n}));\n\n(datascript.query.Context.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4512__auto__,k__4513__auto__){\nvar self__ = this;\nvar this__4512__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424),null,new cljs.core.Keyword(null,\"rules\",\"rules\",1198912366),null,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),null], null), null),k__4513__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4512__auto____$1),self__.__meta),k__4513__auto__);\n} else {\nreturn (new datascript.query.Context(self__.rels,self__.sources,self__.rules,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4513__auto__)),null));\n}\n}));\n\n(datascript.query.Context.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (this__4509__auto__,k41551){\nvar self__ = this;\nvar this__4509__auto____$1 = this;\nvar G__41562 = k41551;\nvar G__41562__$1 = (((G__41562 instanceof cljs.core.Keyword))?G__41562.fqn:null);\nswitch (G__41562__$1) {\ncase \"rels\":\ncase \"sources\":\ncase \"rules\":\nreturn true;\n\nbreak;\ndefault:\nreturn cljs.core.contains_QMARK_(self__.__extmap,k41551);\n\n}\n}));\n\n(datascript.query.Context.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4510__auto__,k__4511__auto__,G__41550){\nvar self__ = this;\nvar this__4510__auto____$1 = this;\nvar pred__41564 = cljs.core.keyword_identical_QMARK_;\nvar expr__41565 = k__4511__auto__;\nif(cljs.core.truth_((pred__41564.cljs$core$IFn$_invoke$arity$2 ? pred__41564.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),expr__41565) : pred__41564.call(null,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),expr__41565)))){\nreturn (new datascript.query.Context(G__41550,self__.sources,self__.rules,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__41564.cljs$core$IFn$_invoke$arity$2 ? pred__41564.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424),expr__41565) : pred__41564.call(null,new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424),expr__41565)))){\nreturn (new datascript.query.Context(self__.rels,G__41550,self__.rules,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__41564.cljs$core$IFn$_invoke$arity$2 ? pred__41564.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"rules\",\"rules\",1198912366),expr__41565) : pred__41564.call(null,new cljs.core.Keyword(null,\"rules\",\"rules\",1198912366),expr__41565)))){\nreturn (new datascript.query.Context(self__.rels,self__.sources,G__41550,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new datascript.query.Context(self__.rels,self__.sources,self__.rules,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4511__auto__,G__41550),null));\n}\n}\n}\n}));\n\n(datascript.query.Context.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4515__auto__){\nvar self__ = this;\nvar this__4515__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),self__.rels,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424),self__.sources,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"rules\",\"rules\",1198912366),self__.rules,null))], null),self__.__extmap));\n}));\n\n(datascript.query.Context.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4501__auto__,G__41550){\nvar self__ = this;\nvar this__4501__auto____$1 = this;\nreturn (new datascript.query.Context(self__.rels,self__.sources,self__.rules,G__41550,self__.__extmap,self__.__hash));\n}));\n\n(datascript.query.Context.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4507__auto__,entry__4508__auto__){\nvar self__ = this;\nvar this__4507__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__4508__auto__)){\nreturn this__4507__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__4508__auto__,(0)),cljs.core._nth(entry__4508__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4507__auto____$1,entry__4508__auto__);\n}\n}));\n\n(datascript.query.Context.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"rels\",\"rels\",-884248584,null),new cljs.core.Symbol(null,\"sources\",\"sources\",1319365103,null),new cljs.core.Symbol(null,\"rules\",\"rules\",-1455523403,null)], null);\n}));\n\n(datascript.query.Context.cljs$lang$type = true);\n\n(datascript.query.Context.cljs$lang$ctorPrSeq = (function (this__4546__auto__){\nreturn (new cljs.core.List(null,\"datascript.query/Context\",null,(1),null));\n}));\n\n(datascript.query.Context.cljs$lang$ctorPrWriter = (function (this__4546__auto__,writer__4547__auto__){\nreturn cljs.core._write(writer__4547__auto__,\"datascript.query/Context\");\n}));\n\n/**\n * Positional factory function for datascript.query/Context.\n */\ndatascript.query.__GT_Context = (function datascript$query$__GT_Context(rels,sources,rules){\nreturn (new datascript.query.Context(rels,sources,rules,null,null,null));\n});\n\n/**\n * Factory function for datascript.query/Context, taking a map of keywords to field values.\n */\ndatascript.query.map__GT_Context = (function datascript$query$map__GT_Context(G__41554){\nvar extmap__4542__auto__ = (function (){var G__41568 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__41554,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424),new cljs.core.Keyword(null,\"rules\",\"rules\",1198912366)], 0));\nif(cljs.core.record_QMARK_(G__41554)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__41568);\n} else {\nreturn G__41568;\n}\n})();\nreturn (new datascript.query.Context(new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(G__41554),new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424).cljs$core$IFn$_invoke$arity$1(G__41554),new cljs.core.Keyword(null,\"rules\",\"rules\",1198912366).cljs$core$IFn$_invoke$arity$1(G__41554),null,cljs.core.not_empty(extmap__4542__auto__),null));\n});\n\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ndatascript.query.Relation = (function (attrs,tuples,__meta,__extmap,__hash){\nthis.attrs = attrs;\nthis.tuples = tuples;\nthis.__meta = __meta;\nthis.__extmap = __extmap;\nthis.__hash = __hash;\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\n});\n(datascript.query.Relation.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4502__auto__,k__4503__auto__){\nvar self__ = this;\nvar this__4502__auto____$1 = this;\nreturn this__4502__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4503__auto__,null);\n}));\n\n(datascript.query.Relation.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4504__auto__,k41571,else__4505__auto__){\nvar self__ = this;\nvar this__4504__auto____$1 = this;\nvar G__41575 = k41571;\nvar G__41575__$1 = (((G__41575 instanceof cljs.core.Keyword))?G__41575.fqn:null);\nswitch (G__41575__$1) {\ncase \"attrs\":\nreturn self__.attrs;\n\nbreak;\ncase \"tuples\":\nreturn self__.tuples;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k41571,else__4505__auto__);\n\n}\n}));\n\n(datascript.query.Relation.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__4522__auto__,f__4523__auto__,init__4524__auto__){\nvar self__ = this;\nvar this__4522__auto____$1 = this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__4525__auto__,p__41576){\nvar vec__41577 = p__41576;\nvar k__4526__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41577,(0),null);\nvar v__4527__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41577,(1),null);\nreturn (f__4523__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4523__auto__.cljs$core$IFn$_invoke$arity$3(ret__4525__auto__,k__4526__auto__,v__4527__auto__) : f__4523__auto__.call(null,ret__4525__auto__,k__4526__auto__,v__4527__auto__));\n}),init__4524__auto__,this__4522__auto____$1);\n}));\n\n(datascript.query.Relation.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4517__auto__,writer__4518__auto__,opts__4519__auto__){\nvar self__ = this;\nvar this__4517__auto____$1 = this;\nvar pr_pair__4520__auto__ = (function (keyval__4521__auto__){\nreturn cljs.core.pr_sequential_writer(writer__4518__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4519__auto__,keyval__4521__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__4518__auto__,pr_pair__4520__auto__,\"#datascript.query.Relation{\",\", \",\"}\",opts__4519__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713),self__.attrs],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639),self__.tuples],null))], null),self__.__extmap));\n}));\n\n(datascript.query.Relation.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__41570){\nvar self__ = this;\nvar G__41570__$1 = this;\nreturn (new cljs.core.RecordIter((0),G__41570__$1,2,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713),new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(datascript.query.Relation.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4500__auto__){\nvar self__ = this;\nvar this__4500__auto____$1 = this;\nreturn self__.__meta;\n}));\n\n(datascript.query.Relation.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4497__auto__){\nvar self__ = this;\nvar this__4497__auto____$1 = this;\nreturn (new datascript.query.Relation(self__.attrs,self__.tuples,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(datascript.query.Relation.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4506__auto__){\nvar self__ = this;\nvar this__4506__auto____$1 = this;\nreturn (2 + cljs.core.count(self__.__extmap));\n}));\n\n(datascript.query.Relation.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4498__auto__){\nvar self__ = this;\nvar this__4498__auto____$1 = this;\nvar h__4360__auto__ = self__.__hash;\nif((!((h__4360__auto__ == null)))){\nreturn h__4360__auto__;\n} else {\nvar h__4360__auto____$1 = (function (coll__4499__auto__){\nreturn (1107093117 ^ cljs.core.hash_unordered_coll(coll__4499__auto__));\n})(this__4498__auto____$1);\n(self__.__hash = h__4360__auto____$1);\n\nreturn h__4360__auto____$1;\n}\n}));\n\n(datascript.query.Relation.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this41572,other41573){\nvar self__ = this;\nvar this41572__$1 = this;\nreturn (((!((other41573 == null)))) && ((((this41572__$1.constructor === other41573.constructor)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this41572__$1.attrs,other41573.attrs)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this41572__$1.tuples,other41573.tuples)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this41572__$1.__extmap,other41573.__extmap)))))))));\n}));\n\n(datascript.query.Relation.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4512__auto__,k__4513__auto__){\nvar self__ = this;\nvar this__4512__auto____$1 = this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639),null,new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713),null], null), null),k__4513__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4512__auto____$1),self__.__meta),k__4513__auto__);\n} else {\nreturn (new datascript.query.Relation(self__.attrs,self__.tuples,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4513__auto__)),null));\n}\n}));\n\n(datascript.query.Relation.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (this__4509__auto__,k41571){\nvar self__ = this;\nvar this__4509__auto____$1 = this;\nvar G__41582 = k41571;\nvar G__41582__$1 = (((G__41582 instanceof cljs.core.Keyword))?G__41582.fqn:null);\nswitch (G__41582__$1) {\ncase \"attrs\":\ncase \"tuples\":\nreturn true;\n\nbreak;\ndefault:\nreturn cljs.core.contains_QMARK_(self__.__extmap,k41571);\n\n}\n}));\n\n(datascript.query.Relation.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4510__auto__,k__4511__auto__,G__41570){\nvar self__ = this;\nvar this__4510__auto____$1 = this;\nvar pred__41583 = cljs.core.keyword_identical_QMARK_;\nvar expr__41584 = k__4511__auto__;\nif(cljs.core.truth_((pred__41583.cljs$core$IFn$_invoke$arity$2 ? pred__41583.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713),expr__41584) : pred__41583.call(null,new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713),expr__41584)))){\nreturn (new datascript.query.Relation(G__41570,self__.tuples,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__41583.cljs$core$IFn$_invoke$arity$2 ? pred__41583.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639),expr__41584) : pred__41583.call(null,new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639),expr__41584)))){\nreturn (new datascript.query.Relation(self__.attrs,G__41570,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new datascript.query.Relation(self__.attrs,self__.tuples,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4511__auto__,G__41570),null));\n}\n}\n}));\n\n(datascript.query.Relation.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4515__auto__){\nvar self__ = this;\nvar this__4515__auto____$1 = this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713),self__.attrs,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639),self__.tuples,null))], null),self__.__extmap));\n}));\n\n(datascript.query.Relation.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4501__auto__,G__41570){\nvar self__ = this;\nvar this__4501__auto____$1 = this;\nreturn (new datascript.query.Relation(self__.attrs,self__.tuples,G__41570,self__.__extmap,self__.__hash));\n}));\n\n(datascript.query.Relation.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4507__auto__,entry__4508__auto__){\nvar self__ = this;\nvar this__4507__auto____$1 = this;\nif(cljs.core.vector_QMARK_(entry__4508__auto__)){\nreturn this__4507__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__4508__auto__,(0)),cljs.core._nth(entry__4508__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4507__auto____$1,entry__4508__auto__);\n}\n}));\n\n(datascript.query.Relation.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"attrs\",\"attrs\",-450137186,null),new cljs.core.Symbol(null,\"tuples\",\"tuples\",964498888,null)], null);\n}));\n\n(datascript.query.Relation.cljs$lang$type = true);\n\n(datascript.query.Relation.cljs$lang$ctorPrSeq = (function (this__4546__auto__){\nreturn (new cljs.core.List(null,\"datascript.query/Relation\",null,(1),null));\n}));\n\n(datascript.query.Relation.cljs$lang$ctorPrWriter = (function (this__4546__auto__,writer__4547__auto__){\nreturn cljs.core._write(writer__4547__auto__,\"datascript.query/Relation\");\n}));\n\n/**\n * Positional factory function for datascript.query/Relation.\n */\ndatascript.query.__GT_Relation = (function datascript$query$__GT_Relation(attrs,tuples){\nreturn (new datascript.query.Relation(attrs,tuples,null,null,null));\n});\n\n/**\n * Factory function for datascript.query/Relation, taking a map of keywords to field values.\n */\ndatascript.query.map__GT_Relation = (function datascript$query$map__GT_Relation(G__41574){\nvar extmap__4542__auto__ = (function (){var G__41587 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__41574,new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639)], 0));\nif(cljs.core.record_QMARK_(G__41574)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__41587);\n} else {\nreturn G__41587;\n}\n})();\nreturn (new datascript.query.Relation(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(G__41574),new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639).cljs$core$IFn$_invoke$arity$1(G__41574),null,cljs.core.not_empty(extmap__4542__auto__),null));\n});\n\ndatascript.query.single = (function datascript$query$single(coll){\nif((cljs.core.next(coll) == null)){\n} else {\nthrow (new Error([\"Assert failed: \",\"Expected single element\",\"\\n\",\"(nil? (next coll))\"].join('')));\n}\n\nreturn cljs.core.first(coll);\n});\ndatascript.query.intersect_keys = (function datascript$query$intersect_keys(attrs1,attrs2){\nreturn clojure.set.intersection.cljs$core$IFn$_invoke$arity$2(cljs.core.set(cljs.core.keys(attrs1)),cljs.core.set(cljs.core.keys(attrs2)));\n});\ndatascript.query.concatv = (function datascript$query$concatv(var_args){\nvar args__4870__auto__ = [];\nvar len__4864__auto___41996 = arguments.length;\nvar i__4865__auto___41997 = (0);\nwhile(true){\nif((i__4865__auto___41997 < len__4864__auto___41996)){\nargs__4870__auto__.push((arguments[i__4865__auto___41997]));\n\nvar G__41998 = (i__4865__auto___41997 + (1));\ni__4865__auto___41997 = G__41998;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4871__auto__ = ((((0) < args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((0)),(0),null)):null);\nreturn datascript.query.concatv.cljs$core$IFn$_invoke$arity$variadic(argseq__4871__auto__);\n});\n\n(datascript.query.concatv.cljs$core$IFn$_invoke$arity$variadic = (function (xs){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.cat,xs);\n}));\n\n(datascript.query.concatv.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(datascript.query.concatv.cljs$lang$applyTo = (function (seq41589){\nvar self__4852__auto__ = this;\nreturn self__4852__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq41589));\n}));\n\ndatascript.query.zip = (function datascript$query$zip(var_args){\nvar G__41595 = arguments.length;\nswitch (G__41595) {\ncase 2:\nreturn datascript.query.zip.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__4885__auto__ = [];\nvar len__4864__auto___42000 = arguments.length;\nvar i__4865__auto___42001 = (0);\nwhile(true){\nif((i__4865__auto___42001 < len__4864__auto___42000)){\nargs_arr__4885__auto__.push((arguments[i__4865__auto___42001]));\n\nvar G__42002 = (i__4865__auto___42001 + (1));\ni__4865__auto___42001 = G__42002;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4886__auto__ = (new cljs.core.IndexedSeq(args_arr__4885__auto__.slice((2)),(0),null));\nreturn datascript.query.zip.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4886__auto__);\n\n}\n});\n\n(datascript.query.zip.cljs$core$IFn$_invoke$arity$2 = (function (a,b){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,a,b);\n}));\n\n(datascript.query.zip.cljs$core$IFn$_invoke$arity$variadic = (function (a,b,rest){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$5(cljs.core.mapv,cljs.core.vector,a,b,rest);\n}));\n\n/** @this {Function} */\n(datascript.query.zip.cljs$lang$applyTo = (function (seq41592){\nvar G__41593 = cljs.core.first(seq41592);\nvar seq41592__$1 = cljs.core.next(seq41592);\nvar G__41594 = cljs.core.first(seq41592__$1);\nvar seq41592__$2 = cljs.core.next(seq41592__$1);\nvar self__4851__auto__ = this;\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__41593,G__41594,seq41592__$2);\n}));\n\n(datascript.query.zip.cljs$lang$maxFixedArity = (2));\n\ndatascript.query.same_keys_QMARK_ = (function datascript$query$same_keys_QMARK_(a,b){\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(a),cljs.core.count(b))) && (((cljs.core.every_QMARK_((function (p1__41596_SHARP_){\nreturn cljs.core.contains_QMARK_(b,p1__41596_SHARP_);\n}),cljs.core.keys(a))) && (cljs.core.every_QMARK_((function (p1__41597_SHARP_){\nreturn cljs.core.contains_QMARK_(b,p1__41597_SHARP_);\n}),cljs.core.keys(a))))));\n});\ndatascript.query.looks_like_QMARK_ = (function datascript$query$looks_like_QMARK_(pattern,form){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"_\",\"_\",-1201019570,null),pattern)){\nreturn true;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null),pattern)){\nreturn cljs.core.sequential_QMARK_(form);\n} else {\nif((pattern instanceof cljs.core.Symbol)){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(form,pattern);\n} else {\nif(cljs.core.sequential_QMARK_(pattern)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.last(pattern),new cljs.core.Symbol(null,\"*\",\"*\",345799209,null))){\nreturn ((cljs.core.sequential_QMARK_(form)) && (cljs.core.every_QMARK_((function (p__41599){\nvar vec__41600 = p__41599;\nvar pattern_el = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41600,(0),null);\nvar form_el = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41600,(1),null);\nreturn (datascript.query.looks_like_QMARK_.cljs$core$IFn$_invoke$arity$2 ? datascript.query.looks_like_QMARK_.cljs$core$IFn$_invoke$arity$2(pattern_el,form_el) : datascript.query.looks_like_QMARK_.call(null,pattern_el,form_el));\n}),cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,cljs.core.butlast(pattern),form))));\n} else {\nreturn ((cljs.core.sequential_QMARK_(form)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(form),cljs.core.count(pattern))) && (cljs.core.every_QMARK_((function (p__41603){\nvar vec__41604 = p__41603;\nvar pattern_el = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41604,(0),null);\nvar form_el = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41604,(1),null);\nreturn (datascript.query.looks_like_QMARK_.cljs$core$IFn$_invoke$arity$2 ? datascript.query.looks_like_QMARK_.cljs$core$IFn$_invoke$arity$2(pattern_el,form_el) : datascript.query.looks_like_QMARK_.call(null,pattern_el,form_el));\n}),cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,pattern,form))))));\n}\n} else {\nreturn (pattern.cljs$core$IFn$_invoke$arity$1 ? pattern.cljs$core$IFn$_invoke$arity$1(form) : pattern.call(null,form));\n\n}\n}\n}\n}\n});\ndatascript.query.source_QMARK_ = (function datascript$query$source_QMARK_(sym){\nreturn (((sym instanceof cljs.core.Symbol)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"$\",cljs.core.first(cljs.core.name(sym)))));\n});\ndatascript.query.free_var_QMARK_ = (function datascript$query$free_var_QMARK_(sym){\nreturn (((sym instanceof cljs.core.Symbol)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"?\",cljs.core.first(cljs.core.name(sym)))));\n});\ndatascript.query.attr_QMARK_ = (function datascript$query$attr_QMARK_(form){\nreturn (((form instanceof cljs.core.Keyword)) || (typeof form === 'string'));\n});\ndatascript.query.lookup_ref_QMARK_ = (function datascript$query$lookup_ref_QMARK_(form){\nreturn datascript.query.looks_like_QMARK_(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [datascript.query.attr_QMARK_,new cljs.core.Symbol(null,\"_\",\"_\",-1201019570,null)], null),form);\n});\ndatascript.query.join_tuples = (function datascript$query$join_tuples(t1,idxs1,t2,idxs2){\nvar l1 = idxs1.length;\nvar l2 = idxs2.length;\nvar res = me.tonsky.persistent_sorted_set.arrays.make_array((l1 + l2));\nvar n__4741__auto___42003 = l1;\nvar i_42004 = (0);\nwhile(true){\nif((i_42004 < n__4741__auto___42003)){\n(res[i_42004] = (t1[(idxs1[i_42004])]));\n\nvar G__42005 = (i_42004 + (1));\ni_42004 = G__42005;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar n__4741__auto___42006 = l2;\nvar i_42007 = (0);\nwhile(true){\nif((i_42007 < n__4741__auto___42006)){\n(res[(l1 + i_42007)] = (t2[(idxs2[i_42007])]));\n\nvar G__42008 = (i_42007 + (1));\ni_42007 = G__42008;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn res;\n});\ndatascript.query.sum_rel = (function datascript$query$sum_rel(a,b){\nvar map__41610 = a;\nvar map__41610__$1 = cljs.core.__destructure_map(map__41610);\nvar attrs_a = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41610__$1,new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713));\nvar tuples_a = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41610__$1,new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639));\nvar map__41611 = b;\nvar map__41611__$1 = cljs.core.__destructure_map(map__41611);\nvar attrs_b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41611__$1,new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713));\nvar tuples_b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41611__$1,new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639));\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(attrs_a,attrs_b)){\nreturn (new datascript.query.Relation(attrs_a,cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(tuples_a),tuples_b),null,null,null));\n} else {\nif((!(datascript.query.same_keys_QMARK_(attrs_a,attrs_b)))){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Can\\u2019t sum relations with different attrs: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([attrs_a], 0)),\" and \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([attrs_b], 0))].join(''),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"where\",\"query/where\",-1935159429)], null));\n} else {\nif(cljs.core.every_QMARK_(cljs.core.number_QMARK_,cljs.core.vals(attrs_a))){\nvar idxb__GT_idxa = cljs.core.vec((function (){var iter__4652__auto__ = (function datascript$query$sum_rel_$_iter__41612(s__41613){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__41613__$1 = s__41613;\nwhile(true){\nvar temp__5753__auto__ = cljs.core.seq(s__41613__$1);\nif(temp__5753__auto__){\nvar s__41613__$2 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__41613__$2)){\nvar c__4650__auto__ = cljs.core.chunk_first(s__41613__$2);\nvar size__4651__auto__ = cljs.core.count(c__4650__auto__);\nvar b__41615 = cljs.core.chunk_buffer(size__4651__auto__);\nif((function (){var i__41614 = (0);\nwhile(true){\nif((i__41614 < size__4651__auto__)){\nvar vec__41617 = cljs.core._nth(c__4650__auto__,i__41614);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41617,(0),null);\nvar idx_b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41617,(1),null);\ncljs.core.chunk_append(b__41615,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [idx_b,(attrs_a.cljs$core$IFn$_invoke$arity$1 ? attrs_a.cljs$core$IFn$_invoke$arity$1(sym) : attrs_a.call(null,sym))], null));\n\nvar G__42011 = (i__41614 + (1));\ni__41614 = G__42011;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__41615),datascript$query$sum_rel_$_iter__41612(cljs.core.chunk_rest(s__41613__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__41615),null);\n}\n} else {\nvar vec__41620 = cljs.core.first(s__41613__$2);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41620,(0),null);\nvar idx_b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41620,(1),null);\nreturn cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [idx_b,(attrs_a.cljs$core$IFn$_invoke$arity$1 ? attrs_a.cljs$core$IFn$_invoke$arity$1(sym) : attrs_a.call(null,sym))], null),datascript$query$sum_rel_$_iter__41612(cljs.core.rest(s__41613__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__4652__auto__(attrs_b);\n})());\nvar tlen = (cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(cljs.core.max,cljs.core.vals(attrs_a)) + (1));\nvar tuples_SINGLEQUOTE_ = cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (acc,tuple_b){\nvar tuple_SINGLEQUOTE_ = me.tonsky.persistent_sorted_set.arrays.make_array(tlen);\nvar seq__41623_42012 = cljs.core.seq(idxb__GT_idxa);\nvar chunk__41624_42013 = null;\nvar count__41625_42014 = (0);\nvar i__41626_42015 = (0);\nwhile(true){\nif((i__41626_42015 < count__41625_42014)){\nvar vec__41634_42016 = chunk__41624_42013.cljs$core$IIndexed$_nth$arity$2(null,i__41626_42015);\nvar idx_b_42017 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41634_42016,(0),null);\nvar idx_a_42018 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41634_42016,(1),null);\n(tuple_SINGLEQUOTE_[idx_a_42018] = (tuple_b[idx_b_42017]));\n\n\nvar G__42019 = seq__41623_42012;\nvar G__42020 = chunk__41624_42013;\nvar G__42021 = count__41625_42014;\nvar G__42022 = (i__41626_42015 + (1));\nseq__41623_42012 = G__42019;\nchunk__41624_42013 = G__42020;\ncount__41625_42014 = G__42021;\ni__41626_42015 = G__42022;\ncontinue;\n} else {\nvar temp__5753__auto___42023 = cljs.core.seq(seq__41623_42012);\nif(temp__5753__auto___42023){\nvar seq__41623_42024__$1 = temp__5753__auto___42023;\nif(cljs.core.chunked_seq_QMARK_(seq__41623_42024__$1)){\nvar c__4679__auto___42025 = cljs.core.chunk_first(seq__41623_42024__$1);\nvar G__42026 = cljs.core.chunk_rest(seq__41623_42024__$1);\nvar G__42027 = c__4679__auto___42025;\nvar G__42028 = cljs.core.count(c__4679__auto___42025);\nvar G__42029 = (0);\nseq__41623_42012 = G__42026;\nchunk__41624_42013 = G__42027;\ncount__41625_42014 = G__42028;\ni__41626_42015 = G__42029;\ncontinue;\n} else {\nvar vec__41637_42030 = cljs.core.first(seq__41623_42024__$1);\nvar idx_b_42031 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41637_42030,(0),null);\nvar idx_a_42032 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41637_42030,(1),null);\n(tuple_SINGLEQUOTE_[idx_a_42032] = (tuple_b[idx_b_42031]));\n\n\nvar G__42033 = cljs.core.next(seq__41623_42024__$1);\nvar G__42034 = null;\nvar G__42035 = (0);\nvar G__42036 = (0);\nseq__41623_42012 = G__42033;\nchunk__41624_42013 = G__42034;\ncount__41625_42014 = G__42035;\ni__41626_42015 = G__42036;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(acc,tuple_SINGLEQUOTE_);\n}),cljs.core.transient$(cljs.core.vec(tuples_a)),tuples_b));\nreturn (new datascript.query.Relation(attrs_a,tuples_SINGLEQUOTE_,null,null,null));\n} else {\nvar all_attrs = cljs.core.zipmap(cljs.core.keys(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([attrs_a,attrs_b], 0))),cljs.core.range.cljs$core$IFn$_invoke$arity$0());\nvar G__41640 = (function (){var G__41642 = (new datascript.query.Relation(all_attrs,cljs.core.PersistentVector.EMPTY,null,null,null));\nvar G__41643 = a;\nreturn (datascript.query.sum_rel.cljs$core$IFn$_invoke$arity$2 ? datascript.query.sum_rel.cljs$core$IFn$_invoke$arity$2(G__41642,G__41643) : datascript.query.sum_rel.call(null,G__41642,G__41643));\n})();\nvar G__41641 = b;\nreturn (datascript.query.sum_rel.cljs$core$IFn$_invoke$arity$2 ? datascript.query.sum_rel.cljs$core$IFn$_invoke$arity$2(G__41640,G__41641) : datascript.query.sum_rel.call(null,G__41640,G__41641));\n\n}\n}\n}\n});\ndatascript.query.prod_rel = (function datascript$query$prod_rel(var_args){\nvar G__41646 = arguments.length;\nswitch (G__41646) {\ncase 0:\nreturn datascript.query.prod_rel.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 2:\nreturn datascript.query.prod_rel.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(datascript.query.prod_rel.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn (new datascript.query.Relation(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [me.tonsky.persistent_sorted_set.arrays.make_array((0))], null),null,null,null));\n}));\n\n(datascript.query.prod_rel.cljs$core$IFn$_invoke$arity$2 = (function (rel1,rel2){\nvar attrs1 = cljs.core.keys(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel1));\nvar attrs2 = cljs.core.keys(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel2));\nvar idxs1 = cljs.core.to_array(cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel1),attrs1));\nvar idxs2 = cljs.core.to_array(cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel2),attrs2));\nreturn (new datascript.query.Relation(cljs.core.zipmap(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(attrs1,attrs2),cljs.core.range.cljs$core$IFn$_invoke$arity$0()),cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (acc,t1){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (acc__$1,t2){\nreturn cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(acc__$1,datascript.query.join_tuples(t1,idxs1,t2,idxs2));\n}),acc,new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639).cljs$core$IFn$_invoke$arity$1(rel2));\n}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639).cljs$core$IFn$_invoke$arity$1(rel1))),null,null,null));\n}));\n\n(datascript.query.prod_rel.cljs$lang$maxFixedArity = 2);\n\ndatascript.query.parse_rules = (function datascript$query$parse_rules(rules){\nvar rules__$1 = ((typeof rules === 'string')?cljs.reader.read_string.cljs$core$IFn$_invoke$arity$1(rules):rules);\ndatascript.parser.parse_rules(rules__$1);\n\nreturn cljs.core.group_by(cljs.core.ffirst,rules__$1);\n});\ndatascript.query.empty_rel = (function datascript$query$empty_rel(binding){\nvar vars = cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"symbol\",\"symbol\",-1038572696),datascript.parser.collect_vars_distinct(binding));\nreturn (new datascript.query.Relation(cljs.core.zipmap(vars,cljs.core.range.cljs$core$IFn$_invoke$arity$0()),cljs.core.PersistentVector.EMPTY,null,null,null));\n});\n\n/**\n * @interface\n */\ndatascript.query.IBinding = function(){};\n\nvar datascript$query$IBinding$in__GT_rel$dyn_42038 = (function (binding,value){\nvar x__4550__auto__ = (((binding == null))?null:binding);\nvar m__4551__auto__ = (datascript.query.in__GT_rel[goog.typeOf(x__4550__auto__)]);\nif((!((m__4551__auto__ == null)))){\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(binding,value) : m__4551__auto__.call(null,binding,value));\n} else {\nvar m__4549__auto__ = (datascript.query.in__GT_rel[\"_\"]);\nif((!((m__4549__auto__ == null)))){\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(binding,value) : m__4549__auto__.call(null,binding,value));\n} else {\nthrow cljs.core.missing_protocol(\"IBinding.in->rel\",binding);\n}\n}\n});\ndatascript.query.in__GT_rel = (function datascript$query$in__GT_rel(binding,value){\nif((((!((binding == null)))) && ((!((binding.datascript$query$IBinding$in__GT_rel$arity$2 == null)))))){\nreturn binding.datascript$query$IBinding$in__GT_rel$arity$2(binding,value);\n} else {\nreturn datascript$query$IBinding$in__GT_rel$dyn_42038(binding,value);\n}\n});\n\n(datascript.parser.BindIgnore.prototype.datascript$query$IBinding$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.BindIgnore.prototype.datascript$query$IBinding$in__GT_rel$arity$2 = (function (_,___$1){\nvar ___$2 = this;\nreturn datascript.query.prod_rel.cljs$core$IFn$_invoke$arity$0();\n}));\n\n(datascript.parser.BindScalar.prototype.datascript$query$IBinding$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.BindScalar.prototype.datascript$query$IBinding$in__GT_rel$arity$2 = (function (binding,value){\nvar binding__$1 = this;\nreturn (new datascript.query.Relation(cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(binding__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"variable\",\"variable\",-281346492),new cljs.core.Keyword(null,\"symbol\",\"symbol\",-1038572696)], null)),(0)]),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [value], null))], null),null,null,null));\n}));\n\n(datascript.parser.BindColl.prototype.datascript$query$IBinding$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.BindColl.prototype.datascript$query$IBinding$in__GT_rel$arity$2 = (function (binding,coll){\nvar binding__$1 = this;\nif((!(datascript.db.seqable_QMARK_(coll)))){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Cannot bind value \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([coll], 0)),\" to collection \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([datascript.parser.source(binding__$1)], 0))].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"binding\",\"query/binding\",698240489),new cljs.core.Keyword(null,\"value\",\"value\",305978217),coll,new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),datascript.parser.source(binding__$1)], null));\n} else {\nif(cljs.core.empty_QMARK_(coll)){\nreturn datascript.query.empty_rel(binding__$1);\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.sum_rel,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__41648_SHARP_){\nreturn datascript.query.in__GT_rel(binding__$1.binding,p1__41648_SHARP_);\n}),coll));\n\n}\n}\n}));\n\n(datascript.parser.BindTuple.prototype.datascript$query$IBinding$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.BindTuple.prototype.datascript$query$IBinding$in__GT_rel$arity$2 = (function (binding,coll){\nvar binding__$1 = this;\nif((!(datascript.db.seqable_QMARK_(coll)))){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Cannot bind value \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([coll], 0)),\" to tuple \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([datascript.parser.source(binding__$1)], 0))].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"binding\",\"query/binding\",698240489),new cljs.core.Keyword(null,\"value\",\"value\",305978217),coll,new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),datascript.parser.source(binding__$1)], null));\n} else {\nif((cljs.core.count(coll) < cljs.core.count(binding__$1.bindings))){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Not enough elements in a collection \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([coll], 0)),\" to bind tuple \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([datascript.parser.source(binding__$1)], 0))].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"binding\",\"query/binding\",698240489),new cljs.core.Keyword(null,\"value\",\"value\",305978217),coll,new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),datascript.parser.source(binding__$1)], null));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.prod_rel,cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (p1__41649_SHARP_,p2__41650_SHARP_){\nreturn datascript.query.in__GT_rel(p1__41649_SHARP_,p2__41650_SHARP_);\n}),binding__$1.bindings,coll));\n\n}\n}\n}));\ndatascript.query.resolve_in = (function datascript$query$resolve_in(context,p__41653){\nvar vec__41654 = p__41653;\nvar binding = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41654,(0),null);\nvar value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41654,(1),null);\nif((((binding instanceof datascript.parser.BindScalar)) && ((new cljs.core.Keyword(null,\"variable\",\"variable\",-281346492).cljs$core$IFn$_invoke$arity$1(binding) instanceof datascript.parser.SrcVar)))){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$5(context,new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424),cljs.core.assoc,cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(binding,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"variable\",\"variable\",-281346492),new cljs.core.Keyword(null,\"symbol\",\"symbol\",-1038572696)], null)),value);\n} else {\nif((((binding instanceof datascript.parser.BindScalar)) && ((new cljs.core.Keyword(null,\"variable\",\"variable\",-281346492).cljs$core$IFn$_invoke$arity$1(binding) instanceof datascript.parser.RulesVar)))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.Keyword(null,\"rules\",\"rules\",1198912366),datascript.query.parse_rules(value));\n} else {\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(context,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),cljs.core.conj,datascript.query.in__GT_rel(binding,value));\n\n}\n}\n});\ndatascript.query.resolve_ins = (function datascript$query$resolve_ins(context,bindings,values){\nvar cb = cljs.core.count(bindings);\nvar cv = cljs.core.count(values);\nif((cb < cv)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Extra inputs passed, expected: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__41658_SHARP_){\nreturn new cljs.core.Keyword(null,\"source\",\"source\",-433931539).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(p1__41658_SHARP_));\n}),bindings)], 0)),\", got: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cv], 0))].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"inputs\",\"query/inputs\",1042810394),new cljs.core.Keyword(null,\"expected\",\"expected\",1583670997),bindings,new cljs.core.Keyword(null,\"got\",\"got\",-1674745710),values], null));\n} else {\nif((cb > cv)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Too few inputs passed, expected: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__41659_SHARP_){\nreturn new cljs.core.Keyword(null,\"source\",\"source\",-433931539).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(p1__41659_SHARP_));\n}),bindings)], 0)),\", got: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cv], 0))].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"inputs\",\"query/inputs\",1042810394),new cljs.core.Keyword(null,\"expected\",\"expected\",1583670997),bindings,new cljs.core.Keyword(null,\"got\",\"got\",-1674745710),values], null));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(datascript.query.resolve_in,context,cljs.core.zipmap(bindings,values));\n\n}\n}\n});\n/**\n * List of symbols in current pattern that might potentiall be resolved to refs\n */\ndatascript.query._STAR_lookup_attrs_STAR_ = null;\n/**\n * Default pattern source. Lookup refs, patterns, rules will be resolved with it\n */\ndatascript.query._STAR_implicit_source_STAR_ = null;\ndatascript.query.getter_fn = (function datascript$query$getter_fn(attrs,attr){\nvar idx = (attrs.cljs$core$IFn$_invoke$arity$1 ? attrs.cljs$core$IFn$_invoke$arity$1(attr) : attrs.call(null,attr));\nif(cljs.core.contains_QMARK_(datascript.query._STAR_lookup_attrs_STAR_,attr)){\nreturn (function (tuple){\nvar eid = (tuple[idx]);\nif(typeof eid === 'number'){\nreturn eid;\n} else {\nif(cljs.core.sequential_QMARK_(eid)){\nreturn datascript.db.entid(datascript.query._STAR_implicit_source_STAR_,eid);\n} else {\nif(me.tonsky.persistent_sorted_set.arrays.array_QMARK_(eid)){\nreturn datascript.db.entid(datascript.query._STAR_implicit_source_STAR_,eid);\n} else {\nreturn eid;\n\n}\n}\n}\n});\n} else {\nreturn (function (tuple){\nreturn (tuple[idx]);\n});\n}\n});\ndatascript.query.tuple_key_fn = (function datascript$query$tuple_key_fn(getters){\nif((cljs.core.count(getters) === (1))){\nreturn cljs.core.first(getters);\n} else {\nvar getters__$1 = cljs.core.to_array(getters);\nreturn (function (tuple){\nreturn cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(getters__$1.map((function (p1__41662_SHARP_){\nreturn (p1__41662_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__41662_SHARP_.cljs$core$IFn$_invoke$arity$1(tuple) : p1__41662_SHARP_.call(null,tuple));\n})));\n});\n}\n});\ndatascript.query.hash_attrs = (function datascript$query$hash_attrs(key_fn,tuples){\nvar tuples__$1 = tuples;\nvar hash_table = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);\nwhile(true){\nvar temp__5755__auto__ = cljs.core.first(tuples__$1);\nif((temp__5755__auto__ == null)){\nreturn cljs.core.persistent_BANG_(hash_table);\n} else {\nvar tuple = temp__5755__auto__;\nvar key = (key_fn.cljs$core$IFn$_invoke$arity$1 ? key_fn.cljs$core$IFn$_invoke$arity$1(tuple) : key_fn.call(null,tuple));\nvar G__42041 = cljs.core.next(tuples__$1);\nvar G__42042 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(hash_table,key,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(hash_table,key,cljs.core.List.EMPTY),tuple));\ntuples__$1 = G__42041;\nhash_table = G__42042;\ncontinue;\n}\nbreak;\n}\n});\ndatascript.query.hash_join = (function datascript$query$hash_join(rel1,rel2){\nvar tuples1 = new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639).cljs$core$IFn$_invoke$arity$1(rel1);\nvar tuples2 = new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639).cljs$core$IFn$_invoke$arity$1(rel2);\nvar attrs1 = new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel1);\nvar attrs2 = new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel2);\nvar common_attrs = cljs.core.vec(datascript.query.intersect_keys(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel1),new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel2)));\nvar common_gtrs1 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__41665_SHARP_){\nreturn datascript.query.getter_fn(attrs1,p1__41665_SHARP_);\n}),common_attrs);\nvar common_gtrs2 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__41666_SHARP_){\nreturn datascript.query.getter_fn(attrs2,p1__41666_SHARP_);\n}),common_attrs);\nvar keep_attrs1 = cljs.core.keys(attrs1);\nvar keep_attrs2 = cljs.core.vec(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(cljs.core.set(cljs.core.keys(attrs2)),cljs.core.set(cljs.core.keys(attrs1))));\nvar keep_idxs1 = cljs.core.to_array(cljs.core.map.cljs$core$IFn$_invoke$arity$2(attrs1,keep_attrs1));\nvar keep_idxs2 = cljs.core.to_array(cljs.core.map.cljs$core$IFn$_invoke$arity$2(attrs2,keep_attrs2));\nvar key_fn1 = datascript.query.tuple_key_fn(common_gtrs1);\nvar hash = datascript.query.hash_attrs(key_fn1,tuples1);\nvar key_fn2 = datascript.query.tuple_key_fn(common_gtrs2);\nvar new_tuples = cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (acc,tuple2){\nvar key = (key_fn2.cljs$core$IFn$_invoke$arity$1 ? key_fn2.cljs$core$IFn$_invoke$arity$1(tuple2) : key_fn2.call(null,tuple2));\nvar temp__5755__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(hash,key);\nif((temp__5755__auto__ == null)){\nreturn acc;\n} else {\nvar tuples1__$1 = temp__5755__auto__;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (acc__$1,tuple1){\nreturn cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(acc__$1,datascript.query.join_tuples(tuple1,keep_idxs1,tuple2,keep_idxs2));\n}),acc,tuples1__$1);\n}\n}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),tuples2));\nreturn (new datascript.query.Relation(cljs.core.zipmap(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(keep_attrs1,keep_attrs2),cljs.core.range.cljs$core$IFn$_invoke$arity$0()),new_tuples,null,null,null));\n});\ndatascript.query.subtract_rel = (function datascript$query$subtract_rel(a,b){\nvar map__41670 = a;\nvar map__41670__$1 = cljs.core.__destructure_map(map__41670);\nvar attrs_a = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41670__$1,new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713));\nvar tuples_a = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41670__$1,new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639));\nvar map__41671 = b;\nvar map__41671__$1 = cljs.core.__destructure_map(map__41671);\nvar attrs_b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41671__$1,new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713));\nvar tuples_b = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__41671__$1,new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639));\nvar attrs = datascript.query.intersect_keys(attrs_a,attrs_b);\nvar getters_b = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__41667_SHARP_){\nreturn datascript.query.getter_fn(attrs_b,p1__41667_SHARP_);\n}),attrs);\nvar key_fn_b = datascript.query.tuple_key_fn(getters_b);\nvar hash = datascript.query.hash_attrs(key_fn_b,tuples_b);\nvar getters_a = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__41668_SHARP_){\nreturn datascript.query.getter_fn(attrs_a,p1__41668_SHARP_);\n}),attrs);\nvar key_fn_a = datascript.query.tuple_key_fn(getters_a);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a,new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639),cljs.core.filterv((function (p1__41669_SHARP_){\nreturn ((function (){var G__41672 = (key_fn_a.cljs$core$IFn$_invoke$arity$1 ? key_fn_a.cljs$core$IFn$_invoke$arity$1(p1__41669_SHARP_) : key_fn_a.call(null,p1__41669_SHARP_));\nreturn (hash.cljs$core$IFn$_invoke$arity$1 ? hash.cljs$core$IFn$_invoke$arity$1(G__41672) : hash.call(null,G__41672));\n})() == null);\n}),tuples_a));\n});\ndatascript.query.lookup_pattern_db = (function datascript$query$lookup_pattern_db(db,pattern){\nvar search_pattern = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__41674_SHARP_){\nif((p1__41674_SHARP_ instanceof cljs.core.Symbol)){\nreturn null;\n} else {\nreturn p1__41674_SHARP_;\n}\n}),pattern);\nvar datoms = datascript.db._search(db,search_pattern);\nvar attr__GT_prop = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__41675){\nvar vec__41677 = p__41675;\nvar s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41677,(0),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41677,(1),null);\nreturn datascript.query.free_var_QMARK_(s);\n}),cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,pattern,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"e\",\"a\",\"v\",\"tx\"], null))));\nreturn (new datascript.query.Relation(attr__GT_prop,datoms,null,null,null));\n});\ndatascript.query.matches_pattern_QMARK_ = (function datascript$query$matches_pattern_QMARK_(pattern,tuple){\nvar tuple__$1 = tuple;\nvar pattern__$1 = pattern;\nwhile(true){\nif(cljs.core.truth_((function (){var and__4251__auto__ = tuple__$1;\nif(cljs.core.truth_(and__4251__auto__)){\nreturn pattern__$1;\n} else {\nreturn and__4251__auto__;\n}\n})())){\nvar t = cljs.core.first(tuple__$1);\nvar p = cljs.core.first(pattern__$1);\nif((((p instanceof cljs.core.Symbol)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(t,p)))){\nvar G__42046 = cljs.core.next(tuple__$1);\nvar G__42047 = cljs.core.next(pattern__$1);\ntuple__$1 = G__42046;\npattern__$1 = G__42047;\ncontinue;\n} else {\nreturn false;\n}\n} else {\nreturn true;\n}\nbreak;\n}\n});\ndatascript.query.lookup_pattern_coll = (function datascript$query$lookup_pattern_coll(coll,pattern){\nvar data = cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__41680_SHARP_){\nreturn datascript.query.matches_pattern_QMARK_(pattern,p1__41680_SHARP_);\n}),coll);\nvar attr__GT_idx = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__41682){\nvar vec__41683 = p__41682;\nvar s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41683,(0),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41683,(1),null);\nreturn datascript.query.free_var_QMARK_(s);\n}),cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,pattern,cljs.core.range.cljs$core$IFn$_invoke$arity$0())));\nreturn (new datascript.query.Relation(attr__GT_idx,cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(cljs.core.to_array,data),null,null,null));\n});\ndatascript.query.normalize_pattern_clause = (function datascript$query$normalize_pattern_clause(clause){\nif(datascript.query.source_QMARK_(cljs.core.first(clause))){\nreturn clause;\n} else {\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"$\",\"$\",-1580747756,null)], null),clause);\n}\n});\ndatascript.query.lookup_pattern = (function datascript$query$lookup_pattern(source,pattern){\nif((((!((source == null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === source.datascript$db$ISearch$))))?true:(((!source.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(datascript.db.ISearch,source):false)):cljs.core.native_satisfies_QMARK_(datascript.db.ISearch,source))){\nreturn datascript.query.lookup_pattern_db(source,pattern);\n} else {\nreturn datascript.query.lookup_pattern_coll(source,pattern);\n\n}\n});\ndatascript.query.collapse_rels = (function datascript$query$collapse_rels(rels,new_rel){\nvar rels__$1 = rels;\nvar new_rel__$1 = new_rel;\nvar acc = cljs.core.PersistentVector.EMPTY;\nwhile(true){\nvar temp__5755__auto__ = cljs.core.first(rels__$1);\nif((temp__5755__auto__ == null)){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc,new_rel__$1);\n} else {\nvar rel = temp__5755__auto__;\nif(cljs.core.truth_(cljs.core.not_empty(datascript.query.intersect_keys(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(new_rel__$1),new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel))))){\nvar G__42049 = cljs.core.next(rels__$1);\nvar G__42050 = datascript.query.hash_join(rel,new_rel__$1);\nvar G__42051 = acc;\nrels__$1 = G__42049;\nnew_rel__$1 = G__42050;\nacc = G__42051;\ncontinue;\n} else {\nvar G__42053 = cljs.core.next(rels__$1);\nvar G__42054 = new_rel__$1;\nvar G__42055 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc,rel);\nrels__$1 = G__42053;\nnew_rel__$1 = G__42054;\nacc = G__42055;\ncontinue;\n}\n}\nbreak;\n}\n});\ndatascript.query.rel_with_attr = (function datascript$query$rel_with_attr(context,sym){\nreturn cljs.core.some((function (p1__41688_SHARP_){\nif(cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(p1__41688_SHARP_),sym)){\nreturn p1__41688_SHARP_;\n} else {\nreturn null;\n}\n}),new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(context));\n});\ndatascript.query.context_resolve_val = (function datascript$query$context_resolve_val(context,sym){\nvar temp__5757__auto__ = datascript.query.rel_with_attr(context,sym);\nif((temp__5757__auto__ == null)){\nreturn null;\n} else {\nvar rel = temp__5757__auto__;\nvar temp__5757__auto____$1 = cljs.core.first(new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639).cljs$core$IFn$_invoke$arity$1(rel));\nif((temp__5757__auto____$1 == null)){\nreturn null;\n} else {\nvar tuple = temp__5757__auto____$1;\nreturn (tuple[(function (){var fexpr__41690 = new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel);\nreturn (fexpr__41690.cljs$core$IFn$_invoke$arity$1 ? fexpr__41690.cljs$core$IFn$_invoke$arity$1(sym) : fexpr__41690.call(null,sym));\n})()]);\n}\n}\n});\ndatascript.query.rel_contains_attrs_QMARK_ = (function datascript$query$rel_contains_attrs_QMARK_(rel,attrs){\nreturn cljs.core.some((function (p1__41691_SHARP_){\nreturn cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel),p1__41691_SHARP_);\n}),attrs);\n});\ndatascript.query.rel_prod_by_attrs = (function datascript$query$rel_prod_by_attrs(context,attrs){\nvar rels = cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__41692_SHARP_){\nreturn datascript.query.rel_contains_attrs_QMARK_(p1__41692_SHARP_,attrs);\n}),new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(context));\nvar production = cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.prod_rel,rels);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.update.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),(function (p1__41693_SHARP_){\nreturn cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.set(rels),p1__41693_SHARP_);\n})),production], null);\n});\ndatascript.query._call_fn = (function datascript$query$_call_fn(context,rel,f,args){\nvar sources = new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424).cljs$core$IFn$_invoke$arity$1(context);\nvar attrs = new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel);\nvar len = cljs.core.count(args);\nvar static_args = me.tonsky.persistent_sorted_set.arrays.make_array(len);\nvar tuples_args = me.tonsky.persistent_sorted_set.arrays.make_array(len);\nvar n__4741__auto___42056 = len;\nvar i_42057 = (0);\nwhile(true){\nif((i_42057 < n__4741__auto___42056)){\nvar arg_42058 = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(args,i_42057);\nif((arg_42058 instanceof cljs.core.Symbol)){\nvar temp__5755__auto___42059 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(sources,arg_42058);\nif((temp__5755__auto___42059 == null)){\n(tuples_args[i_42057] = cljs.core.get.cljs$core$IFn$_invoke$arity$2(attrs,arg_42058));\n} else {\nvar source_42060 = temp__5755__auto___42059;\n(static_args[i_42057] = source_42060);\n}\n} else {\n(static_args[i_42057] = arg_42058);\n}\n\nvar G__42061 = (i_42057 + (1));\ni_42057 = G__42061;\ncontinue;\n} else {\n}\nbreak;\n}\n\nif((f === cljs.core.vector)){\nreturn (function (tuple){\nvar args__$1 = me.tonsky.persistent_sorted_set.arrays.aclone(static_args);\nvar n__4741__auto___42062 = len;\nvar i_42063 = (0);\nwhile(true){\nif((i_42063 < n__4741__auto___42062)){\nvar temp__5757__auto___42064 = (tuples_args[i_42063]);\nif((temp__5757__auto___42064 == null)){\n} else {\nvar tuple_idx_42065 = temp__5757__auto___42064;\nvar v_42066 = (tuple[tuple_idx_42065]);\n(args__$1[i_42063] = v_42066);\n}\n\nvar G__42067 = (i_42063 + (1));\ni_42063 = G__42067;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args__$1);\n});\n} else {\nreturn (function (tuple){\nvar n__4741__auto___42068 = len;\nvar i_42069 = (0);\nwhile(true){\nif((i_42069 < n__4741__auto___42068)){\nvar temp__5757__auto___42070 = (tuples_args[i_42069]);\nif((temp__5757__auto___42070 == null)){\n} else {\nvar tuple_idx_42071 = temp__5757__auto___42070;\nvar v_42072 = (tuple[tuple_idx_42071]);\n(static_args[i_42069] = v_42072);\n}\n\nvar G__42073 = (i_42069 + (1));\ni_42069 = G__42073;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,static_args);\n});\n}\n});\ndatascript.query.resolve_sym = (function datascript$query$resolve_sym(sym){\nreturn null;\n});\ndatascript.query.filter_by_pred = (function datascript$query$filter_by_pred(context,clause){\nvar vec__41698 = clause;\nvar vec__41701 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41698,(0),null);\nvar seq__41702 = cljs.core.seq(vec__41701);\nvar first__41703 = cljs.core.first(seq__41702);\nvar seq__41702__$1 = cljs.core.next(seq__41702);\nvar f = first__41703;\nvar args = seq__41702__$1;\nvar pred = (function (){var or__4253__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(datascript.built_ins.query_fns,f);\nif(cljs.core.truth_(or__4253__auto__)){\nreturn or__4253__auto__;\n} else {\nvar or__4253__auto____$1 = datascript.query.context_resolve_val(context,f);\nif(cljs.core.truth_(or__4253__auto____$1)){\nreturn or__4253__auto____$1;\n} else {\nvar or__4253__auto____$2 = datascript.query.resolve_sym(f);\nif(cljs.core.truth_(or__4253__auto____$2)){\nreturn or__4253__auto____$2;\n} else {\nif((datascript.query.rel_with_attr(context,f) == null)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Unknown predicate '\",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f], 0)),\" in \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([clause], 0))].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"where\",\"query/where\",-1935159429),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),clause,new cljs.core.Keyword(null,\"var\",\"var\",-769682797),f], null));\n} else {\nreturn null;\n}\n}\n}\n}\n})();\nvar vec__41704 = datascript.query.rel_prod_by_attrs(context,cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol_QMARK_,args));\nvar context__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41704,(0),null);\nvar production = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41704,(1),null);\nvar new_rel = (cljs.core.truth_(pred)?(function (){var tuple_pred = datascript.query._call_fn(context__$1,production,pred,args);\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(production,new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639),(function (p1__41697_SHARP_){\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$2(tuple_pred,p1__41697_SHARP_);\n}));\n})():cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(production,new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639),cljs.core.PersistentVector.EMPTY));\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(context__$1,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),cljs.core.conj,new_rel);\n});\ndatascript.query.bind_by_fn = (function datascript$query$bind_by_fn(context,clause){\nvar vec__41708 = clause;\nvar vec__41711 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41708,(0),null);\nvar seq__41712 = cljs.core.seq(vec__41711);\nvar first__41713 = cljs.core.first(seq__41712);\nvar seq__41712__$1 = cljs.core.next(seq__41712);\nvar f = first__41713;\nvar args = seq__41712__$1;\nvar out = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41708,(1),null);\nvar binding = datascript.parser.parse_binding(out);\nvar fun = (function (){var or__4253__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(datascript.built_ins.query_fns,f);\nif(cljs.core.truth_(or__4253__auto__)){\nreturn or__4253__auto__;\n} else {\nvar or__4253__auto____$1 = datascript.query.context_resolve_val(context,f);\nif(cljs.core.truth_(or__4253__auto____$1)){\nreturn or__4253__auto____$1;\n} else {\nvar or__4253__auto____$2 = datascript.query.resolve_sym(f);\nif(cljs.core.truth_(or__4253__auto____$2)){\nreturn or__4253__auto____$2;\n} else {\nif((datascript.query.rel_with_attr(context,f) == null)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Unknown function '\",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f], 0)),\" in \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([clause], 0))].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"where\",\"query/where\",-1935159429),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),clause,new cljs.core.Keyword(null,\"var\",\"var\",-769682797),f], null));\n} else {\nreturn null;\n}\n}\n}\n}\n})();\nvar vec__41714 = datascript.query.rel_prod_by_attrs(context,cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol_QMARK_,args));\nvar context__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41714,(0),null);\nvar production = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41714,(1),null);\nvar new_rel = (cljs.core.truth_(fun)?(function (){var tuple_fn = datascript.query._call_fn(context__$1,production,fun,args);\nvar rels = (function (){var iter__4652__auto__ = (function datascript$query$bind_by_fn_$_iter__41718(s__41719){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__41719__$1 = s__41719;\nwhile(true){\nvar temp__5753__auto__ = cljs.core.seq(s__41719__$1);\nif(temp__5753__auto__){\nvar s__41719__$2 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__41719__$2)){\nvar c__4650__auto__ = cljs.core.chunk_first(s__41719__$2);\nvar size__4651__auto__ = cljs.core.count(c__4650__auto__);\nvar b__41721 = cljs.core.chunk_buffer(size__4651__auto__);\nif((function (){var i__41720 = (0);\nwhile(true){\nif((i__41720 < size__4651__auto__)){\nvar tuple = cljs.core._nth(c__4650__auto__,i__41720);\nvar val = tuple_fn(tuple);\nif((!((val == null)))){\ncljs.core.chunk_append(b__41721,datascript.query.prod_rel.cljs$core$IFn$_invoke$arity$2((new datascript.query.Relation(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(production),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [tuple], null),null,null,null)),datascript.query.in__GT_rel(binding,val)));\n\nvar G__42084 = (i__41720 + (1));\ni__41720 = G__42084;\ncontinue;\n} else {\nvar G__42085 = (i__41720 + (1));\ni__41720 = G__42085;\ncontinue;\n}\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__41721),datascript$query$bind_by_fn_$_iter__41718(cljs.core.chunk_rest(s__41719__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__41721),null);\n}\n} else {\nvar tuple = cljs.core.first(s__41719__$2);\nvar val = tuple_fn(tuple);\nif((!((val == null)))){\nreturn cljs.core.cons(datascript.query.prod_rel.cljs$core$IFn$_invoke$arity$2((new datascript.query.Relation(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(production),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [tuple], null),null,null,null)),datascript.query.in__GT_rel(binding,val)),datascript$query$bind_by_fn_$_iter__41718(cljs.core.rest(s__41719__$2)));\n} else {\nvar G__42089 = cljs.core.rest(s__41719__$2);\ns__41719__$1 = G__42089;\ncontinue;\n}\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__4652__auto__(new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639).cljs$core$IFn$_invoke$arity$1(production));\n})();\nif(cljs.core.empty_QMARK_(rels)){\nreturn datascript.query.prod_rel.cljs$core$IFn$_invoke$arity$2(production,datascript.query.empty_rel(binding));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.sum_rel,rels);\n}\n})():datascript.query.prod_rel.cljs$core$IFn$_invoke$arity$2(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(production,new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639),cljs.core.PersistentVector.EMPTY),datascript.query.empty_rel(binding)));\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(context__$1,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),datascript.query.collapse_rels,new_rel);\n});\ndatascript.query.rule_QMARK_ = (function datascript$query$rule_QMARK_(context,clause){\nif((!(cljs.core.sequential_QMARK_(clause)))){\nreturn false;\n} else {\nvar head = ((datascript.query.source_QMARK_(cljs.core.first(clause)))?cljs.core.second(clause):cljs.core.first(clause));\nif((!((head instanceof cljs.core.Symbol)))){\nreturn false;\n} else {\nif(datascript.query.free_var_QMARK_(head)){\nreturn false;\n} else {\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(null,\"and\",\"and\",668631710,null),null,new cljs.core.Symbol(null,\"not\",\"not\",1044554643,null),null,new cljs.core.Symbol(null,\"not-join\",\"not-join\",-645515756,null),null,new cljs.core.Symbol(null,\"or-join\",\"or-join\",591375469,null),null,new cljs.core.Symbol(null,\"or\",\"or\",1876275696,null),null,new cljs.core.Symbol(null,\"_\",\"_\",-1201019570,null),null], null), null),head)){\nreturn false;\n} else {\nif((!(cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"rules\",\"rules\",1198912366).cljs$core$IFn$_invoke$arity$1(context),head)))){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Unknown rule '\",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([head], 0)),\" in \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([clause], 0))].join(''),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"where\",\"query/where\",-1935159429),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),clause], null));\n} else {\nreturn true;\n\n}\n}\n}\n}\n}\n});\ndatascript.query.rule_seqid = cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0));\ndatascript.query.expand_rule = (function datascript$query$expand_rule(clause,context,used_args){\nvar vec__41725 = clause;\nvar seq__41726 = cljs.core.seq(vec__41725);\nvar first__41727 = cljs.core.first(seq__41726);\nvar seq__41726__$1 = cljs.core.next(seq__41726);\nvar rule = first__41727;\nvar call_args = seq__41726__$1;\nvar seqid = cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(datascript.query.rule_seqid,cljs.core.inc);\nvar branches = cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"rules\",\"rules\",1198912366).cljs$core$IFn$_invoke$arity$1(context),rule);\nvar iter__4652__auto__ = (function datascript$query$expand_rule_$_iter__41728(s__41729){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__41729__$1 = s__41729;\nwhile(true){\nvar temp__5753__auto__ = cljs.core.seq(s__41729__$1);\nif(temp__5753__auto__){\nvar s__41729__$2 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__41729__$2)){\nvar c__4650__auto__ = cljs.core.chunk_first(s__41729__$2);\nvar size__4651__auto__ = cljs.core.count(c__4650__auto__);\nvar b__41731 = cljs.core.chunk_buffer(size__4651__auto__);\nif((function (){var i__41730 = (0);\nwhile(true){\nif((i__41730 < size__4651__auto__)){\nvar branch = cljs.core._nth(c__4650__auto__,i__41730);\nvar vec__41732 = branch;\nvar seq__41733 = cljs.core.seq(vec__41732);\nvar first__41734 = cljs.core.first(seq__41733);\nvar seq__41733__$1 = cljs.core.next(seq__41733);\nvar vec__41735 = first__41734;\nvar seq__41736 = cljs.core.seq(vec__41735);\nvar first__41737 = cljs.core.first(seq__41736);\nvar seq__41736__$1 = cljs.core.next(seq__41736);\nvar _ = first__41737;\nvar rule_args = seq__41736__$1;\nvar clauses = seq__41733__$1;\nvar replacements = cljs.core.zipmap(rule_args,call_args);\ncljs.core.chunk_append(b__41731,clojure.walk.postwalk(((function (i__41730,vec__41732,seq__41733,first__41734,seq__41733__$1,vec__41735,seq__41736,first__41737,seq__41736__$1,_,rule_args,clauses,replacements,branch,c__4650__auto__,size__4651__auto__,b__41731,s__41729__$2,temp__5753__auto__,vec__41725,seq__41726,first__41727,seq__41726__$1,rule,call_args,seqid,branches){\nreturn (function (p1__41724_SHARP_){\nif(datascript.query.free_var_QMARK_(p1__41724_SHARP_)){\nvar x__37893__auto__ = (replacements.cljs$core$IFn$_invoke$arity$1 ? replacements.cljs$core$IFn$_invoke$arity$1(p1__41724_SHARP_) : replacements.call(null,p1__41724_SHARP_));\nif((x__37893__auto__ == null)){\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.name(p1__41724_SHARP_),\"__auto__\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(seqid)].join(''));\n} else {\nreturn x__37893__auto__;\n}\n} else {\nreturn p1__41724_SHARP_;\n}\n});})(i__41730,vec__41732,seq__41733,first__41734,seq__41733__$1,vec__41735,seq__41736,first__41737,seq__41736__$1,_,rule_args,clauses,replacements,branch,c__4650__auto__,size__4651__auto__,b__41731,s__41729__$2,temp__5753__auto__,vec__41725,seq__41726,first__41727,seq__41726__$1,rule,call_args,seqid,branches))\n,clauses));\n\nvar G__42100 = (i__41730 + (1));\ni__41730 = G__42100;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__41731),datascript$query$expand_rule_$_iter__41728(cljs.core.chunk_rest(s__41729__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__41731),null);\n}\n} else {\nvar branch = cljs.core.first(s__41729__$2);\nvar vec__41739 = branch;\nvar seq__41740 = cljs.core.seq(vec__41739);\nvar first__41741 = cljs.core.first(seq__41740);\nvar seq__41740__$1 = cljs.core.next(seq__41740);\nvar vec__41742 = first__41741;\nvar seq__41743 = cljs.core.seq(vec__41742);\nvar first__41744 = cljs.core.first(seq__41743);\nvar seq__41743__$1 = cljs.core.next(seq__41743);\nvar _ = first__41744;\nvar rule_args = seq__41743__$1;\nvar clauses = seq__41740__$1;\nvar replacements = cljs.core.zipmap(rule_args,call_args);\nreturn cljs.core.cons(clojure.walk.postwalk(((function (vec__41739,seq__41740,first__41741,seq__41740__$1,vec__41742,seq__41743,first__41744,seq__41743__$1,_,rule_args,clauses,replacements,branch,s__41729__$2,temp__5753__auto__,vec__41725,seq__41726,first__41727,seq__41726__$1,rule,call_args,seqid,branches){\nreturn (function (p1__41724_SHARP_){\nif(datascript.query.free_var_QMARK_(p1__41724_SHARP_)){\nvar x__37893__auto__ = (replacements.cljs$core$IFn$_invoke$arity$1 ? replacements.cljs$core$IFn$_invoke$arity$1(p1__41724_SHARP_) : replacements.call(null,p1__41724_SHARP_));\nif((x__37893__auto__ == null)){\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.name(p1__41724_SHARP_),\"__auto__\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(seqid)].join(''));\n} else {\nreturn x__37893__auto__;\n}\n} else {\nreturn p1__41724_SHARP_;\n}\n});})(vec__41739,seq__41740,first__41741,seq__41740__$1,vec__41742,seq__41743,first__41744,seq__41743__$1,_,rule_args,clauses,replacements,branch,s__41729__$2,temp__5753__auto__,vec__41725,seq__41726,first__41727,seq__41726__$1,rule,call_args,seqid,branches))\n,clauses),datascript$query$expand_rule_$_iter__41728(cljs.core.rest(s__41729__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__4652__auto__(branches);\n});\ndatascript.query.remove_pairs = (function datascript$query$remove_pairs(xs,ys){\nvar pairs = cljs.core.remove.cljs$core$IFn$_invoke$arity$2((function (p__41746){\nvar vec__41747 = p__41746;\nvar x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41747,(0),null);\nvar y = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41747,(1),null);\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y);\n}),cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,xs,ys));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,pairs),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.second,pairs)], null);\n});\ndatascript.query.rule_gen_guards = (function datascript$query$rule_gen_guards(rule_clause,used_args){\nvar vec__41750 = rule_clause;\nvar seq__41751 = cljs.core.seq(vec__41750);\nvar first__41752 = cljs.core.first(seq__41751);\nvar seq__41751__$1 = cljs.core.next(seq__41751);\nvar rule = first__41752;\nvar call_args = seq__41751__$1;\nvar prev_call_args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(used_args,rule);\nvar iter__4652__auto__ = (function datascript$query$rule_gen_guards_$_iter__41753(s__41754){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__41754__$1 = s__41754;\nwhile(true){\nvar temp__5753__auto__ = cljs.core.seq(s__41754__$1);\nif(temp__5753__auto__){\nvar s__41754__$2 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__41754__$2)){\nvar c__4650__auto__ = cljs.core.chunk_first(s__41754__$2);\nvar size__4651__auto__ = cljs.core.count(c__4650__auto__);\nvar b__41756 = cljs.core.chunk_buffer(size__4651__auto__);\nif((function (){var i__41755 = (0);\nwhile(true){\nif((i__41755 < size__4651__auto__)){\nvar prev_args = cljs.core._nth(c__4650__auto__,i__41755);\nvar vec__41757 = datascript.query.remove_pairs(call_args,prev_args);\nvar call_args__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41757,(0),null);\nvar prev_args__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41757,(1),null);\ncljs.core.chunk_append(b__41756,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"-differ?\",\"-differ?\",1465687357,null)], null),call_args__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prev_args__$1], 0))], null));\n\nvar G__42109 = (i__41755 + (1));\ni__41755 = G__42109;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__41756),datascript$query$rule_gen_guards_$_iter__41753(cljs.core.chunk_rest(s__41754__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__41756),null);\n}\n} else {\nvar prev_args = cljs.core.first(s__41754__$2);\nvar vec__41760 = datascript.query.remove_pairs(call_args,prev_args);\nvar call_args__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41760,(0),null);\nvar prev_args__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41760,(1),null);\nreturn cljs.core.cons(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"-differ?\",\"-differ?\",1465687357,null)], null),call_args__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prev_args__$1], 0))], null),datascript$query$rule_gen_guards_$_iter__41753(cljs.core.rest(s__41754__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__4652__auto__(prev_call_args);\n});\ndatascript.query.walk_collect = (function datascript$query$walk_collect(form,pred){\nvar res = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY);\nclojure.walk.postwalk((function (p1__41763_SHARP_){\nif(cljs.core.truth_((pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(p1__41763_SHARP_) : pred.call(null,p1__41763_SHARP_)))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(res,cljs.core.conj,p1__41763_SHARP_);\n} else {\n}\n\nreturn p1__41763_SHARP_;\n}),form);\n\nreturn cljs.core.deref(res);\n});\ndatascript.query.collect_vars = (function datascript$query$collect_vars(clause){\nreturn cljs.core.set(datascript.query.walk_collect(clause,datascript.query.free_var_QMARK_));\n});\ndatascript.query.split_guards = (function datascript$query$split_guards(clauses,guards){\nvar bound_vars = datascript.query.collect_vars(clauses);\nvar pred = (function (p__41764){\nvar vec__41765 = p__41764;\nvar vec__41768 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41765,(0),null);\nvar seq__41769 = cljs.core.seq(vec__41768);\nvar first__41770 = cljs.core.first(seq__41769);\nvar seq__41769__$1 = cljs.core.next(seq__41769);\nvar _ = first__41770;\nvar vars = seq__41769__$1;\nreturn cljs.core.every_QMARK_(bound_vars,vars);\n});\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred,guards),cljs.core.remove.cljs$core$IFn$_invoke$arity$2(pred,guards)], null);\n});\ndatascript.query.solve_rule = (function datascript$query$solve_rule(context,clause){\nvar final_attrs = cljs.core.filter.cljs$core$IFn$_invoke$arity$2(datascript.query.free_var_QMARK_,clause);\nvar final_attrs_map = cljs.core.zipmap(final_attrs,cljs.core.range.cljs$core$IFn$_invoke$arity$0());\nvar solve = (function (prefix_context,clauses){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(datascript.query._resolve_clause,prefix_context,clauses);\n});\nvar empty_rels_QMARK_ = (function (context__$1){\nreturn cljs.core.some((function (p1__41771_SHARP_){\nreturn cljs.core.empty_QMARK_(new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639).cljs$core$IFn$_invoke$arity$1(p1__41771_SHARP_));\n}),new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(context__$1));\n});\nvar stack = (new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"prefix-clauses\",\"prefix-clauses\",1294180028),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,\"prefix-context\",\"prefix-context\",-1269613591),context,new cljs.core.Keyword(null,\"clauses\",\"clauses\",1454841241),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null),new cljs.core.Keyword(null,\"used-args\",\"used-args\",23596256),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"pending-guards\",\"pending-guards\",-1255527308),cljs.core.PersistentArrayMap.EMPTY], null),null,(1),null));\nvar rel = (new datascript.query.Relation(final_attrs_map,cljs.core.PersistentVector.EMPTY,null,null,null));\nwhile(true){\nvar temp__5755__auto__ = cljs.core.first(stack);\nif((temp__5755__auto__ == null)){\nreturn rel;\n} else {\nvar frame = temp__5755__auto__;\nvar vec__41795 = cljs.core.split_with(((function (stack,rel,frame,temp__5755__auto__,final_attrs,final_attrs_map,solve,empty_rels_QMARK_){\nreturn (function (p1__41773_SHARP_){\nreturn (!(datascript.query.rule_QMARK_(context,p1__41773_SHARP_)));\n});})(stack,rel,frame,temp__5755__auto__,final_attrs,final_attrs_map,solve,empty_rels_QMARK_))\n,new cljs.core.Keyword(null,\"clauses\",\"clauses\",1454841241).cljs$core$IFn$_invoke$arity$1(frame));\nvar clauses = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41795,(0),null);\nvar vec__41798 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41795,(1),null);\nvar seq__41799 = cljs.core.seq(vec__41798);\nvar first__41800 = cljs.core.first(seq__41799);\nvar seq__41799__$1 = cljs.core.next(seq__41799);\nvar rule_clause = first__41800;\nvar next_clauses = seq__41799__$1;\nif((rule_clause == null)){\nvar context__$1 = solve(new cljs.core.Keyword(null,\"prefix-context\",\"prefix-context\",-1269613591).cljs$core$IFn$_invoke$arity$1(frame),clauses);\nvar tuples = (datascript.query._collect.cljs$core$IFn$_invoke$arity$2 ? datascript.query._collect.cljs$core$IFn$_invoke$arity$2(context__$1,final_attrs) : datascript.query._collect.call(null,context__$1,final_attrs));\nvar new_rel = (new datascript.query.Relation(final_attrs_map,tuples,null,null,null));\nvar G__42120 = cljs.core.next(stack);\nvar G__42121 = datascript.query.sum_rel(rel,new_rel);\nstack = G__42120;\nrel = G__42121;\ncontinue;\n} else {\nvar vec__41801 = rule_clause;\nvar seq__41802 = cljs.core.seq(vec__41801);\nvar first__41803 = cljs.core.first(seq__41802);\nvar seq__41802__$1 = cljs.core.next(seq__41802);\nvar rule = first__41803;\nvar call_args = seq__41802__$1;\nvar guards = datascript.query.rule_gen_guards(rule_clause,new cljs.core.Keyword(null,\"used-args\",\"used-args\",23596256).cljs$core$IFn$_invoke$arity$1(frame));\nvar vec__41804 = datascript.query.split_guards(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"prefix-clauses\",\"prefix-clauses\",1294180028).cljs$core$IFn$_invoke$arity$1(frame),clauses),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(guards,new cljs.core.Keyword(null,\"pending-guards\",\"pending-guards\",-1255527308).cljs$core$IFn$_invoke$arity$1(frame)));\nvar active_gs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41804,(0),null);\nvar pending_gs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41804,(1),null);\nif(cljs.core.truth_(cljs.core.some(((function (stack,rel,vec__41801,seq__41802,first__41803,seq__41802__$1,rule,call_args,guards,vec__41804,active_gs,pending_gs,vec__41795,clauses,vec__41798,seq__41799,first__41800,seq__41799__$1,rule_clause,next_clauses,frame,temp__5755__auto__,final_attrs,final_attrs_map,solve,empty_rels_QMARK_){\nreturn (function (p1__41774_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(p1__41774_SHARP_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null,\"-differ?\",\"-differ?\",1465687357,null))], null));\n});})(stack,rel,vec__41801,seq__41802,first__41803,seq__41802__$1,rule,call_args,guards,vec__41804,active_gs,pending_gs,vec__41795,clauses,vec__41798,seq__41799,first__41800,seq__41799__$1,rule_clause,next_clauses,frame,temp__5755__auto__,final_attrs,final_attrs_map,solve,empty_rels_QMARK_))\n,active_gs))){\nvar G__42122 = cljs.core.next(stack);\nvar G__42123 = rel;\nstack = G__42122;\nrel = G__42123;\ncontinue;\n} else {\nvar prefix_clauses = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(clauses,active_gs);\nvar prefix_context = solve(new cljs.core.Keyword(null,\"prefix-context\",\"prefix-context\",-1269613591).cljs$core$IFn$_invoke$arity$1(frame),prefix_clauses);\nif(cljs.core.truth_(empty_rels_QMARK_(prefix_context))){\nvar G__42124 = cljs.core.next(stack);\nvar G__42125 = rel;\nstack = G__42124;\nrel = G__42125;\ncontinue;\n} else {\nvar used_args = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\"used-args\",\"used-args\",23596256).cljs$core$IFn$_invoke$arity$1(frame),rule,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\"used-args\",\"used-args\",23596256).cljs$core$IFn$_invoke$arity$1(frame),rule,cljs.core.PersistentVector.EMPTY),call_args));\nvar branches = datascript.query.expand_rule(rule_clause,context,used_args);\nvar G__42127 = cljs.core.concat.cljs$core$IFn$_invoke$arity$2((function (){var iter__4652__auto__ = ((function (stack,rel,used_args,branches,prefix_clauses,prefix_context,vec__41801,seq__41802,first__41803,seq__41802__$1,rule,call_args,guards,vec__41804,active_gs,pending_gs,vec__41795,clauses,vec__41798,seq__41799,first__41800,seq__41799__$1,rule_clause,next_clauses,frame,temp__5755__auto__,final_attrs,final_attrs_map,solve,empty_rels_QMARK_){\nreturn (function datascript$query$solve_rule_$_iter__41808(s__41809){\nreturn (new cljs.core.LazySeq(null,((function (stack,rel,used_args,branches,prefix_clauses,prefix_context,vec__41801,seq__41802,first__41803,seq__41802__$1,rule,call_args,guards,vec__41804,active_gs,pending_gs,vec__41795,clauses,vec__41798,seq__41799,first__41800,seq__41799__$1,rule_clause,next_clauses,frame,temp__5755__auto__,final_attrs,final_attrs_map,solve,empty_rels_QMARK_){\nreturn (function (){\nvar s__41809__$1 = s__41809;\nwhile(true){\nvar temp__5753__auto__ = cljs.core.seq(s__41809__$1);\nif(temp__5753__auto__){\nvar s__41809__$2 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__41809__$2)){\nvar c__4650__auto__ = cljs.core.chunk_first(s__41809__$2);\nvar size__4651__auto__ = cljs.core.count(c__4650__auto__);\nvar b__41811 = cljs.core.chunk_buffer(size__4651__auto__);\nif((function (){var i__41810 = (0);\nwhile(true){\nif((i__41810 < size__4651__auto__)){\nvar branch = cljs.core._nth(c__4650__auto__,i__41810);\ncljs.core.chunk_append(b__41811,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"prefix-clauses\",\"prefix-clauses\",1294180028),prefix_clauses,new cljs.core.Keyword(null,\"prefix-context\",\"prefix-context\",-1269613591),prefix_context,new cljs.core.Keyword(null,\"clauses\",\"clauses\",1454841241),datascript.query.concatv.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([branch,next_clauses], 0)),new cljs.core.Keyword(null,\"used-args\",\"used-args\",23596256),used_args,new cljs.core.Keyword(null,\"pending-guards\",\"pending-guards\",-1255527308),pending_gs], null));\n\nvar G__42130 = (i__41810 + (1));\ni__41810 = G__42130;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__41811),datascript$query$solve_rule_$_iter__41808(cljs.core.chunk_rest(s__41809__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__41811),null);\n}\n} else {\nvar branch = cljs.core.first(s__41809__$2);\nreturn cljs.core.cons(new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"prefix-clauses\",\"prefix-clauses\",1294180028),prefix_clauses,new cljs.core.Keyword(null,\"prefix-context\",\"prefix-context\",-1269613591),prefix_context,new cljs.core.Keyword(null,\"clauses\",\"clauses\",1454841241),datascript.query.concatv.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([branch,next_clauses], 0)),new cljs.core.Keyword(null,\"used-args\",\"used-args\",23596256),used_args,new cljs.core.Keyword(null,\"pending-guards\",\"pending-guards\",-1255527308),pending_gs], null),datascript$query$solve_rule_$_iter__41808(cljs.core.rest(s__41809__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});})(stack,rel,used_args,branches,prefix_clauses,prefix_context,vec__41801,seq__41802,first__41803,seq__41802__$1,rule,call_args,guards,vec__41804,active_gs,pending_gs,vec__41795,clauses,vec__41798,seq__41799,first__41800,seq__41799__$1,rule_clause,next_clauses,frame,temp__5755__auto__,final_attrs,final_attrs_map,solve,empty_rels_QMARK_))\n,null,null));\n});})(stack,rel,used_args,branches,prefix_clauses,prefix_context,vec__41801,seq__41802,first__41803,seq__41802__$1,rule,call_args,guards,vec__41804,active_gs,pending_gs,vec__41795,clauses,vec__41798,seq__41799,first__41800,seq__41799__$1,rule_clause,next_clauses,frame,temp__5755__auto__,final_attrs,final_attrs_map,solve,empty_rels_QMARK_))\n;\nreturn iter__4652__auto__(branches);\n})(),cljs.core.next(stack));\nvar G__42128 = rel;\nstack = G__42127;\nrel = G__42128;\ncontinue;\n}\n}\n}\n}\nbreak;\n}\n});\ndatascript.query.resolve_pattern_lookup_refs = (function datascript$query$resolve_pattern_lookup_refs(source,pattern){\nif((((!((source == null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === source.datascript$db$IDB$))))?true:(((!source.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(datascript.db.IDB,source):false)):cljs.core.native_satisfies_QMARK_(datascript.db.IDB,source))){\nvar vec__41815 = pattern;\nvar e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41815,(0),null);\nvar a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41815,(1),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41815,(2),null);\nvar tx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41815,(3),null);\nreturn cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(cljs.core.truth_((function (){var or__4253__auto__ = datascript.query.lookup_ref_QMARK_(e);\nif(cljs.core.truth_(or__4253__auto__)){\nreturn or__4253__auto__;\n} else {\nreturn datascript.query.attr_QMARK_(e);\n}\n})())?datascript.db.entid_strict(source,e):e),a,(cljs.core.truth_((function (){var and__4251__auto__ = v;\nif(cljs.core.truth_(and__4251__auto__)){\nvar and__4251__auto____$1 = datascript.query.attr_QMARK_(a);\nif(and__4251__auto____$1){\nvar and__4251__auto____$2 = datascript.db.ref_QMARK_(source,a);\nif(and__4251__auto____$2){\nvar or__4253__auto__ = datascript.query.lookup_ref_QMARK_(v);\nif(cljs.core.truth_(or__4253__auto__)){\nreturn or__4253__auto__;\n} else {\nreturn datascript.query.attr_QMARK_(v);\n}\n} else {\nreturn and__4251__auto____$2;\n}\n} else {\nreturn and__4251__auto____$1;\n}\n} else {\nreturn and__4251__auto__;\n}\n})())?datascript.db.entid_strict(source,v):v),(cljs.core.truth_(datascript.query.lookup_ref_QMARK_(tx))?datascript.db.entid_strict(source,tx):tx)], null),(0),cljs.core.count(pattern));\n} else {\nreturn pattern;\n}\n});\ndatascript.query.dynamic_lookup_attrs = (function datascript$query$dynamic_lookup_attrs(source,pattern){\nvar vec__41819 = pattern;\nvar e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41819,(0),null);\nvar a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41819,(1),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41819,(2),null);\nvar tx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41819,(3),null);\nvar G__41822 = cljs.core.PersistentHashSet.EMPTY;\nvar G__41822__$1 = ((datascript.query.free_var_QMARK_(e))?cljs.core.conj.cljs$core$IFn$_invoke$arity$2(G__41822,e):G__41822);\nvar G__41822__$2 = ((datascript.query.free_var_QMARK_(tx))?cljs.core.conj.cljs$core$IFn$_invoke$arity$2(G__41822__$1,tx):G__41822__$1);\nif(((datascript.query.free_var_QMARK_(v)) && ((((!(datascript.query.free_var_QMARK_(a)))) && (datascript.db.ref_QMARK_(source,a)))))){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(G__41822__$2,v);\n} else {\nreturn G__41822__$2;\n}\n});\ndatascript.query.limit_rel = (function datascript$query$limit_rel(rel,vars){\nvar temp__5757__auto__ = cljs.core.not_empty(cljs.core.select_keys(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel),vars));\nif((temp__5757__auto__ == null)){\nreturn null;\n} else {\nvar attrs_SINGLEQUOTE_ = temp__5757__auto__;\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(rel,new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713),attrs_SINGLEQUOTE_);\n}\n});\ndatascript.query.limit_context = (function datascript$query$limit_context(context,vars){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),cljs.core.keep.cljs$core$IFn$_invoke$arity$2((function (p1__41824_SHARP_){\nreturn datascript.query.limit_rel(p1__41824_SHARP_,vars);\n}),new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(context)));\n});\ndatascript.query.bound_vars = (function datascript$query$bound_vars(context){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.EMPTY,cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic((function (p1__41825_SHARP_){\nreturn cljs.core.keys(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(p1__41825_SHARP_));\n}),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(context)], 0)));\n});\ndatascript.query.check_bound = (function datascript$query$check_bound(bound,vars,form){\nif(clojure.set.subset_QMARK_(vars,bound)){\nreturn null;\n} else {\nvar missing = clojure.set.difference.cljs$core$IFn$_invoke$arity$2(cljs.core.set(vars),bound);\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Insufficient bindings: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([missing], 0)),\" not bound in \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([form], 0))].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"where\",\"query/where\",-1935159429),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"vars\",\"vars\",-2046957217),missing], null));\n}\n});\ndatascript.query.check_free_same = (function datascript$query$check_free_same(bound,branches,form){\nvar free = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__41827_SHARP_){\nreturn clojure.set.difference.cljs$core$IFn$_invoke$arity$2(datascript.query.collect_vars(p1__41827_SHARP_),bound);\n}),branches);\nif(cljs.core.truth_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core._EQ_,free))){\nreturn null;\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"All clauses in 'or' must use same set of free vars, had \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([free], 0)),\" in \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([form], 0))].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"where\",\"query/where\",-1935159429),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"vars\",\"vars\",-2046957217),free], null));\n}\n});\ndatascript.query.check_free_subset = (function datascript$query$check_free_subset(bound,vars,branches){\nvar free = cljs.core.set(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(bound,vars));\nvar seq__41829 = cljs.core.seq(branches);\nvar chunk__41830 = null;\nvar count__41831 = (0);\nvar i__41832 = (0);\nwhile(true){\nif((i__41832 < count__41831)){\nvar branch = chunk__41830.cljs$core$IIndexed$_nth$arity$2(null,i__41832);\nvar temp__5757__auto___42144 = cljs.core.not_empty(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(free,datascript.query.collect_vars(branch)));\nif((temp__5757__auto___42144 == null)){\n} else {\nvar missing_42148 = temp__5757__auto___42144;\ncljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([branch,bound,vars,free], 0));\n\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"All clauses in 'or' must use same set of free vars, had \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([missing_42148], 0)),\" not bound in \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([branch], 0))].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"where\",\"query/where\",-1935159429),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),branch,new cljs.core.Keyword(null,\"vars\",\"vars\",-2046957217),missing_42148], null));\n}\n\n\nvar G__42149 = seq__41829;\nvar G__42150 = chunk__41830;\nvar G__42151 = count__41831;\nvar G__42152 = (i__41832 + (1));\nseq__41829 = G__42149;\nchunk__41830 = G__42150;\ncount__41831 = G__42151;\ni__41832 = G__42152;\ncontinue;\n} else {\nvar temp__5753__auto__ = cljs.core.seq(seq__41829);\nif(temp__5753__auto__){\nvar seq__41829__$1 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__41829__$1)){\nvar c__4679__auto__ = cljs.core.chunk_first(seq__41829__$1);\nvar G__42153 = cljs.core.chunk_rest(seq__41829__$1);\nvar G__42154 = c__4679__auto__;\nvar G__42155 = cljs.core.count(c__4679__auto__);\nvar G__42156 = (0);\nseq__41829 = G__42153;\nchunk__41830 = G__42154;\ncount__41831 = G__42155;\ni__41832 = G__42156;\ncontinue;\n} else {\nvar branch = cljs.core.first(seq__41829__$1);\nvar temp__5757__auto___42157 = cljs.core.not_empty(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(free,datascript.query.collect_vars(branch)));\nif((temp__5757__auto___42157 == null)){\n} else {\nvar missing_42159 = temp__5757__auto___42157;\ncljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([branch,bound,vars,free], 0));\n\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"All clauses in 'or' must use same set of free vars, had \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([missing_42159], 0)),\" not bound in \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([branch], 0))].join(''),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"where\",\"query/where\",-1935159429),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),branch,new cljs.core.Keyword(null,\"vars\",\"vars\",-2046957217),missing_42159], null));\n}\n\n\nvar G__42161 = cljs.core.next(seq__41829__$1);\nvar G__42162 = null;\nvar G__42163 = (0);\nvar G__42164 = (0);\nseq__41829 = G__42161;\nchunk__41830 = G__42162;\ncount__41831 = G__42163;\ni__41832 = G__42164;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ndatascript.query._resolve_clause = (function datascript$query$_resolve_clause(var_args){\nvar G__41841 = arguments.length;\nswitch (G__41841) {\ncase 2:\nreturn datascript.query._resolve_clause.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn datascript.query._resolve_clause.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(datascript.query._resolve_clause.cljs$core$IFn$_invoke$arity$2 = (function (context,clause){\nreturn datascript.query._resolve_clause.cljs$core$IFn$_invoke$arity$3(context,clause,clause);\n}));\n\n(datascript.query._resolve_clause.cljs$core$IFn$_invoke$arity$3 = (function (context,clause,orig_clause){\nwhile(true){\nvar pred__41842 = datascript.query.looks_like_QMARK_;\nvar expr__41843 = clause;\nif(cljs.core.truth_((function (){var G__41846 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol_QMARK_,new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null)], null);\nvar G__41847 = expr__41843;\nreturn (pred__41842.cljs$core$IFn$_invoke$arity$2 ? pred__41842.cljs$core$IFn$_invoke$arity$2(G__41846,G__41847) : pred__41842.call(null,G__41846,G__41847));\n})())){\ndatascript.query.check_bound(datascript.query.bound_vars(context),cljs.core.filter.cljs$core$IFn$_invoke$arity$2(datascript.query.free_var_QMARK_,cljs.core.nfirst(clause)),clause);\n\nreturn datascript.query.filter_by_pred(context,clause);\n} else {\nif(cljs.core.truth_((function (){var G__41848 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol_QMARK_,new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null),new cljs.core.Symbol(null,\"_\",\"_\",-1201019570,null)], null);\nvar G__41849 = expr__41843;\nreturn (pred__41842.cljs$core$IFn$_invoke$arity$2 ? pred__41842.cljs$core$IFn$_invoke$arity$2(G__41848,G__41849) : pred__41842.call(null,G__41848,G__41849));\n})())){\ndatascript.query.check_bound(datascript.query.bound_vars(context),cljs.core.filter.cljs$core$IFn$_invoke$arity$2(datascript.query.free_var_QMARK_,cljs.core.nfirst(clause)),clause);\n\nreturn datascript.query.bind_by_fn(context,clause);\n} else {\nif(cljs.core.truth_((function (){var G__41850 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [datascript.query.source_QMARK_,new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null);\nvar G__41851 = expr__41843;\nreturn (pred__41842.cljs$core$IFn$_invoke$arity$2 ? pred__41842.cljs$core$IFn$_invoke$arity$2(G__41850,G__41851) : pred__41842.call(null,G__41850,G__41851));\n})())){\nvar vec__41852 = clause;\nvar seq__41853 = cljs.core.seq(vec__41852);\nvar first__41854 = cljs.core.first(seq__41853);\nvar seq__41853__$1 = cljs.core.next(seq__41853);\nvar source_sym = first__41854;\nvar rest = seq__41853__$1;\nvar _STAR_implicit_source_STAR__orig_val__41855 = datascript.query._STAR_implicit_source_STAR_;\nvar _STAR_implicit_source_STAR__temp_val__41856 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424).cljs$core$IFn$_invoke$arity$1(context),source_sym);\n(datascript.query._STAR_implicit_source_STAR_ = _STAR_implicit_source_STAR__temp_val__41856);\n\ntry{return datascript.query._resolve_clause.cljs$core$IFn$_invoke$arity$3(context,rest,clause);\n}finally {(datascript.query._STAR_implicit_source_STAR_ = _STAR_implicit_source_STAR__orig_val__41855);\n}} else {\nif(cljs.core.truth_((function (){var G__41858 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"or\",\"or\",1876275696,null),new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null);\nvar G__41859 = expr__41843;\nreturn (pred__41842.cljs$core$IFn$_invoke$arity$2 ? pred__41842.cljs$core$IFn$_invoke$arity$2(G__41858,G__41859) : pred__41842.call(null,G__41858,G__41859));\n})())){\nvar vec__41860 = clause;\nvar seq__41861 = cljs.core.seq(vec__41860);\nvar first__41862 = cljs.core.first(seq__41861);\nvar seq__41861__$1 = cljs.core.next(seq__41861);\nvar _ = first__41862;\nvar branches = seq__41861__$1;\nvar ___$1 = datascript.query.check_free_same(datascript.query.bound_vars(context),branches,clause);\nvar contexts = cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (context,clause,orig_clause,vec__41860,seq__41861,first__41862,seq__41861__$1,_,branches,___$1,pred__41842,expr__41843){\nreturn (function (p1__41835_SHARP_){\nreturn (datascript.query.resolve_clause.cljs$core$IFn$_invoke$arity$2 ? datascript.query.resolve_clause.cljs$core$IFn$_invoke$arity$2(context,p1__41835_SHARP_) : datascript.query.resolve_clause.call(null,context,p1__41835_SHARP_));\n});})(context,clause,orig_clause,vec__41860,seq__41861,first__41862,seq__41861__$1,_,branches,___$1,pred__41842,expr__41843))\n,branches);\nvar rels = cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (context,clause,orig_clause,vec__41860,seq__41861,first__41862,seq__41861__$1,_,branches,___$1,contexts,pred__41842,expr__41843){\nreturn (function (p1__41836_SHARP_){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.hash_join,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(p1__41836_SHARP_));\n});})(context,clause,orig_clause,vec__41860,seq__41861,first__41862,seq__41861__$1,_,branches,___$1,contexts,pred__41842,expr__41843))\n,contexts);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.first(contexts),new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.sum_rel,rels)], null));\n} else {\nif(cljs.core.truth_((function (){var G__41863 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"or-join\",\"or-join\",591375469,null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null),new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null),new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null);\nvar G__41864 = expr__41843;\nreturn (pred__41842.cljs$core$IFn$_invoke$arity$2 ? pred__41842.cljs$core$IFn$_invoke$arity$2(G__41863,G__41864) : pred__41842.call(null,G__41863,G__41864));\n})())){\nvar vec__41865 = clause;\nvar seq__41866 = cljs.core.seq(vec__41865);\nvar first__41867 = cljs.core.first(seq__41866);\nvar seq__41866__$1 = cljs.core.next(seq__41866);\nvar _ = first__41867;\nvar first__41867__$1 = cljs.core.first(seq__41866__$1);\nvar seq__41866__$2 = cljs.core.next(seq__41866__$1);\nvar vec__41868 = first__41867__$1;\nvar seq__41869 = cljs.core.seq(vec__41868);\nvar first__41870 = cljs.core.first(seq__41869);\nvar seq__41869__$1 = cljs.core.next(seq__41869);\nvar req_vars = first__41870;\nvar vars = seq__41869__$1;\nvar branches = seq__41866__$2;\nvar bound = datascript.query.bound_vars(context);\ndatascript.query.check_bound(bound,req_vars,orig_clause);\n\ndatascript.query.check_free_subset(bound,vars,branches);\n\nvar G__42166 = context;\nvar G__42167 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(new cljs.core.Symbol(null,\"or-join\",\"or-join\",591375469,null),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(req_vars,vars),branches);\nvar G__42168 = clause;\ncontext = G__42166;\nclause = G__42167;\norig_clause = G__42168;\ncontinue;\n} else {\nif(cljs.core.truth_((function (){var G__41871 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"or-join\",\"or-join\",591375469,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null),new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null);\nvar G__41872 = expr__41843;\nreturn (pred__41842.cljs$core$IFn$_invoke$arity$2 ? pred__41842.cljs$core$IFn$_invoke$arity$2(G__41871,G__41872) : pred__41842.call(null,G__41871,G__41872));\n})())){\nvar vec__41873 = clause;\nvar seq__41874 = cljs.core.seq(vec__41873);\nvar first__41875 = cljs.core.first(seq__41874);\nvar seq__41874__$1 = cljs.core.next(seq__41874);\nvar _ = first__41875;\nvar first__41875__$1 = cljs.core.first(seq__41874__$1);\nvar seq__41874__$2 = cljs.core.next(seq__41874__$1);\nvar vars = first__41875__$1;\nvar branches = seq__41874__$2;\nvar vars__$1 = cljs.core.set(vars);\nvar ___$1 = datascript.query.check_free_subset(datascript.query.bound_vars(context),vars__$1,branches);\nvar join_context = datascript.query.limit_context(context,vars__$1);\nvar contexts = cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (context,clause,orig_clause,vec__41873,seq__41874,first__41875,seq__41874__$1,_,first__41875__$1,seq__41874__$2,vars,branches,vars__$1,___$1,join_context,pred__41842,expr__41843){\nreturn (function (p1__41837_SHARP_){\nreturn datascript.query.limit_context((datascript.query.resolve_clause.cljs$core$IFn$_invoke$arity$2 ? datascript.query.resolve_clause.cljs$core$IFn$_invoke$arity$2(join_context,p1__41837_SHARP_) : datascript.query.resolve_clause.call(null,join_context,p1__41837_SHARP_)),vars__$1);\n});})(context,clause,orig_clause,vec__41873,seq__41874,first__41875,seq__41874__$1,_,first__41875__$1,seq__41874__$2,vars,branches,vars__$1,___$1,join_context,pred__41842,expr__41843))\n,branches);\nvar rels = cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (context,clause,orig_clause,vec__41873,seq__41874,first__41875,seq__41874__$1,_,first__41875__$1,seq__41874__$2,vars,branches,vars__$1,___$1,join_context,contexts,pred__41842,expr__41843){\nreturn (function (p1__41839_SHARP_){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.hash_join,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(p1__41839_SHARP_));\n});})(context,clause,orig_clause,vec__41873,seq__41874,first__41875,seq__41874__$1,_,first__41875__$1,seq__41874__$2,vars,branches,vars__$1,___$1,join_context,contexts,pred__41842,expr__41843))\n,contexts);\nvar sum_rel = cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.sum_rel,rels);\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(context,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),datascript.query.collapse_rels,sum_rel);\n} else {\nif(cljs.core.truth_((function (){var G__41876 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"and\",\"and\",668631710,null),new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null);\nvar G__41877 = expr__41843;\nreturn (pred__41842.cljs$core$IFn$_invoke$arity$2 ? pred__41842.cljs$core$IFn$_invoke$arity$2(G__41876,G__41877) : pred__41842.call(null,G__41876,G__41877));\n})())){\nvar vec__41878 = clause;\nvar seq__41879 = cljs.core.seq(vec__41878);\nvar first__41880 = cljs.core.first(seq__41879);\nvar seq__41879__$1 = cljs.core.next(seq__41879);\nvar _ = first__41880;\nvar clauses = seq__41879__$1;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(datascript.query.resolve_clause,context,clauses);\n} else {\nif(cljs.core.truth_((function (){var G__41881 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"not\",\"not\",1044554643,null),new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null);\nvar G__41882 = expr__41843;\nreturn (pred__41842.cljs$core$IFn$_invoke$arity$2 ? pred__41842.cljs$core$IFn$_invoke$arity$2(G__41881,G__41882) : pred__41842.call(null,G__41881,G__41882));\n})())){\nvar vec__41883 = clause;\nvar seq__41884 = cljs.core.seq(vec__41883);\nvar first__41885 = cljs.core.first(seq__41884);\nvar seq__41884__$1 = cljs.core.next(seq__41884);\nvar _ = first__41885;\nvar clauses = seq__41884__$1;\nvar bound = datascript.query.bound_vars(context);\nvar negation_vars = datascript.query.collect_vars(clauses);\nvar ___$1 = ((cljs.core.empty_QMARK_(clojure.set.intersection.cljs$core$IFn$_invoke$arity$2(bound,negation_vars)))?(function(){throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Insufficient bindings: none of \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([negation_vars], 0)),\" is bound in \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([orig_clause], 0))].join(''),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.Keyword(\"query\",\"where\",\"query/where\",-1935159429),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),orig_clause], null))})():null);\nvar context_SINGLEQUOTE_ = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.hash_join,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(context))], null));\nvar negation_context = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(datascript.query.resolve_clause,context_SINGLEQUOTE_,clauses);\nvar negation = datascript.query.subtract_rel(datascript.query.single(new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(context_SINGLEQUOTE_)),cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.hash_join,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(negation_context)));\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(context_SINGLEQUOTE_,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [negation], null));\n} else {\nif(cljs.core.truth_((function (){var G__41886 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"not-join\",\"not-join\",-645515756,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null),new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null);\nvar G__41887 = expr__41843;\nreturn (pred__41842.cljs$core$IFn$_invoke$arity$2 ? pred__41842.cljs$core$IFn$_invoke$arity$2(G__41886,G__41887) : pred__41842.call(null,G__41886,G__41887));\n})())){\nvar vec__41888 = clause;\nvar seq__41889 = cljs.core.seq(vec__41888);\nvar first__41890 = cljs.core.first(seq__41889);\nvar seq__41889__$1 = cljs.core.next(seq__41889);\nvar _ = first__41890;\nvar first__41890__$1 = cljs.core.first(seq__41889__$1);\nvar seq__41889__$2 = cljs.core.next(seq__41889__$1);\nvar vars = first__41890__$1;\nvar clauses = seq__41889__$2;\nvar bound = datascript.query.bound_vars(context);\nvar ___$1 = datascript.query.check_bound(bound,vars,orig_clause);\nvar context_SINGLEQUOTE_ = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.hash_join,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(context))], null));\nvar join_context = datascript.query.limit_context(context_SINGLEQUOTE_,vars);\nvar negation_context = datascript.query.limit_context(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(datascript.query.resolve_clause,join_context,clauses),vars);\nvar negation = datascript.query.subtract_rel(datascript.query.single(new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(context_SINGLEQUOTE_)),cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(datascript.query.hash_join,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(negation_context)));\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(context_SINGLEQUOTE_,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [negation], null));\n} else {\nif(cljs.core.truth_((function (){var G__41891 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"*\",\"*\",345799209,null)], null);\nvar G__41892 = expr__41843;\nreturn (pred__41842.cljs$core$IFn$_invoke$arity$2 ? pred__41842.cljs$core$IFn$_invoke$arity$2(G__41891,G__41892) : pred__41842.call(null,G__41891,G__41892));\n})())){\nvar source = datascript.query._STAR_implicit_source_STAR_;\nvar pattern = datascript.query.resolve_pattern_lookup_refs(source,clause);\nvar relation = datascript.query.lookup_pattern(source,pattern);\nvar _STAR_lookup_attrs_STAR__orig_val__41893 = datascript.query._STAR_lookup_attrs_STAR_;\nvar _STAR_lookup_attrs_STAR__temp_val__41894 = (((((!((source == null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL === source.datascript$db$IDB$))))?true:(((!source.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(datascript.db.IDB,source):false)):cljs.core.native_satisfies_QMARK_(datascript.db.IDB,source)))?datascript.query.dynamic_lookup_attrs(source,pattern):datascript.query._STAR_lookup_attrs_STAR_);\n(datascript.query._STAR_lookup_attrs_STAR_ = _STAR_lookup_attrs_STAR__temp_val__41894);\n\ntry{return cljs.core.update.cljs$core$IFn$_invoke$arity$4(context,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),datascript.query.collapse_rels,relation);\n}finally {(datascript.query._STAR_lookup_attrs_STAR_ = _STAR_lookup_attrs_STAR__orig_val__41893);\n}} else {\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__41843)].join('')));\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\nbreak;\n}\n}));\n\n(datascript.query._resolve_clause.cljs$lang$maxFixedArity = 3);\n\ndatascript.query.resolve_clause = (function datascript$query$resolve_clause(context,clause){\nif(datascript.query.rule_QMARK_(context,clause)){\nif(datascript.query.source_QMARK_(cljs.core.first(clause))){\nvar _STAR_implicit_source_STAR__orig_val__41896 = datascript.query._STAR_implicit_source_STAR_;\nvar _STAR_implicit_source_STAR__temp_val__41897 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424).cljs$core$IFn$_invoke$arity$1(context),cljs.core.first(clause));\n(datascript.query._STAR_implicit_source_STAR_ = _STAR_implicit_source_STAR__temp_val__41897);\n\ntry{var G__41898 = context;\nvar G__41899 = cljs.core.next(clause);\nreturn (datascript.query.resolve_clause.cljs$core$IFn$_invoke$arity$2 ? datascript.query.resolve_clause.cljs$core$IFn$_invoke$arity$2(G__41898,G__41899) : datascript.query.resolve_clause.call(null,G__41898,G__41899));\n}finally {(datascript.query._STAR_implicit_source_STAR_ = _STAR_implicit_source_STAR__orig_val__41896);\n}} else {\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(context,new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185),datascript.query.collapse_rels,datascript.query.solve_rule(context,clause));\n}\n} else {\nreturn datascript.query._resolve_clause.cljs$core$IFn$_invoke$arity$2(context,clause);\n}\n});\ndatascript.query._q = (function datascript$query$_q(context,clauses){\nvar _STAR_implicit_source_STAR__orig_val__41900 = datascript.query._STAR_implicit_source_STAR_;\nvar _STAR_implicit_source_STAR__temp_val__41901 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424).cljs$core$IFn$_invoke$arity$1(context),new cljs.core.Symbol(null,\"$\",\"$\",-1580747756,null));\n(datascript.query._STAR_implicit_source_STAR_ = _STAR_implicit_source_STAR__temp_val__41901);\n\ntry{return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(datascript.query.resolve_clause,context,clauses);\n}finally {(datascript.query._STAR_implicit_source_STAR_ = _STAR_implicit_source_STAR__orig_val__41900);\n}});\ndatascript.query._collect = (function datascript$query$_collect(var_args){\nvar G__41905 = arguments.length;\nswitch (G__41905) {\ncase 2:\nreturn datascript.query._collect.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn datascript.query._collect.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(datascript.query._collect.cljs$core$IFn$_invoke$arity$2 = (function (context,symbols){\nvar rels = new cljs.core.Keyword(null,\"rels\",\"rels\",1770187185).cljs$core$IFn$_invoke$arity$1(context);\nreturn datascript.query._collect.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [me.tonsky.persistent_sorted_set.arrays.make_array(cljs.core.count(symbols))], null),rels,symbols);\n}));\n\n(datascript.query._collect.cljs$core$IFn$_invoke$arity$3 = (function (acc,rels,symbols){\nwhile(true){\nvar rel = cljs.core.first(rels);\nif((rel == null)){\nreturn acc;\n} else {\nif(cljs.core.empty_QMARK_(new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639).cljs$core$IFn$_invoke$arity$1(rel))){\nreturn cljs.core.PersistentVector.EMPTY;\n} else {\nvar keep_attrs = cljs.core.select_keys(new cljs.core.Keyword(null,\"attrs\",\"attrs\",-2090668713).cljs$core$IFn$_invoke$arity$1(rel),symbols);\nif(cljs.core.empty_QMARK_(keep_attrs)){\nvar G__42175 = acc;\nvar G__42176 = cljs.core.next(rels);\nvar G__42177 = symbols;\nacc = G__42175;\nrels = G__42176;\nsymbols = G__42177;\ncontinue;\n} else {\nvar copy_map = cljs.core.to_array(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (acc,rels,symbols,keep_attrs,rel){\nreturn (function (p1__41903_SHARP_){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(keep_attrs,p1__41903_SHARP_);\n});})(acc,rels,symbols,keep_attrs,rel))\n,symbols));\nvar len = cljs.core.count(symbols);\nvar G__42178 = (function (){var iter__4652__auto__ = ((function (acc,rels,symbols,copy_map,len,keep_attrs,rel){\nreturn (function datascript$query$iter__41907(s__41908){\nreturn (new cljs.core.LazySeq(null,((function (acc,rels,symbols,copy_map,len,keep_attrs,rel){\nreturn (function (){\nvar s__41908__$1 = s__41908;\nwhile(true){\nvar temp__5753__auto__ = cljs.core.seq(s__41908__$1);\nif(temp__5753__auto__){\nvar xs__6308__auto__ = temp__5753__auto__;\nvar t1 = cljs.core.first(xs__6308__auto__);\nvar iterys__4648__auto__ = ((function (s__41908__$1,acc,rels,symbols,t1,xs__6308__auto__,temp__5753__auto__,copy_map,len,keep_attrs,rel){\nreturn (function datascript$query$iter__41907_$_iter__41909(s__41910){\nreturn (new cljs.core.LazySeq(null,((function (s__41908__$1,acc,rels,symbols,t1,xs__6308__auto__,temp__5753__auto__,copy_map,len,keep_attrs,rel){\nreturn (function (){\nvar s__41910__$1 = s__41910;\nwhile(true){\nvar temp__5753__auto____$1 = cljs.core.seq(s__41910__$1);\nif(temp__5753__auto____$1){\nvar s__41910__$2 = temp__5753__auto____$1;\nif(cljs.core.chunked_seq_QMARK_(s__41910__$2)){\nvar c__4650__auto__ = cljs.core.chunk_first(s__41910__$2);\nvar size__4651__auto__ = cljs.core.count(c__4650__auto__);\nvar b__41912 = cljs.core.chunk_buffer(size__4651__auto__);\nif((function (){var i__41911 = (0);\nwhile(true){\nif((i__41911 < size__4651__auto__)){\nvar t2 = cljs.core._nth(c__4650__auto__,i__41911);\ncljs.core.chunk_append(b__41912,(function (){var res = cljs.core.aclone(t1);\nvar n__4741__auto___42184 = len;\nvar i_42185 = (0);\nwhile(true){\nif((i_42185 < n__4741__auto___42184)){\nvar temp__5757__auto___42186 = (copy_map[i_42185]);\nif((temp__5757__auto___42186 == null)){\n} else {\nvar idx_42187 = temp__5757__auto___42186;\n(res[i_42185] = (t2[idx_42187]));\n}\n\nvar G__42188 = (i_42185 + (1));\ni_42185 = G__42188;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn res;\n})());\n\nvar G__42189 = (i__41911 + (1));\ni__41911 = G__42189;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__41912),datascript$query$iter__41907_$_iter__41909(cljs.core.chunk_rest(s__41910__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__41912),null);\n}\n} else {\nvar t2 = cljs.core.first(s__41910__$2);\nreturn cljs.core.cons((function (){var res = cljs.core.aclone(t1);\nvar n__4741__auto___42190 = len;\nvar i_42191 = (0);\nwhile(true){\nif((i_42191 < n__4741__auto___42190)){\nvar temp__5757__auto___42192 = (copy_map[i_42191]);\nif((temp__5757__auto___42192 == null)){\n} else {\nvar idx_42193 = temp__5757__auto___42192;\n(res[i_42191] = (t2[idx_42193]));\n}\n\nvar G__42194 = (i_42191 + (1));\ni_42191 = G__42194;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn res;\n})(),datascript$query$iter__41907_$_iter__41909(cljs.core.rest(s__41910__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});})(s__41908__$1,acc,rels,symbols,t1,xs__6308__auto__,temp__5753__auto__,copy_map,len,keep_attrs,rel))\n,null,null));\n});})(s__41908__$1,acc,rels,symbols,t1,xs__6308__auto__,temp__5753__auto__,copy_map,len,keep_attrs,rel))\n;\nvar fs__4649__auto__ = cljs.core.seq(iterys__4648__auto__(new cljs.core.Keyword(null,\"tuples\",\"tuples\",-676032639).cljs$core$IFn$_invoke$arity$1(rel)));\nif(fs__4649__auto__){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(fs__4649__auto__,datascript$query$iter__41907(cljs.core.rest(s__41908__$1)));\n} else {\nvar G__42195 = cljs.core.rest(s__41908__$1);\ns__41908__$1 = G__42195;\ncontinue;\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});})(acc,rels,symbols,copy_map,len,keep_attrs,rel))\n,null,null));\n});})(acc,rels,symbols,copy_map,len,keep_attrs,rel))\n;\nreturn iter__4652__auto__(acc);\n})();\nvar G__42179 = cljs.core.next(rels);\nvar G__42180 = symbols;\nacc = G__42178;\nrels = G__42179;\nsymbols = G__42180;\ncontinue;\n\n}\n}\n}\nbreak;\n}\n}));\n\n(datascript.query._collect.cljs$lang$maxFixedArity = 3);\n\ndatascript.query.collect = (function datascript$query$collect(context,symbols){\nreturn cljs.core.set(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.vec,datascript.query._collect.cljs$core$IFn$_invoke$arity$2(context,symbols)));\n});\n\n/**\n * @interface\n */\ndatascript.query.IContextResolve = function(){};\n\nvar datascript$query$IContextResolve$_context_resolve$dyn_42196 = (function (var$,context){\nvar x__4550__auto__ = (((var$ == null))?null:var$);\nvar m__4551__auto__ = (datascript.query._context_resolve[goog.typeOf(x__4550__auto__)]);\nif((!((m__4551__auto__ == null)))){\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$2(var$,context) : m__4551__auto__.call(null,var$,context));\n} else {\nvar m__4549__auto__ = (datascript.query._context_resolve[\"_\"]);\nif((!((m__4549__auto__ == null)))){\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$2(var$,context) : m__4549__auto__.call(null,var$,context));\n} else {\nthrow cljs.core.missing_protocol(\"IContextResolve.-context-resolve\",var$);\n}\n}\n});\ndatascript.query._context_resolve = (function datascript$query$_context_resolve(var$,context){\nif((((!((var$ == null)))) && ((!((var$.datascript$query$IContextResolve$_context_resolve$arity$2 == null)))))){\nreturn var$.datascript$query$IContextResolve$_context_resolve$arity$2(var$,context);\n} else {\nreturn datascript$query$IContextResolve$_context_resolve$dyn_42196(var$,context);\n}\n});\n\n(datascript.parser.Variable.prototype.datascript$query$IContextResolve$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.Variable.prototype.datascript$query$IContextResolve$_context_resolve$arity$2 = (function (var$,context){\nvar var$__$1 = this;\nreturn datascript.query.context_resolve_val(context,var$__$1.symbol);\n}));\n\n(datascript.parser.SrcVar.prototype.datascript$query$IContextResolve$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.SrcVar.prototype.datascript$query$IContextResolve$_context_resolve$arity$2 = (function (var$,context){\nvar var$__$1 = this;\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424),var$__$1.symbol], null));\n}));\n\n(datascript.parser.PlainSymbol.prototype.datascript$query$IContextResolve$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.PlainSymbol.prototype.datascript$query$IContextResolve$_context_resolve$arity$2 = (function (var$,_){\nvar var$__$1 = this;\nvar or__4253__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(datascript.built_ins.aggregates,var$__$1.symbol);\nif(cljs.core.truth_(or__4253__auto__)){\nreturn or__4253__auto__;\n} else {\nreturn datascript.query.resolve_sym(var$__$1.symbol);\n}\n}));\n\n(datascript.parser.Constant.prototype.datascript$query$IContextResolve$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.Constant.prototype.datascript$query$IContextResolve$_context_resolve$arity$2 = (function (var$,_){\nvar var$__$1 = this;\nreturn var$__$1.value;\n}));\ndatascript.query._aggregate = (function datascript$query$_aggregate(find_elements,context,tuples){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$4((function (element,fixed_value,i){\nif(datascript.parser.aggregate_QMARK_(element)){\nvar f = datascript.query._context_resolve(new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204).cljs$core$IFn$_invoke$arity$1(element),context);\nvar args = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__41930_SHARP_){\nreturn datascript.query._context_resolve(p1__41930_SHARP_,context);\n}),cljs.core.butlast(new cljs.core.Keyword(null,\"args\",\"args\",1315556576).cljs$core$IFn$_invoke$arity$1(element)));\nvar vals = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__41931_SHARP_){\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(p1__41931_SHARP_,i);\n}),tuples);\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(args,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [vals], null)));\n} else {\nreturn fixed_value;\n}\n}),find_elements,cljs.core.first(tuples),cljs.core.range.cljs$core$IFn$_invoke$arity$0());\n});\ndatascript.query.idxs_of = (function datascript$query$idxs_of(pred,coll){\nreturn cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (p1__41933_SHARP_,p2__41934_SHARP_){\nif(cljs.core.truth_((pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(p1__41933_SHARP_) : pred.call(null,p1__41933_SHARP_)))){\nreturn p2__41934_SHARP_;\n} else {\nreturn null;\n}\n}),coll,cljs.core.range.cljs$core$IFn$_invoke$arity$0()));\n});\ndatascript.query.aggregate = (function datascript$query$aggregate(find_elements,context,resultset){\nvar group_idxs = datascript.query.idxs_of(cljs.core.complement(datascript.parser.aggregate_QMARK_),find_elements);\nvar group_fn = (function (tuple){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__41935_SHARP_){\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(tuple,p1__41935_SHARP_);\n}),group_idxs);\n});\nvar grouped = cljs.core.group_by(group_fn,resultset);\nvar iter__4652__auto__ = (function datascript$query$aggregate_$_iter__41936(s__41937){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__41937__$1 = s__41937;\nwhile(true){\nvar temp__5753__auto__ = cljs.core.seq(s__41937__$1);\nif(temp__5753__auto__){\nvar s__41937__$2 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__41937__$2)){\nvar c__4650__auto__ = cljs.core.chunk_first(s__41937__$2);\nvar size__4651__auto__ = cljs.core.count(c__4650__auto__);\nvar b__41939 = cljs.core.chunk_buffer(size__4651__auto__);\nif((function (){var i__41938 = (0);\nwhile(true){\nif((i__41938 < size__4651__auto__)){\nvar vec__41941 = cljs.core._nth(c__4650__auto__,i__41938);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41941,(0),null);\nvar tuples = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41941,(1),null);\ncljs.core.chunk_append(b__41939,datascript.query._aggregate(find_elements,context,tuples));\n\nvar G__42199 = (i__41938 + (1));\ni__41938 = G__42199;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__41939),datascript$query$aggregate_$_iter__41936(cljs.core.chunk_rest(s__41937__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__41939),null);\n}\n} else {\nvar vec__41944 = cljs.core.first(s__41937__$2);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41944,(0),null);\nvar tuples = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41944,(1),null);\nreturn cljs.core.cons(datascript.query._aggregate(find_elements,context,tuples),datascript$query$aggregate_$_iter__41936(cljs.core.rest(s__41937__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__4652__auto__(grouped);\n});\ndatascript.query.map_STAR_ = (function datascript$query$map_STAR_(f,xs){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__41947_SHARP_,p2__41948_SHARP_){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__41947_SHARP_,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p2__41948_SHARP_) : f.call(null,p2__41948_SHARP_)));\n}),cljs.core.empty(xs),xs);\n});\ndatascript.query.tuples__GT_return_map = (function datascript$query$tuples__GT_return_map(return_map,tuples){\nvar symbols = new cljs.core.Keyword(null,\"symbols\",\"symbols\",1211743).cljs$core$IFn$_invoke$arity$1(return_map);\nvar idxs = cljs.core.range.cljs$core$IFn$_invoke$arity$2((0),cljs.core.count(symbols));\nreturn datascript.query.map_STAR_((function (tuple){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m,i){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(symbols,i),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(tuple,i));\n}),cljs.core.PersistentArrayMap.EMPTY,idxs);\n}),tuples);\n});\n\n/**\n * @interface\n */\ndatascript.query.IPostProcess = function(){};\n\nvar datascript$query$IPostProcess$_post_process$dyn_42200 = (function (find,return_map,tuples){\nvar x__4550__auto__ = (((find == null))?null:find);\nvar m__4551__auto__ = (datascript.query._post_process[goog.typeOf(x__4550__auto__)]);\nif((!((m__4551__auto__ == null)))){\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$3(find,return_map,tuples) : m__4551__auto__.call(null,find,return_map,tuples));\n} else {\nvar m__4549__auto__ = (datascript.query._post_process[\"_\"]);\nif((!((m__4549__auto__ == null)))){\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$3(find,return_map,tuples) : m__4549__auto__.call(null,find,return_map,tuples));\n} else {\nthrow cljs.core.missing_protocol(\"IPostProcess.-post-process\",find);\n}\n}\n});\ndatascript.query._post_process = (function datascript$query$_post_process(find,return_map,tuples){\nif((((!((find == null)))) && ((!((find.datascript$query$IPostProcess$_post_process$arity$3 == null)))))){\nreturn find.datascript$query$IPostProcess$_post_process$arity$3(find,return_map,tuples);\n} else {\nreturn datascript$query$IPostProcess$_post_process$dyn_42200(find,return_map,tuples);\n}\n});\n\n(datascript.parser.FindRel.prototype.datascript$query$IPostProcess$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.FindRel.prototype.datascript$query$IPostProcess$_post_process$arity$3 = (function (_,return_map,tuples){\nvar ___$1 = this;\nif((return_map == null)){\nreturn tuples;\n} else {\nreturn datascript.query.tuples__GT_return_map(return_map,tuples);\n}\n}));\n\n(datascript.parser.FindColl.prototype.datascript$query$IPostProcess$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.FindColl.prototype.datascript$query$IPostProcess$_post_process$arity$3 = (function (_,return_map,tuples){\nvar ___$1 = this;\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1(cljs.core.first),tuples);\n}));\n\n(datascript.parser.FindScalar.prototype.datascript$query$IPostProcess$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.FindScalar.prototype.datascript$query$IPostProcess$_post_process$arity$3 = (function (_,return_map,tuples){\nvar ___$1 = this;\nreturn cljs.core.ffirst(tuples);\n}));\n\n(datascript.parser.FindTuple.prototype.datascript$query$IPostProcess$ = cljs.core.PROTOCOL_SENTINEL);\n\n(datascript.parser.FindTuple.prototype.datascript$query$IPostProcess$_post_process$arity$3 = (function (_,return_map,tuples){\nvar ___$1 = this;\nif((!((return_map == null)))){\nreturn cljs.core.first(datascript.query.tuples__GT_return_map(return_map,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(tuples)], null)));\n} else {\nreturn cljs.core.first(tuples);\n}\n}));\ndatascript.query.pull = (function datascript$query$pull(find_elements,context,resultset){\nvar resolved = (function (){var iter__4652__auto__ = (function datascript$query$pull_$_iter__41973(s__41974){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__41974__$1 = s__41974;\nwhile(true){\nvar temp__5753__auto__ = cljs.core.seq(s__41974__$1);\nif(temp__5753__auto__){\nvar s__41974__$2 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__41974__$2)){\nvar c__4650__auto__ = cljs.core.chunk_first(s__41974__$2);\nvar size__4651__auto__ = cljs.core.count(c__4650__auto__);\nvar b__41976 = cljs.core.chunk_buffer(size__4651__auto__);\nif((function (){var i__41975 = (0);\nwhile(true){\nif((i__41975 < size__4651__auto__)){\nvar find = cljs.core._nth(c__4650__auto__,i__41975);\ncljs.core.chunk_append(b__41976,((datascript.parser.pull_QMARK_(find))?(function (){var db = datascript.query._context_resolve(new cljs.core.Keyword(null,\"source\",\"source\",-433931539).cljs$core$IFn$_invoke$arity$1(find),context);\nvar pattern = datascript.query._context_resolve(new cljs.core.Keyword(null,\"pattern\",\"pattern\",242135423).cljs$core$IFn$_invoke$arity$1(find),context);\nreturn datascript.pull_api.parse_opts.cljs$core$IFn$_invoke$arity$2(db,pattern);\n})():null));\n\nvar G__42202 = (i__41975 + (1));\ni__41975 = G__42202;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__41976),datascript$query$pull_$_iter__41973(cljs.core.chunk_rest(s__41974__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__41976),null);\n}\n} else {\nvar find = cljs.core.first(s__41974__$2);\nreturn cljs.core.cons(((datascript.parser.pull_QMARK_(find))?(function (){var db = datascript.query._context_resolve(new cljs.core.Keyword(null,\"source\",\"source\",-433931539).cljs$core$IFn$_invoke$arity$1(find),context);\nvar pattern = datascript.query._context_resolve(new cljs.core.Keyword(null,\"pattern\",\"pattern\",242135423).cljs$core$IFn$_invoke$arity$1(find),context);\nreturn datascript.pull_api.parse_opts.cljs$core$IFn$_invoke$arity$2(db,pattern);\n})():null),datascript$query$pull_$_iter__41973(cljs.core.rest(s__41974__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__4652__auto__(find_elements);\n})();\nvar iter__4652__auto__ = (function datascript$query$pull_$_iter__41977(s__41978){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__41978__$1 = s__41978;\nwhile(true){\nvar temp__5753__auto__ = cljs.core.seq(s__41978__$1);\nif(temp__5753__auto__){\nvar s__41978__$2 = temp__5753__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__41978__$2)){\nvar c__4650__auto__ = cljs.core.chunk_first(s__41978__$2);\nvar size__4651__auto__ = cljs.core.count(c__4650__auto__);\nvar b__41980 = cljs.core.chunk_buffer(size__4651__auto__);\nif((function (){var i__41979 = (0);\nwhile(true){\nif((i__41979 < size__4651__auto__)){\nvar tuple = cljs.core._nth(c__4650__auto__,i__41979);\ncljs.core.chunk_append(b__41980,cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(((function (i__41979,tuple,c__4650__auto__,size__4651__auto__,b__41980,s__41978__$2,temp__5753__auto__,resolved){\nreturn (function (parsed_opts,el){\nif(cljs.core.truth_(parsed_opts)){\nreturn datascript.pull_api.pull_impl(parsed_opts,el);\n} else {\nreturn el;\n}\n});})(i__41979,tuple,c__4650__auto__,size__4651__auto__,b__41980,s__41978__$2,temp__5753__auto__,resolved))\n,resolved,tuple));\n\nvar G__42204 = (i__41979 + (1));\ni__41979 = G__42204;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__41980),datascript$query$pull_$_iter__41977(cljs.core.chunk_rest(s__41978__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__41980),null);\n}\n} else {\nvar tuple = cljs.core.first(s__41978__$2);\nreturn cljs.core.cons(cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(((function (tuple,s__41978__$2,temp__5753__auto__,resolved){\nreturn (function (parsed_opts,el){\nif(cljs.core.truth_(parsed_opts)){\nreturn datascript.pull_api.pull_impl(parsed_opts,el);\n} else {\nreturn el;\n}\n});})(tuple,s__41978__$2,temp__5753__auto__,resolved))\n,resolved,tuple),datascript$query$pull_$_iter__41977(cljs.core.rest(s__41978__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__4652__auto__(resultset);\n});\ndatascript.query.q = (function datascript$query$q(var_args){\nvar args__4870__auto__ = [];\nvar len__4864__auto___42205 = arguments.length;\nvar i__4865__auto___42206 = (0);\nwhile(true){\nif((i__4865__auto___42206 < len__4864__auto___42205)){\nargs__4870__auto__.push((arguments[i__4865__auto___42206]));\n\nvar G__42207 = (i__4865__auto___42206 + (1));\ni__4865__auto___42206 = G__42207;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4871__auto__ = ((((1) < args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((1)),(0),null)):null);\nreturn datascript.query.q.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4871__auto__);\n});\n\n(datascript.query.q.cljs$core$IFn$_invoke$arity$variadic = (function (q,inputs){\nvar parsed_q = datascript.lru._get(datascript.query._STAR_query_cache_STAR_,q,(function (){\nreturn datascript.parser.parse_query(q);\n}));\nvar find = new cljs.core.Keyword(null,\"qfind\",\"qfind\",1529332972).cljs$core$IFn$_invoke$arity$1(parsed_q);\nvar find_elements = datascript.parser.find_elements(find);\nvar find_vars = datascript.parser.find_vars(find);\nvar result_arity = cljs.core.count(find_elements);\nvar with$ = new cljs.core.Keyword(null,\"qwith\",\"qwith\",-45809392).cljs$core$IFn$_invoke$arity$1(parsed_q);\nvar all_vars = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(find_vars,cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"symbol\",\"symbol\",-1038572696),with$));\nvar q__$1 = (function (){var G__41984 = q;\nif(cljs.core.sequential_QMARK_(q)){\nreturn datascript.parser.query__GT_map(G__41984);\n} else {\nreturn G__41984;\n}\n})();\nvar wheres = new cljs.core.Keyword(null,\"where\",\"where\",-2044795965).cljs$core$IFn$_invoke$arity$1(q__$1);\nvar context = datascript.query.resolve_ins((new datascript.query.Context(cljs.core.PersistentVector.EMPTY,cljs.core.PersistentArrayMap.EMPTY,cljs.core.PersistentArrayMap.EMPTY,null,null,null)),new cljs.core.Keyword(null,\"qin\",\"qin\",1372651151).cljs$core$IFn$_invoke$arity$1(parsed_q),inputs);\nvar resultset = datascript.query.collect(datascript.query._q(context,wheres),all_vars);\nvar G__41985 = resultset;\nvar G__41985__$1 = (cljs.core.truth_(new cljs.core.Keyword(null,\"with\",\"with\",-1536296876).cljs$core$IFn$_invoke$arity$1(q__$1))?cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__41981_SHARP_){\nreturn cljs.core.vec(cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(p1__41981_SHARP_,(0),result_arity));\n}),G__41985):G__41985);\nvar G__41985__$2 = (cljs.core.truth_(cljs.core.some(datascript.parser.aggregate_QMARK_,find_elements))?datascript.query.aggregate(find_elements,context,G__41985__$1):G__41985__$1);\nvar G__41985__$3 = (cljs.core.truth_(cljs.core.some(datascript.parser.pull_QMARK_,find_elements))?datascript.query.pull(find_elements,context,G__41985__$2):G__41985__$2);\nreturn datascript.query._post_process(find,new cljs.core.Keyword(null,\"qreturn-map\",\"qreturn-map\",1841215994).cljs$core$IFn$_invoke$arity$1(parsed_q),G__41985__$3);\n\n}));\n\n(datascript.query.q.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(datascript.query.q.cljs$lang$applyTo = (function (seq41982){\nvar G__41983 = cljs.core.first(seq41982);\nvar seq41982__$1 = cljs.core.next(seq41982);\nvar self__4851__auto__ = this;\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__41983,seq41982__$1);\n}));\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","datascript/query.cljc","~:line",1,"~:column",14,"~:end-line",1,"~:end-column",30,"~:no-doc",true],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",["^ ","~$raise","~$datascript.db","~$cond+","^E"],"~:excludes",["~#set",[]],"~:name","~$datascript.query","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$da","~$me.tonsky.persistent-sorted-set.arrays","~$set","~$clojure.set","~$built-ins","~$datascript.built-ins","~$dpa","~$datascript.pull-api","~$cljs.core","^X","~$goog","^Y","~$walk","~$clojure.walk","~$datascript.parser","^10","~$db","^E","^S","^S","~$lru","~$datascript.lru","^13","^13","^U","^U","^E","^E","^Q","^Q","^W","^W","~$str","~$clojure.string","^15","^15","~$de","~$datascript.impl.entity","~$dp","^10","~$cljs.reader","^19","^[","^[","~$edn","^19","^17","^17"],"~:seen",["^H",["~:require"]],"~:uses",["^ ","~$Constant","^10","~$BindIgnore","^10","~$FindTuple","^10","~$SrcVar","^10","~$FindColl","^10","~$BindTuple","^10","~$BindColl","^10","~$BindScalar","^10","~$PlainSymbol","^10","~$FindRel","^10","~$FindScalar","^10","~$RulesVar","^10","~$Variable","^10"],"~:require-macros",["^ ","^P","^Q","^X","^X","^10","^10","^11","^E","^E","^E","^Q","^Q","^18","^10","^19","^19","^1:","^19"],"~:form",["~#list",["~$ns","^J",["^1M",["^1<",["^19","~:as","^1:"],["^S","^1O","^R"],["^15","^1O","^14"],["^[","^1O","^Z"],["^U","^1O","^T"],["^E","^1O","^11","~:refer-macros",["^D","^F"]],["^Q","^1O","^P"],["^13","^1O","^12"],["^17","^1O","^16"],["^10","^1O","^18","~:refer",["^1D","^1?","^1E","^1C","^1>","^1B","^1G","^1H","^1@","^1F","^1I","^1A","^1J"]],["^W","^1O","^V"]]]]],"~:flags",["^ ","^1<",["^H",[]]],"~:js-deps",["^ "],"~:deps",["^Y","^X","^19","^S","^15","^[","^U","^E","^Q","^13","^17","^10","^W"]],"^M","^J","~:resource-id",["~:shadow.build.classpath/resource","datascript/query.cljc"],"~:compiled-at",1685712179730,"^K",["^ ","^P","^Q","^R","^S","^T","^U","^V","^W","^X","^X","^Y","^Y","^Z","^[","^10","^10","^11","^E","^S","^S","^12","^13","^13","^13","^U","^U","^E","^E","^Q","^Q","^W","^W","^14","^15","^15","^15","^16","^17","^18","^10","^19","^19","^[","^[","^1:","^19","^17","^17"],"~:resource-name","datascript/query.cljc","~:warnings",[],"~:source","(ns ^:no-doc datascript.query\n  (:require\n   [#?(:cljs cljs.reader :clj clojure.edn) :as edn]\n   [clojure.set :as set]\n   [clojure.string :as str]\n   [clojure.walk :as walk]\n   [datascript.built-ins :as built-ins]\n   [datascript.db :as db #?(:cljs :refer-macros :clj :refer) [raise cond+]]\n   [me.tonsky.persistent-sorted-set.arrays :as da]\n   [datascript.lru :as lru]\n   [datascript.impl.entity :as de]\n   [datascript.parser :as dp #?@(:cljs [:refer [BindColl BindIgnore BindScalar BindTuple Constant\n                                                FindColl FindRel FindScalar FindTuple PlainSymbol\n                                                RulesVar SrcVar Variable]])]\n   [datascript.pull-api :as dpa])\n  #?(:clj\n     (:import\n      [datascript.parser BindColl BindIgnore BindScalar BindTuple\n       Constant FindColl FindRel FindScalar FindTuple PlainSymbol\n       RulesVar SrcVar Variable])))\n\n;; ----------------------------------------------------------------------------\n\n(def ^:dynamic *query-cache* (lru/cache 100))\n\n(declare -collect -resolve-clause resolve-clause)\n\n;; Records\n\n(defrecord Context [rels sources rules])\n\n;; attrs:\n;;    {?e 0, ?v 1} or {?e2 \"a\", ?age \"v\"}\n;; tuples:\n;;    [ #js [1 \"Ivan\" 5 14] ... ]\n;; or [ (Datom. 2 \"Oleg\" 1 55) ... ]\n(defrecord Relation [attrs tuples])\n\n\n;; Utilities\n\n(defn single [coll]\n  (assert (nil? (next coll)) \"Expected single element\")\n  (first coll))\n\n(defn intersect-keys [attrs1 attrs2]\n  (set/intersection (set (keys attrs1))\n                    (set (keys attrs2))))\n\n(defn concatv [& xs]\n  (into [] cat xs))\n\n(defn zip\n  ([a b] (mapv vector a b))\n  ([a b & rest] (apply mapv vector a b rest)))\n\n(defn same-keys? [a b]\n  (and (= (count a) (count b))\n       (every? #(contains? b %) (keys a))\n       (every? #(contains? b %) (keys a))))\n\n(defn- looks-like? [pattern form]\n  (cond\n    (= '_ pattern)\n      true\n    (= '[*] pattern)\n      (sequential? form)\n    (symbol? pattern)\n      (= form pattern)\n    (sequential? pattern)\n      (if (= (last pattern) '*)\n        (and (sequential? form)\n             (every? (fn [[pattern-el form-el]] (looks-like? pattern-el form-el))\n                     (map vector (butlast pattern) form)))\n        (and (sequential? form)\n             (= (count form) (count pattern))\n             (every? (fn [[pattern-el form-el]] (looks-like? pattern-el form-el))\n                     (map vector pattern form))))\n    :else ;; (predicate? pattern)\n      (pattern form)))\n\n(defn source? [sym]\n  (and (symbol? sym)\n       (= \\$ (first (name sym)))))\n\n(defn free-var? [sym]\n  (and (symbol? sym)\n       (= \\? (first (name sym)))))\n\n(defn attr? [form]\n  (or (keyword? form) (string? form)))\n\n(defn lookup-ref? [form]\n  (looks-like? [attr? '_] form))\n\n;; Relation algebra\n\n(defn join-tuples [t1 #?(:cljs idxs1\n                         :clj  ^{:tag \"[[Ljava.lang.Object;\"} idxs1)\n                   t2 #?(:cljs idxs2\n                         :clj  ^{:tag \"[[Ljava.lang.Object;\"} idxs2)]\n  (let [l1  (alength idxs1)\n        l2  (alength idxs2)\n        res (da/make-array (+ l1 l2))]\n    (dotimes [i l1]\n      (aset res i (#?(:cljs da/aget :clj get) t1 (aget idxs1 i)))) ;; FIXME aget\n    (dotimes [i l2]\n      (aset res (+ l1 i) (#?(:cljs da/aget :clj get) t2 (aget idxs2 i)))) ;; FIXME aget\n    res))\n\n(defn sum-rel [a b]\n  (let [{attrs-a :attrs, tuples-a :tuples} a\n        {attrs-b :attrs, tuples-b :tuples} b]\n    (cond\n      (= attrs-a attrs-b)\n      (Relation. attrs-a (into (vec tuples-a) tuples-b))\n\n      (not (same-keys? attrs-a attrs-b))\n      (raise \"Can’t sum relations with different attrs: \" attrs-a \" and \" attrs-b\n             {:error :query/where})\n\n      (every? number? (vals attrs-a)) ;; can’t conj into BTSetIter\n      (let [idxb->idxa (vec (for [[sym idx-b] attrs-b]\n                              [idx-b (attrs-a sym)]))\n            tlen    (->> (vals attrs-a) (reduce max) (inc)) \n            tuples' (persistent!\n                      (reduce\n                        (fn [acc tuple-b]\n                          (let [tuple' (da/make-array tlen)]\n                            (doseq [[idx-b idx-a] idxb->idxa]\n                              (aset tuple' idx-a (#?(:cljs da/aget :clj get) tuple-b idx-b)))\n                            (conj! acc tuple')))\n                        (transient (vec tuples-a))\n                        tuples-b))]\n        (Relation. attrs-a tuples'))\n\n      :else\n      (let [all-attrs (zipmap (keys (merge attrs-a attrs-b)) (range))]\n        (-> (Relation. all-attrs [])\n            (sum-rel a)\n            (sum-rel b))))))\n\n(defn prod-rel\n  ([] (Relation. {} [(da/make-array 0)]))\n  ([rel1 rel2]\n    (let [attrs1 (keys (:attrs rel1))\n          attrs2 (keys (:attrs rel2))\n          idxs1  (to-array (map (:attrs rel1) attrs1))\n          idxs2  (to-array (map (:attrs rel2) attrs2))]\n      (Relation.\n        (zipmap (concat attrs1 attrs2) (range))\n        (persistent!\n          (reduce\n            (fn [acc t1]\n              (reduce (fn [acc t2]\n                        (conj! acc (join-tuples t1 idxs1 t2 idxs2)))\n                      acc (:tuples rel2)))\n            (transient []) (:tuples rel1)))\n        ))))\n\n;;\n\n(defn parse-rules [rules]\n  (let [rules (if (string? rules) (edn/read-string rules) rules)] ;; for datascript.js interop\n    (dp/parse-rules rules) ;; validation\n    (group-by ffirst rules)))\n\n(defn empty-rel [binding]\n  (let [vars (->> (dp/collect-vars-distinct binding)\n               (map :symbol))]\n    (Relation. (zipmap vars (range)) [])))\n\n(defprotocol IBinding\n  (in->rel [binding value]))\n\n(extend-protocol IBinding\n  BindIgnore\n  (in->rel [_ _]\n    (prod-rel))\n  \n  BindScalar\n  (in->rel [binding value]\n    (Relation. {(get-in binding [:variable :symbol]) 0} [(into-array [value])]))\n  \n  BindColl\n  (in->rel [binding coll]\n    (cond\n      (not (db/seqable? coll))\n        (raise \"Cannot bind value \" coll \" to collection \" (dp/source binding)\n               {:error :query/binding, :value coll, :binding (dp/source binding)})\n      (empty? coll)\n        (empty-rel binding)\n      :else\n        (->> coll\n          (map #(in->rel (:binding binding) %))\n          (reduce sum-rel))))\n  \n  BindTuple\n  (in->rel [binding coll]\n    (cond\n      (not (db/seqable? coll))\n        (raise \"Cannot bind value \" coll \" to tuple \" (dp/source binding)\n               {:error :query/binding, :value coll, :binding (dp/source binding)})\n      (< (count coll) (count (:bindings binding)))\n        (raise \"Not enough elements in a collection \" coll \" to bind tuple \" (dp/source binding)\n               {:error :query/binding, :value coll, :binding (dp/source binding)})\n      :else\n        (reduce prod-rel\n          (map #(in->rel %1 %2) (:bindings binding) coll)))))\n\n(defn resolve-in [context [binding value]]\n  (cond\n    (and (instance? BindScalar binding)\n         (instance? SrcVar (:variable binding)))\n      (update context :sources assoc (get-in binding [:variable :symbol]) value)\n    (and (instance? BindScalar binding)\n         (instance? RulesVar (:variable binding)))\n      (assoc context :rules (parse-rules value))\n    :else\n      (update context :rels conj (in->rel binding value))))\n\n(defn resolve-ins [context bindings values]\n  (let [cb (count bindings)\n        cv (count values)]\n    (cond\n      (< cb cv)\n      (raise \"Extra inputs passed, expected: \" (mapv #(:source (meta %)) bindings) \", got: \" cv\n        {:error :query/inputs :expected bindings :got values})\n\n      (> cb cv)\n      (raise \"Too few inputs passed, expected: \" (mapv #(:source (meta %)) bindings) \", got: \" cv\n        {:error :query/inputs :expected bindings :got values})\n\n      :else\n      (reduce resolve-in context (zipmap bindings values)))))\n\n;;\n\n(def ^{:dynamic true\n       :doc \"List of symbols in current pattern that might potentiall be resolved to refs\"}\n  *lookup-attrs* nil)\n\n(def ^{:dynamic true\n       :doc \"Default pattern source. Lookup refs, patterns, rules will be resolved with it\"}\n  *implicit-source* nil)\n\n(defn getter-fn [attrs attr]\n  (let [idx (attrs attr)]\n    (if (contains? *lookup-attrs* attr)\n      (fn [tuple]\n        (let [eid (#?(:cljs da/aget :clj get) tuple idx)]\n          (cond\n            (number? eid)     eid ;; quick path to avoid fn call\n            (sequential? eid) (db/entid *implicit-source* eid)\n            (da/array? eid)   (db/entid *implicit-source* eid)\n            :else             eid)))\n      (fn [tuple]\n        (#?(:cljs da/aget :clj get) tuple idx)))))\n\n(defn tuple-key-fn [getters]\n  (if (== (count getters) 1)\n    (first getters)\n    (let [getters (to-array getters)]\n      (fn [tuple]\n        (list* #?(:cljs (.map getters #(% tuple))\n                  :clj  (to-array (map #(% tuple) getters))))))))\n\n(defn hash-attrs [key-fn tuples]\n  (loop [tuples     tuples\n         hash-table (transient {})]\n    (if-some [tuple (first tuples)]\n      (let [key (key-fn tuple)]\n        (recur (next tuples)\n               (assoc! hash-table key (conj (get hash-table key '()) tuple))))\n      (persistent! hash-table))))\n\n(defn hash-join [rel1 rel2]\n  (let [tuples1       (:tuples rel1)\n        tuples2       (:tuples rel2)\n        attrs1        (:attrs rel1)\n        attrs2        (:attrs rel2)\n        common-attrs  (vec (intersect-keys (:attrs rel1) (:attrs rel2)))\n        common-gtrs1  (map #(getter-fn attrs1 %) common-attrs)\n        common-gtrs2  (map #(getter-fn attrs2 %) common-attrs)\n        keep-attrs1   (keys attrs1)\n        keep-attrs2   (vec (set/difference (set (keys attrs2)) (set (keys attrs1))))\n        keep-idxs1    (to-array (map attrs1 keep-attrs1))\n        keep-idxs2    (to-array (map attrs2 keep-attrs2))\n        key-fn1       (tuple-key-fn common-gtrs1)\n        hash          (hash-attrs key-fn1 tuples1)\n        key-fn2       (tuple-key-fn common-gtrs2)\n        new-tuples    (->>\n                        (reduce (fn [acc tuple2]\n                                  (let [key (key-fn2 tuple2)]\n                                    (if-some [tuples1 (get hash key)]\n                                      (reduce (fn [acc tuple1]\n                                                (conj! acc (join-tuples tuple1 keep-idxs1 tuple2 keep-idxs2)))\n                                              acc tuples1)\n                                      acc)))\n                          (transient []) tuples2)\n                        (persistent!))]\n    (Relation. (zipmap (concat keep-attrs1 keep-attrs2) (range))\n               new-tuples)))\n\n(defn subtract-rel [a b]\n  (let [{attrs-a :attrs, tuples-a :tuples} a\n        {attrs-b :attrs, tuples-b :tuples} b\n        attrs     (intersect-keys attrs-a attrs-b)\n        getters-b (map #(getter-fn attrs-b %) attrs)\n        key-fn-b  (tuple-key-fn getters-b)\n        hash      (hash-attrs key-fn-b tuples-b)\n        getters-a (map #(getter-fn attrs-a %) attrs)\n        key-fn-a  (tuple-key-fn getters-a)]\n    (assoc a\n      :tuples (filterv #(nil? (hash (key-fn-a %))) tuples-a))))\n\n(defn lookup-pattern-db [db pattern]\n  ;; TODO optimize with bound attrs min/max values here\n  (let [search-pattern (mapv #(if (symbol? %) nil %) pattern)\n        datoms         (db/-search db search-pattern)\n        attr->prop     (->> (map vector pattern [\"e\" \"a\" \"v\" \"tx\"])\n                            (filter (fn [[s _]] (free-var? s)))\n                            (into {}))]\n    (Relation. attr->prop datoms)))\n\n(defn matches-pattern? [pattern tuple]\n  (loop [tuple   tuple\n         pattern pattern]\n    (if (and tuple pattern)\n      (let [t (first tuple)\n            p (first pattern)]\n        (if (or (symbol? p) (= t p))\n          (recur (next tuple) (next pattern))\n          false))\n      true)))\n\n(defn lookup-pattern-coll [coll pattern]\n  (let [data       (filter #(matches-pattern? pattern %) coll)\n        attr->idx  (->> (map vector pattern (range))\n                        (filter (fn [[s _]] (free-var? s)))\n                        (into {}))]\n    (Relation. attr->idx (mapv to-array data)))) ;; FIXME to-array\n\n(defn normalize-pattern-clause [clause]\n  (if (source? (first clause))\n    clause\n    (concat ['$] clause)))\n\n(defn lookup-pattern [source pattern]\n  (cond\n    (satisfies? db/ISearch source)\n      (lookup-pattern-db source pattern)\n    :else\n      (lookup-pattern-coll source pattern)))\n\n(defn collapse-rels [rels new-rel]\n  (loop [rels    rels\n         new-rel new-rel\n         acc     []]\n    (if-some [rel (first rels)]\n      (if (not-empty (intersect-keys (:attrs new-rel) (:attrs rel)))\n        (recur (next rels) (hash-join rel new-rel) acc)\n        (recur (next rels) new-rel (conj acc rel)))\n      (conj acc new-rel))))\n\n(defn- rel-with-attr [context sym]\n  (some #(when (contains? (:attrs %) sym) %) (:rels context)))\n\n(defn- context-resolve-val [context sym]\n  (when-some [rel (rel-with-attr context sym)]\n    (when-some [tuple (first (:tuples rel))]\n      (#?(:cljs da/aget :clj get) tuple ((:attrs rel) sym)))))\n\n(defn- rel-contains-attrs? [rel attrs]\n  (some #(contains? (:attrs rel) %) attrs))\n\n(defn- rel-prod-by-attrs [context attrs]\n  (let [rels       (filter #(rel-contains-attrs? % attrs) (:rels context))\n        production (reduce prod-rel rels)]\n    [(update context :rels #(remove (set rels) %)) production]))\n\n(defn -call-fn [context rel f args]\n  (let [sources     (:sources context)\n        attrs       (:attrs rel)\n        len         (count args)\n        static-args (da/make-array len)\n        tuples-args (da/make-array len)]\n    (dotimes [i len]\n      (let [arg (nth args i)]\n        (if (symbol? arg) \n          (if-some [source (get sources arg)]\n            (da/aset static-args i source)\n            (da/aset tuples-args i (get attrs arg)))\n          (da/aset static-args i arg))))\n    ;; CLJS `apply` + `vector` will hold onto mutable array of arguments directly\n    ;; https://github.com/tonsky/datascript/issues/262\n    (if #?(:clj  false\n           :cljs (identical? f vector))\n      (fn [tuple]\n        ;; TODO raise if not all args are bound\n        (let [args (da/aclone static-args)]\n          (dotimes [i len]\n            (when-some [tuple-idx (aget tuples-args i)]\n              (let [v (#?(:cljs da/aget :clj get) tuple tuple-idx)]\n                (da/aset args i v))))\n          (apply f args)))\n      (fn [tuple]\n        ;; TODO raise if not all args are bound\n        (dotimes [i len]\n          (when-some [tuple-idx (aget tuples-args i)]\n            (let [v (#?(:cljs da/aget :clj get) tuple tuple-idx)]\n              (da/aset static-args i v))))\n        (apply f static-args)))))\n\n(defn- resolve-sym [sym]\n  #?(:cljs nil\n     :clj (when (namespace sym)\n            (when-some [v (resolve sym)] @v))))\n\n(defn filter-by-pred [context clause]\n  (let [[[f & args]] clause\n        pred         (or (get built-ins/query-fns f)\n                         (context-resolve-val context f)\n                         (resolve-sym f)\n                         (when (nil? (rel-with-attr context f))\n                           (raise \"Unknown predicate '\" f \" in \" clause\n                                  {:error :query/where, :form clause, :var f})))\n        [context production] (rel-prod-by-attrs context (filter symbol? args))\n        new-rel      (if pred\n                       (let [tuple-pred (-call-fn context production pred args)]\n                         (update production :tuples #(filter tuple-pred %)))\n                       (assoc production :tuples []))]\n    (update context :rels conj new-rel)))\n\n(defn bind-by-fn [context clause]\n  (let [[[f & args] out] clause\n        binding  (dp/parse-binding out)\n        fun      (or (get built-ins/query-fns f)\n                     (context-resolve-val context f)\n                     (resolve-sym f)\n                     (when (nil? (rel-with-attr context f))\n                       (raise \"Unknown function '\" f \" in \" clause\n                              {:error :query/where, :form clause, :var f})))\n        [context production] (rel-prod-by-attrs context (filter symbol? args))\n        new-rel  (if fun\n                   (let [tuple-fn (-call-fn context production fun args)\n                        rels     (for [tuple (:tuples production)\n                                       :let  [val (tuple-fn tuple)]\n                                       :when (not (nil? val))]\n                                   (prod-rel (Relation. (:attrs production) [tuple])\n                                             (in->rel binding val)))]\n                     (if (empty? rels)\n                       (prod-rel production (empty-rel binding))\n                       (reduce sum-rel rels)))\n                   (prod-rel (assoc production :tuples []) (empty-rel binding)))]\n    (update context :rels collapse-rels new-rel)))\n\n;;; RULES\n\n(defn rule? [context clause]\n  (cond+\n    (not (sequential? clause))\n    false\n\n    :let [head (if (source? (first clause))\n                  (second clause)\n                  (first clause))]\n\n    (not (symbol? head))\n    false\n\n    (free-var? head)\n    false\n\n    (contains? #{'_ 'or 'or-join 'and 'not 'not-join} head)\n    false\n\n    (not (contains? (:rules context) head))\n    (raise \"Unknown rule '\" head \" in \" clause\n      {:error :query/where\n       :form  clause})\n\n    :else true))\n\n(def rule-seqid (atom 0))\n\n(defn expand-rule [clause context used-args]\n  (let [[rule & call-args] clause\n        seqid              (swap! rule-seqid inc)\n        branches           (get (:rules context) rule)]\n    (for [branch branches\n          :let [[[_ & rule-args] & clauses] branch\n                replacements (zipmap rule-args call-args)]]\n      (walk/postwalk\n       #(if (free-var? %)\n          (db/some-of\n            (replacements %)\n            (symbol (str (name %) \"__auto__\" seqid)))\n          %)\n        clauses))))\n\n(defn remove-pairs [xs ys]\n  (let [pairs (->> (map vector xs ys)\n                   (remove (fn [[x y]] (= x y))))]\n    [(map first pairs)\n     (map second pairs)]))\n\n(defn rule-gen-guards [rule-clause used-args]\n  (let [[rule & call-args] rule-clause\n        prev-call-args     (get used-args rule)]\n    (for [prev-args prev-call-args\n          :let [[call-args prev-args] (remove-pairs call-args prev-args)]]\n      [(concat ['-differ?] call-args prev-args)])))\n\n(defn walk-collect [form pred]\n  (let [res (atom [])]\n    (walk/postwalk #(do (when (pred %) (swap! res conj %)) %) form)\n    @res))\n\n(defn collect-vars [clause]\n  (set (walk-collect clause free-var?)))\n\n(defn split-guards [clauses guards]\n  (let [bound-vars (collect-vars clauses)\n        pred       (fn [[[_ & vars]]] (every? bound-vars vars))]\n    [(filter pred guards)\n     (remove pred guards)]))\n\n(defn solve-rule [context clause]\n  (let [final-attrs     (filter free-var? clause)\n        final-attrs-map (zipmap final-attrs (range))\n;;         clause-cache    (atom {}) ;; TODO\n        solve           (fn [prefix-context clauses]\n                          (reduce -resolve-clause prefix-context clauses))\n        empty-rels?     (fn [context]\n                          (some #(empty? (:tuples %)) (:rels context)))]\n    (loop [stack (list {:prefix-clauses []\n                        :prefix-context context\n                        :clauses        [clause]\n                        :used-args      {}\n                        :pending-guards {}})\n           rel   (Relation. final-attrs-map [])]\n      (if-some [frame (first stack)]\n        (let [[clauses [rule-clause & next-clauses]] (split-with #(not (rule? context %)) (:clauses frame))]\n          (if (nil? rule-clause)\n\n            ;; no rules -> expand, collect, sum\n            (let [context (solve (:prefix-context frame) clauses)\n                  tuples  (-collect context final-attrs)\n                  new-rel (Relation. final-attrs-map tuples)]\n              (recur (next stack) (sum-rel rel new-rel)))\n\n            ;; has rule -> add guards -> check if dead -> expand rule -> push to stack, recur\n            (let [[rule & call-args]     rule-clause\n                  guards                 (rule-gen-guards rule-clause (:used-args frame))\n                  [active-gs pending-gs] (split-guards (concat (:prefix-clauses frame) clauses)\n                                                       (concat guards (:pending-guards frame)))]\n              (if (some #(= % '[(-differ?)]) active-gs) ;; trivial always false case like [(not= [?a ?b] [?a ?b])]\n\n                ;; this branch has no data, just drop it from stack\n                (recur (next stack) rel)\n\n                (let [prefix-clauses (concat clauses active-gs)\n                      prefix-context (solve (:prefix-context frame) prefix-clauses)]\n                  (if (empty-rels? prefix-context)\n\n                    ;; this branch has no data, just drop it from stack\n                    (recur (next stack) rel)\n\n                    ;; need to expand rule to branches\n                    (let [used-args  (assoc (:used-args frame) rule\n                                       (conj (get (:used-args frame) rule []) call-args))\n                          branches   (expand-rule rule-clause context used-args)]\n                      (recur (concat\n                               (for [branch branches]\n                                 {:prefix-clauses prefix-clauses\n                                  :prefix-context prefix-context\n                                  :clauses        (concatv branch next-clauses)\n                                  :used-args      used-args\n                                  :pending-guards pending-gs})\n                               (next stack))\n                             rel))))))))\n        rel))))\n\n(defn resolve-pattern-lookup-refs [source pattern]\n  (if (satisfies? db/IDB source)\n    (let [[e a v tx] pattern]\n      (->\n        [(if (or (lookup-ref? e) (attr? e)) (db/entid-strict source e) e)\n         a\n         (if (and v (attr? a) (db/ref? source a) (or (lookup-ref? v) (attr? v))) (db/entid-strict source v) v)\n         (if (lookup-ref? tx) (db/entid-strict source tx) tx)]\n        (subvec 0 (count pattern))))\n    pattern))\n\n(defn dynamic-lookup-attrs [source pattern]\n  (let [[e a v tx] pattern]\n    (cond-> #{}\n      (free-var? e) (conj e)\n      (free-var? tx) (conj tx)\n      (and\n        (free-var? v)\n        (not (free-var? a))\n        (db/ref? source a)) (conj v))))\n\n(defn limit-rel [rel vars]\n  (when-some [attrs' (not-empty (select-keys (:attrs rel) vars))]\n    (assoc rel :attrs attrs')))\n\n(defn limit-context [context vars]\n  (assoc context\n    :rels (->> (:rels context)\n               (keep #(limit-rel % vars)))))\n\n(defn bound-vars [context]\n  (into #{} (mapcat #(keys (:attrs %)) (:rels context))))\n\n(defn check-bound [bound vars form]\n  (when-not (set/subset? vars bound)\n    (let [missing (set/difference (set vars) bound)]\n      (raise \"Insufficient bindings: \" missing \" not bound in \" form\n             {:error :query/where\n              :form  form\n              :vars  missing}))))\n\n(defn check-free-same [bound branches form]\n  (let [free (mapv #(set/difference (collect-vars %) bound) branches)]\n    (when-not (apply = free)\n      (raise \"All clauses in 'or' must use same set of free vars, had \" free \" in \" form\n             {:error :query/where\n              :form  form\n              :vars  free}))))\n\n(defn check-free-subset [bound vars branches]\n  (let [free (set (remove bound vars))]\n    (doseq [branch branches]\n      (when-some [missing (not-empty (set/difference free (collect-vars branch)))]\n        (prn branch bound vars free)\n        (raise \"All clauses in 'or' must use same set of free vars, had \" missing \" not bound in \" branch\n          {:error :query/where\n           :form  branch\n           :vars  missing})))))\n\n(defn -resolve-clause\n  ([context clause]\n    (-resolve-clause context clause clause))\n  ([context clause orig-clause]\n   (condp looks-like? clause\n     [[symbol? '*]] ;; predicate [(pred ?a ?b ?c)]\n     (do\n       (check-bound (bound-vars context) (filter free-var? (nfirst clause)) clause)\n       (filter-by-pred context clause))\n     \n     [[symbol? '*] '_] ;; function [(fn ?a ?b) ?res]\n     (do\n       (check-bound (bound-vars context) (filter free-var? (nfirst clause)) clause)\n       (bind-by-fn context clause))\n     \n     [source? '*] ;; source + anything\n     (let [[source-sym & rest] clause]\n       (binding [*implicit-source* (get (:sources context) source-sym)]\n         (-resolve-clause context rest clause)))\n     \n     '[or *] ;; (or ...)\n     (let [[_ & branches] clause\n           _        (check-free-same (bound-vars context) branches clause)\n           contexts (map #(resolve-clause context %) branches)\n           rels     (map #(reduce hash-join (:rels %)) contexts)]\n       (assoc (first contexts) :rels [(reduce sum-rel rels)]))\n     \n     '[or-join [[*] *] *] ;; (or-join [[req-vars] vars] ...)\n     (let [[_ [req-vars & vars] & branches] clause\n           bound (bound-vars context)]\n       (check-bound bound req-vars orig-clause)\n       (check-free-subset bound vars branches)\n       (recur context (list* 'or-join (concat req-vars vars) branches) clause))\n     \n     '[or-join [*] *] ;; (or-join [vars] ...)\n     (let [[_ vars & branches] clause\n           vars         (set vars)\n           _            (check-free-subset (bound-vars context) vars branches)\n           join-context (limit-context context vars)\n           contexts     (map #(-> join-context (resolve-clause %) (limit-context vars)) branches)\n           rels         (map #(reduce hash-join (:rels %)) contexts)\n           sum-rel      (reduce sum-rel rels)]\n       (update context :rels collapse-rels sum-rel))\n     \n     '[and *] ;; (and ...)\n     (let [[_ & clauses] clause]\n       (reduce resolve-clause context clauses))\n     \n     '[not *] ;; (not ...)\n     (let [[_ & clauses] clause\n           bound            (bound-vars context)\n           negation-vars    (collect-vars clauses)\n           _                (when (empty? (set/intersection bound negation-vars))\n                              (raise \"Insufficient bindings: none of \" negation-vars \" is bound in \" orig-clause\n                                {:error :query/where\n                                 :form  orig-clause}))\n           context'         (assoc context :rels [(reduce hash-join (:rels context))])\n           negation-context (reduce resolve-clause context' clauses)\n           negation         (subtract-rel\n                              (single (:rels context'))\n                              (reduce hash-join (:rels negation-context)))]\n       (assoc context' :rels [negation]))\n     \n     '[not-join [*] *] ;; (not-join [vars] ...)\n     (let [[_ vars & clauses] clause\n           bound            (bound-vars context)\n           _                (check-bound bound vars orig-clause)\n           context'         (assoc context :rels [(reduce hash-join (:rels context))])\n           join-context     (limit-context context' vars)\n           negation-context (-> (reduce resolve-clause join-context clauses)\n                                (limit-context vars))\n           negation         (subtract-rel\n                              (single (:rels context'))\n                              (reduce hash-join (:rels negation-context)))]\n       (assoc context' :rels [negation]))\n     \n     '[*] ;; pattern\n     (let [source   *implicit-source*\n           pattern  (resolve-pattern-lookup-refs source clause)\n           relation (lookup-pattern source pattern)]\n       (binding [*lookup-attrs* (if (satisfies? db/IDB source)\n                                  (dynamic-lookup-attrs source pattern)\n                                  *lookup-attrs*)]\n         (update context :rels collapse-rels relation))))))\n\n(defn resolve-clause [context clause]\n  (if (rule? context clause)\n    (if (source? (first clause))\n      (binding [*implicit-source* (get (:sources context) (first clause))]\n        (resolve-clause context (next clause)))\n      (update context :rels collapse-rels (solve-rule context clause)))\n    (-resolve-clause context clause)))\n\n(defn -q [context clauses]\n  (binding [*implicit-source* (get (:sources context) '$)]\n    (reduce resolve-clause context clauses)))\n\n(defn -collect\n  ([context symbols]\n    (let [rels (:rels context)]\n      (-collect [(da/make-array (count symbols))] rels symbols)))\n  ([acc rels symbols]\n   (cond+\n     :let [rel (first rels)]\n \n     (nil? rel) acc\n \n     ;; one empty rel means final set has to be empty\n     (empty? (:tuples rel)) []\n \n     :let [keep-attrs (select-keys (:attrs rel) symbols)]\n \n     (empty? keep-attrs) (recur acc (next rels) symbols)\n \n     :let [copy-map (to-array (map #(get keep-attrs %) symbols))\n           len      (count symbols)]\n\n     :else\n     (recur\n       (for [#?(:cljs t1\n                :clj ^{:tag \"[[Ljava.lang.Object;\"} t1) acc\n             t2 (:tuples rel)]\n         (let [res (aclone t1)]\n           (dotimes [i len]\n             (when-some [idx (aget copy-map i)]\n               (aset res i (#?(:cljs da/aget :clj get) t2 idx))))\n           res))\n       (next rels)\n       symbols))))\n\n(defn collect [context symbols]\n  (->> (-collect context symbols)\n       (map vec)\n       set))\n\n(defprotocol IContextResolve\n  (-context-resolve [var context]))\n\n(extend-protocol IContextResolve\n  Variable\n  (-context-resolve [var context]\n    (context-resolve-val context (.-symbol var)))\n  SrcVar\n  (-context-resolve [var context]\n    (get-in context [:sources (.-symbol var)]))\n  PlainSymbol\n  (-context-resolve [var _]\n    (or (get built-ins/aggregates (.-symbol var))\n        (resolve-sym (.-symbol var))))\n  Constant\n  (-context-resolve [var _]\n    (.-value var)))\n\n(defn -aggregate [find-elements context tuples]\n  (mapv (fn [element fixed-value i]\n          (if (dp/aggregate? element)\n            (let [f    (-context-resolve (:fn element) context)\n                  args (map #(-context-resolve % context) (butlast (:args element)))\n                  vals (map #(nth % i) tuples)]\n              (apply f (concat args [vals])))\n            fixed-value))\n    find-elements\n    (first tuples)\n    (range)))\n\n(defn- idxs-of [pred coll]\n  (->> (map #(when (pred %1) %2) coll (range))\n       (remove nil?)))\n\n(defn aggregate [find-elements context resultset]\n  (let [group-idxs (idxs-of (complement dp/aggregate?) find-elements)\n        group-fn   (fn [tuple]\n                     (map #(nth tuple %) group-idxs))\n        grouped    (group-by group-fn resultset)]\n    (for [[_ tuples] grouped]\n      (-aggregate find-elements context tuples))))\n\n(defn map* [f xs]\n  (reduce #(conj %1 (f %2)) (empty xs) xs))\n\n(defn tuples->return-map [return-map tuples]\n  (let [symbols (:symbols return-map)\n        idxs    (range 0 (count symbols))]\n    (map*\n      (fn [tuple]\n        (reduce\n          (fn [m i] (assoc m (nth symbols i) (nth tuple i)))\n          {} idxs))\n      tuples)))\n\n(defprotocol IPostProcess\n  (-post-process [find return-map tuples]))\n\n(extend-protocol IPostProcess\n  FindRel\n  (-post-process [_ return-map tuples]\n    (if (nil? return-map)\n      tuples\n      (tuples->return-map return-map tuples)))\n\n  FindColl\n  (-post-process [_ return-map tuples]\n    (into [] (map first) tuples))\n\n  FindScalar\n  (-post-process [_ return-map tuples]\n    (ffirst tuples))\n\n  FindTuple\n  (-post-process [_ return-map tuples]\n    (if (some? return-map)\n      (first (tuples->return-map return-map [(first tuples)]))\n      (first tuples))))\n\n(defn- pull [find-elements context resultset]\n  (let [resolved (for [find find-elements]\n                   (when (dp/pull? find)\n                     (let [db (-context-resolve (:source find) context)\n                           pattern (-context-resolve (:pattern find) context)]\n                       (dpa/parse-opts db pattern))))]\n    (for [tuple resultset]\n      (mapv\n        (fn [parsed-opts el]\n          (if parsed-opts\n            (dpa/pull-impl parsed-opts el)\n            el))\n        resolved\n        tuple))))\n\n(defn q [q & inputs]\n  (let [parsed-q      (lru/-get *query-cache* q #(dp/parse-query q))\n        find          (:qfind parsed-q)\n        find-elements (dp/find-elements find)\n        find-vars     (dp/find-vars find)\n        result-arity  (count find-elements)\n        with          (:qwith parsed-q)\n        ;; TODO utilize parser\n        all-vars      (concat find-vars (map :symbol with))\n        q             (cond-> q\n                        (sequential? q) dp/query->map)\n        wheres        (:where q)\n        context       (-> (Context. [] {} {})\n                        (resolve-ins (:qin parsed-q) inputs))\n        resultset     (-> context\n                        (-q wheres)\n                        (collect all-vars))]\n    (cond->> resultset\n      (:with q)\n        (mapv #(vec (subvec % 0 result-arity)))\n      (some dp/aggregate? find-elements)\n        (aggregate find-elements context)\n      (some dp/pull? find-elements)\n        (pull find-elements context)\n      true\n        (-post-process find (:qreturn-map parsed-q)))))\n","~:reader-features",["^H",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["datascript.query/*query-cache*","datascript.lru/cache","this__4502__auto__","k__4503__auto__","this__4504__auto__","k41551","else__4505__auto__","G__41555","cljs.core/Keyword","rels","sources","rules","cljs.core.get","__extmap","this__4522__auto__","f__4523__auto__","init__4524__auto__","cljs.core.reduce","ret__4525__auto__","p__41556","vec__41557","k__4526__auto__","cljs.core.nth","v__4527__auto__","this__4517__auto__","writer__4518__auto__","opts__4519__auto__","pr-pair__4520__auto__","keyval__4521__auto__","cljs.core/pr-sequential-writer","cljs.core.concat","cljs.core/PersistentVector","G__41550","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__4500__auto__","__meta","this__4497__auto__","__hash","this__4506__auto__","cljs.core/count","this__4498__auto__","h__4360__auto__","coll__4499__auto__","cljs.core/hash-unordered-coll","this41552","other41553","cljs.core._EQ_","this__4512__auto__","k__4513__auto__","cljs.core/contains?","cljs.core.dissoc","cljs.core/-with-meta","cljs.core.into","cljs.core/not-empty","this__4509__auto__","G__41562","this__4510__auto__","k__4511__auto__","pred__41564","cljs.core/keyword-identical?","expr__41565","cljs.core.assoc","this__4515__auto__","cljs.core/seq","cljs.core/MapEntry","this__4501__auto__","this__4507__auto__","entry__4508__auto__","cljs.core/vector?","cljs.core/-nth","cljs.core/-conj","datascript.query/Context","this__4546__auto__","cljs.core/List","writer__4547__auto__","cljs.core/-write","G__41554","extmap__4542__auto__","G__41568","cljs.core/record?","datascript.query/->Context","datascript.query/map->Context","k41571","G__41575","attrs","tuples","p__41576","vec__41577","G__41570","this41572","other41573","G__41582","pred__41583","expr__41584","datascript.query/Relation","G__41574","G__41587","datascript.query/->Relation","datascript.query/map->Relation","datascript.query/single","coll","js/Error","cljs.core/next","cljs.core/first","datascript.query/intersect-keys","attrs1","attrs2","clojure.set.intersection","cljs.core/set","cljs.core/keys","var_args","args__4870__auto__","len__4864__auto__","i__4865__auto__","argseq__4871__auto__","cljs.core/IndexedSeq","datascript.query/concatv","seq41589","self__4852__auto__","xs","cljs.core/cat","G__41595","datascript.query/zip","args-arr__4885__auto__","argseq__4886__auto__","seq41592","G__41593","G__41594","self__4851__auto__","a","b","cljs.core.mapv","cljs.core/vector","rest","cljs.core.apply","cljs.core/mapv","datascript.query/same-keys?","p1__41596#","cljs.core/every?","p1__41597#","datascript.query/looks-like?","pattern","form","cljs.core/sequential?","cljs.core/Symbol","cljs.core/last","p__41599","vec__41600","pattern-el","form-el","cljs.core.map","cljs.core/butlast","p__41603","vec__41604","datascript.query/source?","sym","cljs.core/name","datascript.query/free-var?","datascript.query/attr?","datascript.query/lookup-ref?","datascript.query/join-tuples","t1","idxs1","t2","idxs2","l1","l2","res","me.tonsky.persistent-sorted-set.arrays/make-array","n__4741__auto__","i","datascript.query/sum-rel","map__41610","cljs.core/--destructure-map","map__41611","attrs-a","tuples-a","attrs-b","tuples-b","cljs.core/vec","cljs.core.ex_info","cljs.core.pr_str","cljs.core/number?","cljs.core/vals","idxb->idxa","iter__4652__auto__","s__41613","cljs.core/LazySeq","temp__5753__auto__","cljs.core/chunked-seq?","c__4650__auto__","size__4651__auto__","b__41615","cljs.core/chunk-buffer","i__41614","vec__41617","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__41612","cljs.core/chunk-rest","vec__41620","cljs.core/cons","cljs.core/rest","idx-b","tlen","cljs.core/max","tuples'","cljs.core/persistent!","acc","tuple-b","tuple'","seq__41623","chunk__41624","count__41625","i__41626","vec__41634","c__4679__auto__","cljs.core/chunk-first","vec__41637","idx-a","cljs.core.conj_BANG_","cljs.core/transient","all-attrs","cljs.core/zipmap","cljs.core.merge","cljs.core.range","G__41642","G__41643","G__41640","G__41641","G__41646","datascript.query/prod-rel","rel1","rel2","cljs.core/to-array","datascript.query/parse-rules","cljs.reader.read_string","datascript.parser/parse-rules","cljs.core/group-by","cljs.core/ffirst","datascript.query/empty-rel","binding","vars","datascript.parser/collect-vars-distinct","datascript$query$IBinding$in__GT_rel$dyn","x__4550__auto__","m__4551__auto__","datascript.query/in->rel","goog/typeOf","m__4549__auto__","cljs.core/missing-protocol","datascript.query/IBinding","value","cljs.core/PROTOCOL_SENTINEL","datascript.parser/BindIgnore","_","datascript.query.prod_rel","datascript.parser/BindScalar","cljs.core.get_in","cljs.core.into_array","datascript.parser/BindColl","datascript.db/seqable?","datascript.parser/source","cljs.core/empty?","p1__41648#","datascript.parser/BindTuple","p1__41649#","p2__41650#","p__41653","vec__41654","datascript.query/resolve-in","context","datascript.parser/SrcVar","cljs.core.update","cljs.core/assoc","datascript.parser/RulesVar","cljs.core/conj","datascript.query/resolve-ins","bindings","values","cb","cv","p1__41658#","cljs.core/meta","p1__41659#","datascript.query/*lookup-attrs*","datascript.query/*implicit-source*","datascript.query/getter-fn","attr","idx","tuple","eid","datascript.db/entid","me.tonsky.persistent-sorted-set.arrays/array?","datascript.query/tuple-key-fn","getters","cljs.core.list_STAR_","p1__41662#","datascript.query/hash-attrs","key-fn","hash-table","temp__5755__auto__","key","cljs.core.assoc_BANG_","cljs.core.conj","datascript.query/hash-join","tuples1","tuples2","common-attrs","common-gtrs1","p1__41665#","common-gtrs2","p1__41666#","keep-attrs1","keep-attrs2","clojure.set.difference","keep-idxs1","keep-idxs2","key-fn1","hash","key-fn2","new-tuples","tuple2","tuple1","datascript.query/subtract-rel","map__41670","map__41671","getters-b","p1__41667#","key-fn-b","getters-a","p1__41668#","key-fn-a","p1__41669#","cljs.core/filterv","G__41672","datascript.query/lookup-pattern-db","db","search-pattern","p1__41674#","datoms","datascript.db/-search","attr->prop","cljs.core.filter","p__41675","vec__41677","s","datascript.query/matches-pattern?","and__4251__auto__","t","p","datascript.query/lookup-pattern-coll","data","p1__41680#","attr->idx","p__41682","vec__41683","datascript.query/normalize-pattern-clause","clause","datascript.query/lookup-pattern","source","cljs.core/native-satisfies?","datascript.db/ISearch","datascript.query/collapse-rels","new-rel","rel","datascript.query/rel-with-attr","p1__41688#","cljs.core/some","datascript.query/context-resolve-val","temp__5757__auto__","fexpr__41690","datascript.query/rel-contains-attrs?","p1__41691#","datascript.query/rel-prod-by-attrs","p1__41692#","production","p1__41693#","cljs.core.remove","datascript.query/-call-fn","f","args","len","static-args","tuples-args","arg","me.tonsky.persistent-sorted-set.arrays/aclone","tuple-idx","v","datascript.query/resolve-sym","datascript.query/filter-by-pred","vec__41698","vec__41701","seq__41702","first__41703","vec__41704","pred","or__4253__auto__","datascript.built-ins/query-fns","cljs.core/symbol?","tuple-pred","p1__41697#","datascript.query/bind-by-fn","vec__41708","vec__41711","seq__41712","first__41713","vec__41714","out","datascript.parser/parse-binding","fun","tuple-fn","s__41719","b__41721","i__41720","iter__41718","val","datascript.query/rule?","head","cljs.core/second","datascript.query/rule-seqid","cljs.core.atom","datascript.query/expand-rule","used-args","vec__41725","seq__41726","first__41727","rule","call-args","seqid","cljs.core.swap_BANG_","cljs.core/inc","branches","s__41729","b__41731","i__41730","vec__41732","seq__41733","first__41734","vec__41735","seq__41736","first__41737","iter__41728","vec__41739","seq__41740","first__41741","vec__41742","seq__41743","first__41744","branch","rule-args","clauses","replacements","p1__41724#","clojure.walk/postwalk","x__37893__auto__","cljs.core.symbol","datascript.query/remove-pairs","ys","pairs","p__41746","vec__41747","x","y","datascript.query/rule-gen-guards","rule-clause","vec__41750","seq__41751","first__41752","prev-call-args","s__41754","b__41756","i__41755","vec__41757","iter__41753","vec__41760","prev-args","datascript.query/walk-collect","cljs.core/deref","p1__41763#","datascript.query/collect-vars","datascript.query/split-guards","guards","bound-vars","p__41764","vec__41765","vec__41768","seq__41769","first__41770","datascript.query/solve-rule","final-attrs","final-attrs-map","solve","prefix-context","datascript.query/-resolve-clause","empty-rels?","p1__41771#","stack","frame","vec__41795","vec__41798","seq__41799","first__41800","next-clauses","p1__41773#","cljs.core/split-with","datascript.query/-collect","vec__41801","seq__41802","first__41803","vec__41804","active-gs","pending-gs","p1__41774#","prefix-clauses","s__41809","b__41811","i__41810","iter__41808","datascript.query.concatv","datascript.query/resolve-pattern-lookup-refs","datascript.db/IDB","vec__41815","e","tx","datascript.db/entid-strict","datascript.db/ref?","cljs.core.subvec","datascript.query/dynamic-lookup-attrs","vec__41819","G__41822","datascript.query/limit-rel","attrs'","cljs.core/select-keys","datascript.query/limit-context","p1__41824#","cljs.core.keep","datascript.query/bound-vars","p1__41825#","cljs.core.mapcat","datascript.query/check-bound","bound","clojure.set/subset?","missing","datascript.query/check-free-same","free","p1__41827#","cljs.core/=","datascript.query/check-free-subset","seq__41829","chunk__41830","count__41831","i__41832","cljs.core.prn","G__41841","datascript.query._resolve_clause","orig-clause","pred__41842","expr__41843","G__41846","G__41847","G__41848","G__41849","G__41850","G__41851","G__41858","G__41859","G__41863","G__41864","G__41871","G__41872","G__41876","G__41877","G__41881","G__41882","G__41886","G__41887","G__41891","G__41892","cljs.core/nfirst","vec__41852","seq__41853","first__41854","source-sym","*implicit-source*-orig-val__41855","*implicit-source*-temp-val__41856","vec__41860","seq__41861","first__41862","contexts","p1__41835#","datascript.query/resolve-clause","p1__41836#","vec__41865","seq__41866","first__41867","vec__41868","seq__41869","first__41870","req-vars","vec__41873","seq__41874","first__41875","join-context","p1__41837#","p1__41839#","sum-rel","vec__41878","seq__41879","first__41880","vec__41883","seq__41884","first__41885","negation-vars","context'","negation-context","negation","vec__41888","seq__41889","first__41890","relation","*lookup-attrs*-orig-val__41893","*lookup-attrs*-temp-val__41894","*implicit-source*-orig-val__41896","*implicit-source*-temp-val__41897","G__41898","G__41899","datascript.query/-q","*implicit-source*-orig-val__41900","*implicit-source*-temp-val__41901","G__41905","symbols","datascript.query._collect","keep-attrs","copy-map","p1__41903#","s__41908","xs__6308__auto__","iterys__4648__auto__","s__41910","b__41912","i__41911","iter__41909","fs__4649__auto__","iter__41907","cljs.core/aclone","datascript.query/collect","datascript$query$IContextResolve$_context_resolve$dyn","datascript.query/-context-resolve","datascript.query/IContextResolve","var","datascript.parser/Variable","datascript.parser/PlainSymbol","datascript.built-ins/aggregates","datascript.parser/Constant","datascript.query/-aggregate","find-elements","element","fixed-value","datascript.parser/aggregate?","p1__41930#","vals","p1__41931#","datascript.query/idxs-of","p1__41933#","p2__41934#","cljs.core/nil?","datascript.query/aggregate","resultset","group-idxs","cljs.core/complement","group-fn","p1__41935#","grouped","s__41937","b__41939","i__41938","vec__41941","iter__41936","vec__41944","datascript.query/map*","p1__41947#","p2__41948#","cljs.core/empty","datascript.query/tuples->return-map","return-map","idxs","m","datascript$query$IPostProcess$_post_process$dyn","datascript.query/-post-process","datascript.query/IPostProcess","find","datascript.parser/FindRel","datascript.parser/FindColl","datascript.parser/FindScalar","datascript.parser/FindTuple","datascript.query/pull","resolved","s__41974","b__41976","i__41975","iter__41973","datascript.parser/pull?","datascript.pull_api.parse_opts","s__41978","b__41980","i__41979","iter__41977","parsed-opts","el","datascript.pull-api/pull-impl","datascript.query/q","seq41982","G__41983","q","inputs","parsed-q","datascript.lru/-get","datascript.parser/parse-query","datascript.parser/find-elements","find-vars","datascript.parser/find-vars","result-arity","with","all-vars","G__41984","datascript.parser/query->map","wheres","G__41985","p1__41981#"]],"~:used-vars",["^H",["~$cljs.core/to-array","~$cljs.core/mapcat","~$datascript.query/expand-rule","~$cljs.core/--destructure-map","~$datascript.query/looks-like?","~$datascript.query/IPostProcess","~$cljs.core/keep","~$me.tonsky.persistent-sorted-set.arrays/make-array","~$datascript.query/-resolve-clause","~$datascript.parser/find-elements","~$cljs.core/PROTOCOL_SENTINEL","~$cljs.core/rest","~$clojure.set/intersection","~$datascript.built-ins/query-fns","~$datascript.query/lookup-pattern","~$datascript.query/*implicit-source*","~$datascript.query/->Relation","~$cljs.core/sequential?","~$datascript.query/in->rel","~$datascript.parser/PlainSymbol","~$cljs.core/pr-sequential-writer","~$datascript.query/*query-cache*","~$datascript.query/free-var?","~$datascript.query/parse-rules","~$datascript.query/limit-context","~$cljs.core/vector?","~$cljs.core/filter","~$cljs.core/=","~$datascript.query/hash-join","~$datascript.query/-call-fn","~$datascript.parser/FindScalar","~$cljs.core/keys","~$cljs.core/-assoc","~$cljs.core/into-array","~$datascript.query/lookup-ref?","~$cljs.core/-write","~$datascript.query/dynamic-lookup-attrs","~$datascript.query/same-keys?","~$cljs.core/IndexedSeq","~$datascript.db/-search","~$datascript.parser/RulesVar","~$cljs.core/-iterator","~$datascript.query/rel-with-attr","~$cljs.core/count","~$cljs.core/deref","~$datascript.parser/SrcVar","~$goog/typeOf","~$datascript.parser/collect-vars-distinct","~$datascript.query/sum-rel","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.core/chunk-first","~$datascript.query/join-tuples","~$cljs.core/apply","~$datascript.lru/cache","~$datascript.query/Context","~$cljs.core/Keyword","~$cljs.core/prn","~$datascript.query/check-free-subset","~$datascript.query/split-guards","~$cljs.core/aclone","~$cljs.core/group-by","~$datascript.db/ref?","~$cljs.core/last","~$cljs.core/chunk","~$cljs.core/mapv","~$cljs.core/MapEntry","~$cljs.core/dissoc","~$cljs.core/keyword-identical?","~$datascript.query/filter-by-pred","~$cljs.core/LazySeq","~$cljs.core/chunk-rest","~$datascript.query/normalize-pattern-clause","~$cljs.core/atom","~$datascript.parser/find-vars","~$datascript.query/map->Context","~$cljs.core/-with-meta","~$datascript.query/map->Relation","~$datascript.db/IDB","~$cljs.core/concat","~$datascript.query/zip","~$cljs.core/pr-str","~$datascript.query/collect","~$datascript.query/-context-resolve","~$datascript.query/resolve-clause","~$datascript.built-ins/aggregates","~$cljs.core/set","~$datascript.query/lookup-pattern-db","~$datascript.query/-post-process","~$cljs.core/native-satisfies?","~$cljs.core/empty?","~$datascript.query/getter-fn","~$datascript.parser/parse-rules","~$datascript.parser/pull?","~$cljs.core/contains?","~$datascript.query/collapse-rels","~$cljs.core/into","~$cljs.core/conj","~$datascript.query/idxs-of","~$cljs.core/zipmap","~$cljs.core/-conj","~$datascript.parser/query->map","~$cljs.core/update","~$datascript.parser/BindColl","~$cljs.core/map","~$datascript.query/Relation","~$datascript.parser/Constant","~$cljs.core/filterv","~$cljs.core/PersistentVector","~$cljs.core/nfirst","~$datascript.query/matches-pattern?","~$cljs.core/get-in","~$datascript.pull-api/pull-impl","~$datascript.pull-api/parse-opts","~$cljs.core/List","~$cljs.core/empty","~$datascript.parser/BindIgnore","~$cljs.core/vals","~$cljs.core/swap!","~$datascript.query/empty-rel","~$datascript.parser/BindScalar","~$datascript.query/bound-vars","~$cljs.core/number?","~$datascript.parser/parse-binding","~$cljs.core/get","~$me.tonsky.persistent-sorted-set.arrays/array?","~$datascript.query/hash-attrs","~$datascript.query/check-bound","~$datascript.query/solve-rule","~$datascript.db/entid-strict","~$cljs.core/chunk-append","~$cljs.core/-nth","~$cljs.core/remove","~$datascript.query/pull","~$cljs.core/not-empty","~$clojure.set/difference","~$datascript.query/limit-rel","~$cljs.core/cat","~$cljs.core/symbol","~$cljs.core/conj!","~$datascript.query/bind-by-fn","~$datascript.db/ISearch","~$cljs.core/record?","~$datascript.query/resolve-pattern-lookup-refs","~$cljs.core/missing-protocol","~$datascript.db/entid","~$datascript.parser/FindRel","~$cljs.core/persistent!","~$datascript.query/rel-prod-by-attrs","~$datascript.query/->Context","~$datascript.query/tuples->return-map","~$cljs.core/subvec","~$datascript.query/resolve-in","~$cljs.core/-lookup","~$clojure.walk/postwalk","~$datascript.query/tuple-key-fn","~$datascript.query/source?","~$cljs.core/nil?","~$datascript.parser/FindTuple","~$cljs.core/nth","~$cljs.core/ex-info","~$cljs.core/meta","~$datascript.query/check-free-same","~$datascript.query/-q","~$datascript.parser/Variable","~$datascript.db/seqable?","~$cljs.core/max","~$datascript.query/aggregate","~$cljs.core/second","~$cljs.core/nil-iter","~$clojure.set/subset?","~$cljs.core/split-with","~$datascript.query/rule?","~$cljs.core/next","~$cljs.core/vec","~$cljs.core/ffirst","~$cljs.core/RecordIter","~$cljs.core/select-keys","~$cljs.core/transient","~$datascript.query/resolve-sym","~$cljs.core/chunk-cons","~$datascript.query/remove-pairs","~$datascript.parser/FindColl","~$datascript.query/intersect-keys","~$cljs.core/not","~$cljs.core/complement","~$datascript.query/walk-collect","~$datascript.parser/aggregate?","~$datascript.query/attr?","~$datascript.parser/BindTuple","~$datascript.lru/-get","~$datascript.query/-collect","~$cljs.core/cons","~$datascript.query/IBinding","~$cljs.core/assoc","~$me.tonsky.persistent-sorted-set.arrays/aclone","~$datascript.query/IContextResolve","~$datascript.query/rule-seqid","~$datascript.query/lookup-pattern-coll","~$cljs.core/chunk-buffer","~$cljs.core/Symbol","~$cljs.core/symbol?","~$cljs.core/range","~$cljs.reader/read-string","~$cljs.core/hash-unordered-coll","~$datascript.query/rule-gen-guards","~$datascript.query/concatv","~$datascript.query/*lookup-attrs*","~$cljs.core/first","~$cljs.core/butlast","~$datascript.parser/source","~$datascript.query/resolve-ins","~$cljs.core/assoc!","~$datascript.query/single","~$datascript.parser/parse-query","~$cljs.core/name","~$cljs.core/merge","~$cljs.core/every?","~$datascript.query/subtract-rel","~$js/Error","~$cljs.core/list*","~$cljs.core/vector","~$datascript.query/-aggregate","~$cljs.core/inc","~$datascript.query/prod-rel","~$cljs.core/some","~$datascript.query/rel-contains-attrs?","~$datascript.query/q","~$datascript.query/context-resolve-val","~$cljs.core/chunked-seq?","~$datascript.query/map*","~$datascript.query/collect-vars"]]],"~:cache-keys",["~#cmap",[["^1V","datascript/db.cljc"],["3001ca64bfac62a277159ba626bea9e262583afa","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^H",[]],"~:deps-syms",["^Y","^X","~$goog.array","^[","~$clojure.data","^13","~$me.tonsky.persistent-sorted-set","^Q"]]],["^1V","goog/dom/tagname.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","~$goog.dom.HtmlElement"]]],["^1V","datascript/parser.cljc"],["3001ca64bfac62a277159ba626bea9e262583afa","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^X","^S","^E"]]],["^1V","cljs/tools/reader/impl/utils.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^X","^15","~$goog.string"]]],["^1V","goog/html/trustedtypes.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y"]]],["^1V","goog/labs/useragent/browser.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^7H","~$goog.object","~$goog.labs.userAgent.util","~$goog.string.internal"]]],["^1V","goog/html/safeurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","~$goog.asserts","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^7O"]]],["^1V","goog/array/array.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^7P"]]],["^1V","goog/debug/error.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y"]]],["^1V","cljs/tools/reader/edn.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^X","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^7L","~$goog.string.StringBuffer"]]],["^1V","datascript/query.cljc"],["3001ca64bfac62a277159ba626bea9e262583afa","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^X","^19","^S","^15","^[","^U","^E","^Q","^13","^17","^10","^W"]]],["^1V","goog/dom/nodetype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y"]]],["^1V","cljs/tools/reader/impl/inspect.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^X"]]],["^1V","cljs/tools/reader.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^X","^7X","^7Y","^7Z","^7W","^7H","^7L","^80"]]],["^1V","goog/string/typedstring.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y"]]],["^1V","goog/object/object.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y"]]],["^1V","goog/dom/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^7P"]]],"~:SHADOW-TIMESTAMP",[1685454171000,1685454171000,1685454150000],["^1V","goog/math/long.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^7P","~$goog.reflect"]]],["^1V","goog/html/trustedresourceurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^7P","~$goog.fs.blob","^7Q","~$goog.html.SafeScript","~$goog.html.trustedtypes","^7S","^7T","^7U","^7V"]]],["^1V","goog/string/internal.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y"]]],["^1V","datascript/pull_api.cljc"],["3001ca64bfac62a277159ba626bea9e262583afa","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^X","~$datascript.pull-parser","^E","^13","^7J"]]],["^1V","goog/functions/functions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y"]]],["^1V","goog/html/safestyle.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^7U","~$goog.html.SafeUrl","^7V","^7P","^7O"]]],["^1V","goog/dom/safe.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^7P","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^84","~$goog.html.SafeStyle","^87","^7R","~$goog.html.uncheckedconversions","^7U","^7O"]]],["^1V","clojure/walk.cljs"],["78c69af9064be23a596f27f744408340fe4ca37b","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^X"]]],["^1V","goog/html/safehtml.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^7U","^7S","^7T","^84","^8;","~$goog.html.SafeStyleSheet","^87","~$goog.dom.TagName","^7R","^7V","^7P","~$goog.labs.userAgent.browser","^7H","^7M","^7O","~$goog.dom.tags","^85"]]],["^1V","goog/dom/tags.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^7M"]]],["^1V","datascript/impl/entity.cljc"],["3001ca64bfac62a277159ba626bea9e262583afa","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^X","^E"]]],["^1V","me/tonsky/persistent_sorted_set/arrays.cljc"],["72e563d06c2c30ba8d331939722a699da6307431","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^X","^15"]]],["^1V","goog/fs/blob.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y"]]],["^1V","cljs/reader.cljs"],["78c69af9064be23a596f27f744408340fe4ca37b","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^X","^7M","^7[","~$cljs.tools.reader.edn","^80"]]],["^1V","goog/asserts/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1V","me/tonsky/persistent_sorted_set.cljs"],["72e563d06c2c30ba8d331939722a699da6307431","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^X","^Q"]]],["^1V","goog/uri/uri.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^7H","^7P","~$goog.collections.maps","^7L","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1V","goog/collections/maps.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y"]]],["^1V","goog/i18n/bidi.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y"]]],["^1V","goog/fs/url.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y"]]],["^1V","goog/base.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",[]]],["^1V","goog/structs/structs.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^7H","^7M"]]],["^1V","cljs/tools/reader/impl/errors.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^X","^7X","^15","~$cljs.tools.reader.impl.inspect"]]],["^1V","clojure/string.cljs"],["78c69af9064be23a596f27f744408340fe4ca37b","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^X","^7L","^80"]]],["^1V","datascript/pull_parser.cljc"],["3001ca64bfac62a277159ba626bea9e262583afa","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^X","^U","^E"]]],["^1V","goog/string/string.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","~$goog.dom.safe","^8<","^7U","^7O"]]],["^1V","clojure/data.cljs"],["78c69af9064be23a596f27f744408340fe4ca37b","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^X","^S"]]],["^1V","goog/reflect/reflect.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y"]]],["^1V","goog/labs/useragent/util.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","~$goog.labs.userAgent","^7O"]]],["^1V","goog/string/stringbuffer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y"]]],["^1V","cljs/tools/reader/reader_types.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^X","^7Y","^7L","^80"]]],["^1V","goog/labs/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y"]]],["^1V","goog/html/uncheckedconversions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^7P","^8:","^84","^8;","^8=","^87","^7R","^7U","^7O","^7S"]]],["^1V","datascript/lru.cljc"],["3001ca64bfac62a277159ba626bea9e262583afa","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^X"]]],["^1V","cljs/tools/reader/impl/commons.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^X","^7W","^7X","^7Y"]]],["^1V","goog/dom/htmlelement.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y"]]],["^1V","cljs/core.cljs"],["78c69af9064be23a596f27f744408340fe4ca37b","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","~$goog.math.Long","~$goog.math.Integer","^7L","^7M","^7H","~$goog.Uri","^80"]]],["^1V","goog/html/safescript.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^7U","^7V","^85","^7P"]]],["^1V","datascript/built_ins.cljc"],["3001ca64bfac62a277159ba626bea9e262583afa","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^X","^15","^E","^17"]]],["^1V","goog/html/safestylesheet.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^7U","^8;","^7V","^7M","^7P","^7O"]]],["^1V","goog/math/integer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^82"]]],["^1V","clojure/set.cljs"],["78c69af9064be23a596f27f744408340fe4ca37b","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^X"]]],["^1V","goog/uri/utils.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^7P","^7L"]]],["^1V","goog/string/const.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7D",["^ ","^7E",null,"^7F",["^H",[]],"^7G",["^Y","^7P","^7V"]]]]],"~:clj-info",["^ ","jar:file:/home/jo/.m2/repository/org/clojure/clojurescript/1.10.891/clojurescript-1.10.891.jar!/cljs/source_map/base64_vlq.clj",1685454150000,"jar:file:/home/jo/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/edn.clj",1685454147000,"jar:file:/home/jo/.m2/repository/org/clojure/clojurescript/1.10.891/clojurescript-1.10.891.jar!/cljs/analyzer.cljc",1685454150000,"jar:file:/home/jo/.m2/repository/datascript/datascript/1.3.5/datascript-1.3.5.jar!/datascript/parser.cljc",1685712163000,"jar:file:/home/jo/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/core.clj",1685454147000,"jar:file:/home/jo/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/default_data_readers.clj",1685454146000,"jar:file:/home/jo/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1685454146000,"jar:file:/home/jo/.m2/repository/org/clojure/clojurescript/1.10.891/clojurescript-1.10.891.jar!/cljs/util.cljc",1685454150000,"jar:file:/home/jo/.m2/repository/org/clojure/clojurescript/1.10.891/clojurescript-1.10.891.jar!/cljs/instant.clj",1685454150000,"jar:file:/home/jo/.m2/repository/org/clojure/clojurescript/1.10.891/clojurescript-1.10.891.jar!/cljs/env.cljc",1685454150000,"jar:file:/home/jo/.m2/repository/org/clojure/data.json/2.4.0/data.json-2.4.0.jar!/clojure/data/json.clj",1685454145000,"jar:file:/home/jo/.m2/repository/org/clojure/clojurescript/1.10.891/clojurescript-1.10.891.jar!/cljs/source_map/base64.clj",1685454150000,"jar:file:/home/jo/.m2/repository/persistent-sorted-set/persistent-sorted-set/0.1.4/persistent-sorted-set-0.1.4.jar!/me/tonsky/persistent_sorted_set/arrays.cljc",1685712163000,"jar:file:/home/jo/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/instant.clj",1685454147000,"jar:file:/home/jo/.m2/repository/org/clojure/clojurescript/1.10.891/clojurescript-1.10.891.jar!/cljs/analyzer/passes.cljc",1685454150000,"jar:file:/home/jo/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader.clj",1685454146000,"jar:file:/home/jo/.m2/repository/persistent-sorted-set/persistent-sorted-set/0.1.4/persistent-sorted-set-0.1.4.jar!/me/tonsky/persistent_sorted_set.clj",1685712163000,"jar:file:/home/jo/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/pprint.clj",1685454147000,"jar:file:/home/jo/.m2/repository/datascript/datascript/1.3.5/datascript-1.3.5.jar!/datascript/lru.cljc",1685712163000,"jar:file:/home/jo/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/string.clj",1685454147000,"jar:file:/home/jo/.m2/repository/org/clojure/clojurescript/1.10.891/clojurescript-1.10.891.jar!/cljs/core.cljc",1685454150000,"jar:file:/home/jo/.m2/repository/org/clojure/clojurescript/1.10.891/clojurescript-1.10.891.jar!/cljs/source_map.clj",1685454150000,"jar:file:/home/jo/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/set.clj",1685454147000,"jar:file:/home/jo/.m2/repository/org/clojure/clojure/1.10.3/clojure-1.10.3.jar!/clojure/java/io.clj",1685454147000,"jar:file:/home/jo/.m2/repository/org/clojure/clojurescript/1.10.891/clojurescript-1.10.891.jar!/cljs/externs.clj",1685454150000,"jar:file:/home/jo/.m2/repository/org/clojure/clojurescript/1.10.891/clojurescript-1.10.891.jar!/cljs/tagged_literals.cljc",1685454150000,"jar:file:/home/jo/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1685454146000,"jar:file:/home/jo/.m2/repository/org/clojure/clojurescript/1.10.891/clojurescript-1.10.891.jar!/cljs/analyzer/impl.cljc",1685454150000,"jar:file:/home/jo/.m2/repository/org/clojure/clojurescript/1.10.891/clojurescript-1.10.891.jar!/cljs/compiler.cljc",1685454150000,"jar:file:/home/jo/.m2/repository/org/clojure/clojurescript/1.10.891/clojurescript-1.10.891.jar!/cljs/reader.clj",1685454150000,"jar:file:/home/jo/.m2/repository/datascript/datascript/1.3.5/datascript-1.3.5.jar!/datascript/db.cljc",1685712163000,"jar:file:/home/jo/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1685454146000,"jar:file:/home/jo/.m2/repository/org/clojure/clojurescript/1.10.891/clojurescript-1.10.891.jar!/cljs/analyzer/passes/and_or.cljc",1685454150000,"jar:file:/home/jo/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/cljs/tools/reader/reader_types.clj",1685454146000,"jar:file:/home/jo/.m2/repository/org/clojure/clojurescript/1.10.891/clojurescript-1.10.891.jar!/cljs/js_deps.cljc",1685454150000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","datascript/query.cljc","^7",1,"^8",14,"^9",1,"^:",30,"^;",true],"^<",["^ ","^=","^>","^?","^@","^A","^B"],"~:shadow/protocol-prefixes",["^H",["datascript$query$IContextResolve$","datascript$query$IBinding$","datascript$query$IPostProcess$"]],"^C",["^ ","^D","^E","^F","^E"],"^G",["^H",[]],"^I","^J","^K",["^ "],"^N",null,"^O",["^ ","^P","^Q","^R","^S","^T","^U","^V","^W","^X","^X","^Y","^Y","^Z","^[","^10","^10","^11","^E","^S","^S","^12","^13","^13","^13","^U","^U","^E","^E","^Q","^Q","^W","^W","^14","^15","^15","^15","^16","^17","^18","^10","^19","^19","^[","^[","^1:","^19","^17","^17"],"^1;",["^H",["^1<"]],"~:shadow/js-access-global",["^H",["Error"]],"^1=",["^ ","^1>","^10","^1?","^10","^1@","^10","^1A","^10","^1B","^10","^1C","^10","^1D","^10","^1E","^10","^1F","^10","^1G","^10","^1H","^10","^1I","^10","^1J","^10"],"~:defs",["^ ","~$bound-vars",["^ ","~:protocol-inline",null,"^5",["^ ","^6","datascript/query.cljc","^7",615,"^8",7,"^9",615,"^:",17,"~:arglists",["^1M",["~$quote",["^1M",[["~$context"]]]]]],"^I","^4W","^6","datascript/query.cljc","^:",17,"~:method-params",["^1M",[["^9O"]]],"~:protocol-impl",null,"~:arglists-meta",["^1M",[null,null]],"^8",1,"~:variadic?",false,"^7",615,"~:ret-tag",["^H",[null,"~$clj","~$any"]],"^9",615,"~:max-fixed-arity",1,"~:fn-var",true,"^9M",["^1M",["^9N",["^1M",[["^9O"]]]]]],"~$solve-rule",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",529,"^8",7,"^9",529,"^:",17,"^9M",["^1M",["^9N",["^1M",[["^9O","~$clause"]]]]]],"^I","^52","^6","datascript/query.cljc","^:",17,"^9P",["^1M",[["^9O","^9Z"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",529,"^9T","^9V","^9",529,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^9O","^9Z"]]]]]],"~$matches-pattern?",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",326,"^8",7,"^9",326,"^:",23,"^9M",["^1M",["^9N",["^1M",[["~$pattern","~$tuple"]]]]]],"^I","^4L","^6","datascript/query.cljc","^:",23,"^9P",["^1M",[["^:0","^:1"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",326,"^9T","~$boolean","^9",326,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^:0","^:1"]]]]]],"~$aggregate",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",813,"^8",7,"^9",813,"^:",16,"^9M",["^1M",["^9N",["^1M",[["~$find-elements","^9O","~$resultset"]]]]]],"^I","^5Y","^6","datascript/query.cljc","^:",16,"^9P",["^1M",[["^:4","^9O","^:5"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",813,"^9T","^3P","^9",813,"^9W",3,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^:4","^9O","^:5"]]]]]],"~$rel-prod-by-attrs",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",377,"^8",8,"^9",377,"^:",25,"~:private",true,"^9M",["^1M",["^9N",["^1M",[["^9O","~$attrs"]]]]]],"^:7",true,"^I","^5F","^6","datascript/query.cljc","^:",25,"^9P",["^1M",[["^9O","^:8"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",377,"^9T","~$cljs.core/IVector","^9",377,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^9O","^:8"]]]]]],"~$limit-rel",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",606,"^8",7,"^9",606,"^:",16,"^9M",["^1M",["^9N",["^1M",[["~$rel","~$vars"]]]]]],"^I","^5:","^6","datascript/query.cljc","^:",16,"^9P",["^1M",[["^:;","^:<"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",606,"^9T",["^H",["^9U","^9V","~$clj-nil"]],"^9",606,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^:;","^:<"]]]]]],"~$empty-rel",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",168,"^8",7,"^9",168,"^:",16,"^9M",["^1M",["^9N",["^1M",[["~$binding"]]]]]],"^I","^4U","^6","datascript/query.cljc","^:",16,"^9P",["^1M",[["^:?"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",168,"^9T","^4G","^9",168,"^9W",1,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^:?"]]]]]],"~$pull",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",858,"^8",8,"^9",858,"^:",12,"^:7",true,"^9M",["^1M",["^9N",["^1M",[["^:4","^9O","^:5"]]]]]],"^:7",true,"^I","^57","^6","datascript/query.cljc","^:",12,"^9P",["^1M",[["^:4","^9O","^:5"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",858,"^9T","^3P","^9",858,"^9W",3,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^:4","^9O","^:5"]]]]]],"~$->Context",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^:",19,"^8",12,"~:internal-ctor",true,"~:factory","~:positional","^7",30,"^9",30,"^9M",["^1M",["^9N",["^1M",[["~$rels","~$sources","~$rules"]]]]],"~:doc","Positional factory function for datascript.query/Context."],"^I","^5G","^6","datascript/query.cljc","^:",19,"^9P",["^1M",[["^:E","^:F","^:G"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^:B",true,"^9S",false,"^:C","^:D","^7",30,"^9T","^3A","^9",30,"^9W",3,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^:E","^:F","^:G"]]]]],"^:H","Positional factory function for datascript.query/Context."],"~$tuple-key-fn",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",260,"^8",7,"^9",260,"^:",19,"^9M",["^1M",["^9N",["^1M",[["~$getters"]]]]]],"^I","^5M","^6","datascript/query.cljc","^:",19,"^9P",["^1M",[["^:J"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",260,"^9T",["^H",["^9V","~$function","^:="]],"^9",260,"^9W",1,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^:J"]]]]]],"~$tuples->return-map",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",824,"^8",7,"^9",824,"^:",25,"^9M",["^1M",["^9N",["^1M",[["~$return-map","~$tuples"]]]]]],"^I","^5H","^6","datascript/query.cljc","^:",25,"^9P",["^1M",[["^:M","^:N"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",824,"^9T",["^H",[null,"^9V"]],"^9",824,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^:M","^:N"]]]]]],"~$resolve-pattern-lookup-refs",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",585,"^8",7,"^9",585,"^:",34,"^9M",["^1M",["^9N",["^1M",[["~$source","^:0"]]]]]],"^I","^5A","^6","datascript/query.cljc","^:",34,"^9P",["^1M",[["^:P","^:0"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",585,"^9T",["^H",[null,"~$cljs.core/Subvec"]],"^9",585,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^:P","^:0"]]]]]],"~$bind-by-fn",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",435,"^8",7,"^9",435,"^:",17,"^9M",["^1M",["^9N",["^1M",[["^9O","^9Z"]]]]]],"^I","^5>","^6","datascript/query.cljc","^:",17,"^9P",["^1M",[["^9O","^9Z"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",435,"^9T",["^H",["^9U","^9V"]],"^9",435,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^9O","^9Z"]]]]]],"~$check-free-same",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",626,"^8",7,"^9",626,"^:",22,"^9M",["^1M",["^9N",["^1M",[["~$bound","~$branches","~$form"]]]]]],"^I","^5T","^6","datascript/query.cljc","^:",22,"^9P",["^1M",[["^:T","^:U","^:V"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",626,"^9T","^:=","^9",626,"^9W",3,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^:T","^:U","^:V"]]]]]],"~$resolve-in",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",211,"^8",7,"^9",211,"^:",17,"^9M",["^1M",["^9N",["^1M",[["^9O",["^:?","~$value"]]]]]]],"^I","^5J","^6","datascript/query.cljc","^:",17,"^9P",["^1M",[["^9O","~$p__41653"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",211,"^9T",["^H",["^9U","^9V"]],"^9",211,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^9O",["^:?","^:X"]]]]]]],"~$rule?",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",460,"^8",7,"^9",460,"^:",12,"^9M",["^1M",["^9N",["^1M",[["^9O","^9Z"]]]]]],"^I","^62","^6","datascript/query.cljc","^:",12,"^9P",["^1M",[["^9O","^9Z"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",460,"^9T","^:2","^9",460,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^9O","^9Z"]]]]]],"~$source?",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",82,"^8",7,"^9",82,"^:",14,"^9M",["^1M",["^9N",["^1M",[["~$sym"]]]]]],"^I","^5N","^6","datascript/query.cljc","^:",14,"^9P",["^1M",[["^;0"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",82,"^9T","^:2","^9",82,"^9W",1,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^;0"]]]]]],"~$-q",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",737,"^8",7,"^9",737,"^:",9,"^9M",["^1M",["^9N",["^1M",[["^9O","~$clauses"]]]]]],"^I","^5U","^6","datascript/query.cljc","^:",9,"^9P",["^1M",[["^9O","^;2"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",737,"^9",737,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^9O","^;2"]]]]]],"~$attr?",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",90,"^8",7,"^9",90,"^:",12,"^9M",["^1M",["^9N",["^1M",[["^:V"]]]]]],"^I","^6B","^6","datascript/query.cljc","^:",12,"^9P",["^1M",[["^:V"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",90,"^9T","^:2","^9",90,"^9W",1,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^:V"]]]]]],"~$intersect-keys",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",46,"^8",7,"^9",46,"^:",21,"^9M",["^1M",["^9N",["^1M",[["~$attrs1","~$attrs2"]]]]]],"^I","^6=","^6","datascript/query.cljc","^:",21,"^9P",["^1M",[["^;5","^;6"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",46,"^9T",["^H",[null,"^9V"]],"^9",46,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^;5","^;6"]]]]]],"~$map*",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",821,"^8",7,"^9",821,"^:",11,"^9M",["^1M",["^9N",["^1M",[["~$f","~$xs"]]]]]],"^I","^7@","^6","datascript/query.cljc","^:",11,"^9P",["^1M",[["~$f","^;8"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",821,"^9T",["^H",[null,"^9V"]],"^9",821,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["~$f","^;8"]]]]]],"~$rule-seqid",["^ ","^I","^6K","^6","datascript/query.cljc","^7",485,"^8",1,"^9",485,"^:",16,"^5",["^ ","^6","datascript/query.cljc","^7",485,"^8",6,"^9",485,"^:",16],"~:tag","~$cljs.core/Atom"],"~$-collect",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",741,"^8",7,"^9",741,"^:",15,"^9M",["^1M",["^9N",["^1M",[["^9O","~$symbols"],["~$acc","^:E","^;="]]]]],"~:top-fn",["^ ","^9S",false,"~:fixed-arity",3,"^9W",3,"^9P",[["^9O","^;="],["^;>","^:E","^;="]],"^9M",["^1M",[["^9O","^;="],["^;>","^:E","^;="]]],"^9R",["^1M",[null,null]]]],"^I","^6E","^6","datascript/query.cljc","^:",15,"^;?",["^ ","^9S",false,"^;@",3,"^9W",3,"^9P",[["^9O","^;="],["^;>","^:E","^;="]],"^9M",["^1M",[["^9O","^;="],["^;>","^:E","^;="]]],"^9R",["^1M",[null,null]]],"^9P",[["^9O","^;="],["^;>","^:E","^;="]],"^9Q",null,"^;@",3,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"~:methods",[["^ ","^;@",2,"^9S",false,"^;:","^9V"],["^ ","^;@",3,"^9S",false,"^;:",["^H",[null,"^:9"]]]],"^7",741,"^9",741,"^9W",3,"^9X",true,"^9M",["^1M",[["^9O","^;="],["^;>","^:E","^;="]]]],"~$q",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",873,"^8",7,"^9",873,"^:",8,"^9M",["^1M",["^9N",["^1M",[["~$q","~$&","~$inputs"]]]]],"^;?",["^ ","^9S",true,"^;@",1,"^9W",1,"^9P",[["^1M",["~$q","^;B"]]],"^9M",["^1M",[["~$q","~$&","^;B"]]],"^9R",["^1M",[null]]]],"^I","^7=","^6","datascript/query.cljc","^:",8,"^;?",["^ ","^9S",true,"^;@",1,"^9W",1,"^9P",[["^1M",["~$q","^;B"]]],"^9M",["^1M",[["~$q","~$&","^;B"]]],"^9R",["^1M",[null]]],"^9P",[["^1M",["~$q","^;B"]]],"^9Q",null,"^;@",1,"^9R",["^1M",[null]],"^8",1,"^9S",true,"^;A",[["^ ","^;@",1,"^9S",true,"^;:","^9V"]],"^7",873,"^9T","^9V","^9",873,"^9W",1,"^9X",true,"^9M",["^1M",[["~$q","~$&","^;B"]]]],"~$context-resolve-val",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",369,"^8",8,"^9",369,"^:",27,"^:7",true,"^9M",["^1M",["^9N",["^1M",[["^9O","^;0"]]]]]],"^:7",true,"^I","^7>","^6","datascript/query.cljc","^:",27,"^9P",["^1M",[["^9O","^;0"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",369,"^9T",["^H",["^9V","^:="]],"^9",369,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^9O","^;0"]]]]]],"~$walk-collect",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",515,"^8",7,"^9",515,"^:",19,"^9M",["^1M",["^9N",["^1M",[["^:V","~$pred"]]]]]],"^I","^6@","^6","datascript/query.cljc","^:",19,"^9P",["^1M",[["^:V","^;E"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",515,"^9T","^9V","^9",515,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^:V","^;E"]]]]]],"~$lookup-pattern-coll",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",337,"^8",7,"^9",337,"^:",26,"^9M",["^1M",["^9N",["^1M",[["~$coll","^:0"]]]]]],"^I","^6L","^6","datascript/query.cljc","^:",26,"^9P",["^1M",[["^;G","^:0"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",337,"^9T","^4G","^9",337,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^;G","^:0"]]]]]],"~$IBinding",["^ ","^5",["^ ","~:protocol-symbol",true,"^6","datascript/query.cljc","^:",22,"^8",14,"^7",173,"~:protocol-info",["^ ","^;A",["^ ","~$in->rel",[["^:?","^:X"]]]],"^9",173,"~:sigs",["^ ","~:in->rel",["^ ","^I","^;K","^9M",["^1M",[["^:?","^:X"]]],"^:H",null]],"~:jsdoc",["^1M",["@interface"]]],"^;I",true,"^I","^6G","^6","datascript/query.cljc","^:",22,"^8",1,"^7",173,"^;J",["^ ","^;A",["^ ","^;K",[["^:?","^:X"]]]],"~:info",null,"^9",173,"^;:","^9V","^;L",["^ ","^;M",["^ ","^I","^;K","^9M",["^1M",[["^:?","^:X"]]],"^:H",null]],"~:impls",["^H",["^4E","^4R","^4V","^6C"]],"^;N",["^1M",["@interface"]]],"~$IContextResolve",["^ ","^5",["^ ","^;I",true,"^6","datascript/query.cljc","^:",29,"^8",14,"^7",779,"^;J",["^ ","^;A",["^ ","~$-context-resolve",[["~$var","^9O"]]]],"^9",779,"^;L",["^ ","~:-context-resolve",["^ ","^I","^;R","^9M",["^1M",[["^;S","^9O"]]],"^:H",null]],"^;N",["^1M",["@interface"]]],"^;I",true,"^I","^6J","^6","datascript/query.cljc","^:",29,"^8",1,"^7",779,"^;J",["^ ","^;A",["^ ","^;R",[["^;S","^9O"]]]],"^;O",null,"^9",779,"^;:","^9V","^;L",["^ ","^;T",["^ ","^I","^;R","^9M",["^1M",[["^;S","^9O"]]],"^:H",null]],"^;P",["^H",["^2I","^37","^4H","^5V"]],"^;N",["^1M",["@interface"]]],"~$rule-gen-guards",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",508,"^8",7,"^9",508,"^:",22,"^9M",["^1M",["^9N",["^1M",[["~$rule-clause","~$used-args"]]]]]],"^I","^6S","^6","datascript/query.cljc","^:",22,"^9P",["^1M",[["^;V","^;W"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",508,"^9T","^3P","^9",508,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^;V","^;W"]]]]]],"~$resolve-ins",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",222,"^8",7,"^9",222,"^:",18,"^9M",["^1M",["^9N",["^1M",[["^9O","~$bindings","~$values"]]]]]],"^I","^6Y","^6","datascript/query.cljc","^:",18,"^9P",["^1M",[["^9O","^;Y","^;Z"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",222,"^9T",["^H",[null,"^9V"]],"^9",222,"^9W",3,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^9O","^;Y","^;Z"]]]]]],"~$resolve-sym",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",415,"^8",8,"^9",415,"^:",19,"^:7",true,"^9M",["^1M",["^9N",["^1M",[["^;0"]]]]]],"^:7",true,"^I","^69","^6","datascript/query.cljc","^:",19,"^9P",["^1M",[["^;0"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",415,"^9T","^:=","^9",415,"^9W",1,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^;0"]]]]]],"~$remove-pairs",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",502,"^8",7,"^9",502,"^:",19,"^9M",["^1M",["^9N",["^1M",[["^;8","~$ys"]]]]]],"^I","^6;","^6","datascript/query.cljc","^:",19,"^9P",["^1M",[["^;8","^<1"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",502,"^9T","^:9","^9",502,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^;8","^<1"]]]]]],"~$single",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",42,"^8",7,"^9",42,"^:",13,"^9M",["^1M",["^9N",["^1M",[["^;G"]]]]]],"^I","^6[","^6","datascript/query.cljc","^:",13,"^9P",["^1M",[["^;G"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",42,"^9T",["^H",["^9V","^:="]],"^9",42,"^9W",1,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^;G"]]]]]],"~$*query-cache*",["^ ","^5",["^ ","^6","datascript/query.cljc","^7",24,"^8",16,"^9",24,"^:",29,"~:dynamic",true],"^I","^2K","^6","datascript/query.cljc","^:",29,"^8",1,"^<4",true,"^7",24,"^9",24,"^;:","^9V"],"~$concatv",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",50,"^8",7,"^9",50,"^:",14,"^9M",["^1M",["^9N",["^1M",[["~$&","^;8"]]]]],"^;?",["^ ","^9S",true,"^;@",0,"^9W",0,"^9P",[["^1M",["^;8"]]],"^9M",["^1M",[["~$&","^;8"]]],"^9R",["^1M",[null]]]],"^I","^6T","^6","datascript/query.cljc","^:",14,"^;?",["^ ","^9S",true,"^;@",0,"^9W",0,"^9P",[["^1M",["^;8"]]],"^9M",["^1M",[["~$&","^;8"]]],"^9R",["^1M",[null]]],"^9P",[["^1M",["^;8"]]],"^9Q",null,"^;@",0,"^9R",["^1M",[null]],"^8",1,"^9S",true,"^;A",[["^ ","^;@",0,"^9S",true,"^;:",["^H",["^9U","^9V"]]]],"^7",50,"^9T","^9V","^9",50,"^9W",0,"^9X",true,"^9M",["^1M",[["~$&","^;8"]]]],"~$subtract-rel",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",305,"^8",7,"^9",305,"^:",19,"^9M",["^1M",["^9N",["^1M",[["~$a","~$b"]]]]]],"^I","^74","^6","datascript/query.cljc","^:",19,"^9P",["^1M",[["~$a","~$b"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",305,"^9T",["^H",["^9U","^9V"]],"^9",305,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["~$a","~$b"]]]]]],"~$rel-contains-attrs?",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",374,"^8",8,"^9",374,"^:",27,"^:7",true,"^9M",["^1M",["^9N",["^1M",[["^:;","^:8"]]]]]],"^:7",true,"^I","^7<","^6","datascript/query.cljc","^:",27,"^9P",["^1M",[["^:;","^:8"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",374,"^9T",["^H",["^9V","^:="]],"^9",374,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^:;","^:8"]]]]]],"~$collect-vars",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",520,"^8",7,"^9",520,"^:",19,"^9M",["^1M",["^9N",["^1M",[["^9Z"]]]]]],"^I","^7A","^6","datascript/query.cljc","^:",19,"^9P",["^1M",[["^9Z"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",520,"^9T",["^H",["^9U","^9V","~$cljs.core/ISet","~$cljs.core/MetaFn","^:="]],"^9",520,"^9W",1,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^9Z"]]]]]],"~$prod-rel",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",143,"^8",7,"^9",143,"^:",15,"^9M",["^1M",["^9N",["^1M",[[],["~$rel1","~$rel2"]]]]],"^;?",["^ ","^9S",false,"^;@",2,"^9W",2,"^9P",[[],["^<<","^<="]],"^9M",["^1M",[[],["^<<","^<="]]],"^9R",["^1M",[null,null]]]],"^I","^7:","^6","datascript/query.cljc","^:",15,"^;?",["^ ","^9S",false,"^;@",2,"^9W",2,"^9P",[[],["^<<","^<="]],"^9M",["^1M",[[],["^<<","^<="]]],"^9R",["^1M",[null,null]]],"^9P",[[],["^<<","^<="]],"^9Q",null,"^;@",2,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^;A",[["^ ","^;@",0,"^9S",false,"^;:","^4G"],["^ ","^;@",2,"^9S",false,"^;:","^4G"]],"^7",143,"^9",143,"^9W",2,"^9X",true,"^9M",["^1M",[[],["^<<","^<="]]]],"~$lookup-pattern",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",349,"^8",7,"^9",349,"^:",21,"^9M",["^1M",["^9N",["^1M",[["^:P","^:0"]]]]]],"^I","^2D","^6","datascript/query.cljc","^:",21,"^9P",["^1M",[["^:P","^:0"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",349,"^9T","^4G","^9",349,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^:P","^:0"]]]]]],"~$-aggregate",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",797,"^8",7,"^9",797,"^:",17,"^9M",["^1M",["^9N",["^1M",[["^:4","^9O","^:N"]]]]]],"^I","^78","^6","datascript/query.cljc","^:",17,"^9P",["^1M",[["^:4","^9O","^:N"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",797,"^9T",["^H",[null,"^9U","^9V"]],"^9",797,"^9W",3,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^:4","^9O","^:N"]]]]]],"~$-resolve-clause",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",644,"^8",7,"^9",644,"^:",22,"^9M",["^1M",["^9N",["^1M",[["^9O","^9Z"],["^9O","^9Z","~$orig-clause"]]]]],"^;?",["^ ","^9S",false,"^;@",3,"^9W",3,"^9P",[["^9O","^9Z"],["^9O","^9Z","^<A"]],"^9M",["^1M",[["^9O","^9Z"],["^9O","^9Z","^<A"]]],"^9R",["^1M",[null,null]]]],"^I","^2>","^6","datascript/query.cljc","^:",22,"^;?",["^ ","^9S",false,"^;@",3,"^9W",3,"^9P",[["^9O","^9Z"],["^9O","^9Z","^<A"]],"^9M",["^1M",[["^9O","^9Z"],["^9O","^9Z","^<A"]]],"^9R",["^1M",[null,null]]],"^9P",[["^9O","^9Z"],["^9O","^9Z","^<A"]],"^9Q",null,"^;@",3,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^;A",[["^ ","^;@",2,"^9S",false,"^;:","^9V"],["^ ","^;@",3,"^9S",false,"^;:",["^H",[null,"^9U","^9V"]]]],"^7",644,"^9",644,"^9W",3,"^9X",true,"^9M",["^1M",[["^9O","^9Z"],["^9O","^9Z","^<A"]]]],"~$*lookup-attrs*",["^ ","^5",["^ ","^6","datascript/query.cljc","^7",241,"^8",3,"^9",241,"^:",17,"^<4",true,"^:H","List of symbols in current pattern that might potentiall be resolved to refs"],"^I","^6U","^6","datascript/query.cljc","^:",17,"^8",1,"^<4",true,"^7",239,"^9",241,"^;:","^9V","^:H","List of symbols in current pattern that might potentiall be resolved to refs"],"~$*implicit-source*",["^ ","^5",["^ ","^6","datascript/query.cljc","^7",245,"^8",3,"^9",245,"^:",20,"^<4",true,"^:H","Default pattern source. Lookup refs, patterns, rules will be resolved with it"],"^I","^2E","^6","datascript/query.cljc","^:",20,"^8",1,"^<4",true,"^7",243,"^9",245,"^;:","^9V","^:H","Default pattern source. Lookup refs, patterns, rules will be resolved with it"],"~$->Relation",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^:",20,"^8",12,"^:B",true,"^:C","^:D","^7",37,"^9",37,"^9M",["^1M",["^9N",["^1M",[["^:8","^:N"]]]]],"^:H","Positional factory function for datascript.query/Relation."],"^I","^2F","^6","datascript/query.cljc","^:",20,"^9P",["^1M",[["^:8","^:N"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^:B",true,"^9S",false,"^:C","^:D","^7",37,"^9T","^4G","^9",37,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^:8","^:N"]]]]],"^:H","Positional factory function for datascript.query/Relation."],"~$join-tuples",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",98,"^8",7,"^9",98,"^:",18,"^9M",["^1M",["^9N",["^1M",[["~$t1","~$idxs1","~$t2","~$idxs2"]]]]]],"^I","^3>","^6","datascript/query.cljc","^:",18,"^9P",["^1M",[["^<F","^<G","^<H","^<I"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",98,"^9T","~$array","^9",98,"^9W",4,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^<F","^<G","^<H","^<I"]]]]]],"~$IPostProcess",["^ ","^5",["^ ","^;I",true,"^6","datascript/query.cljc","^:",26,"^8",14,"^7",834,"^;J",["^ ","^;A",["^ ","~$-post-process",[["~$find","^:M","^:N"]]]],"^9",834,"^;L",["^ ","~:-post-process",["^ ","^I","^<L","^9M",["^1M",[["^<M","^:M","^:N"]]],"^:H",null]],"^;N",["^1M",["@interface"]]],"^;I",true,"^I","^2;","^6","datascript/query.cljc","^:",26,"^8",1,"^7",834,"^;J",["^ ","^;A",["^ ","^<L",[["^<M","^:M","^:N"]]]],"^;O",null,"^9",834,"^;:","^9V","^;L",["^ ","^<N",["^ ","^I","^<L","^9M",["^1M",[["^<M","^:M","^:N"]]],"^:H",null]],"^;P",["^H",["^2T","^5D","^5P","^6<"]],"^;N",["^1M",["@interface"]]],"~$looks-like?",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",62,"^8",8,"^9",62,"^:",19,"^:7",true,"^9M",["^1M",["^9N",["^1M",[["^:0","^:V"]]]]]],"^:7",true,"^I","^2:","^6","datascript/query.cljc","^:",19,"^9P",["^1M",[["^:0","^:V"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",62,"^9T",["^H",["^:2","^9V"]],"^9",62,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^:0","^:V"]]]]]],"~$dynamic-lookup-attrs",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",596,"^8",7,"^9",596,"^:",27,"^9M",["^1M",["^9N",["^1M",[["^:P","^:0"]]]]]],"^I","^2Z","^6","datascript/query.cljc","^:",27,"^9P",["^1M",[["^:P","^:0"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",596,"^9T","^9U","^9",596,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^:P","^:0"]]]]]],"~$lookup-ref?",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",93,"^8",7,"^9",93,"^:",18,"^9M",["^1M",["^9N",["^1M",[["^:V"]]]]]],"^I","^2X","^6","datascript/query.cljc","^:",18,"^9P",["^1M",[["^:V"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",93,"^9T",["^H",["^:2","^9V"]],"^9",93,"^9W",1,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^:V"]]]]]],"^;K",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",174,"^8",4,"^9",174,"^:",11,"~:protocol","^6G","^:H",null,"^9M",["^1M",["^9N",["^1M",[["^:?","^:X"]]]]]],"^<R","^6G","^I","^2H","^6","datascript/query.cljc","^:",11,"^9P",["^1M",[["^:?","^:X"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",173,"^9T","^9V","^9",174,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^:?","^:X"]]]]],"^:H",null],"~$expand-rule",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",487,"^8",7,"^9",487,"^:",18,"^9M",["^1M",["^9N",["^1M",[["^9Z","^9O","^;W"]]]]]],"^I","^28","^6","datascript/query.cljc","^:",18,"^9P",["^1M",[["^9Z","^9O","^;W"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",487,"^9T","^3P","^9",487,"^9W",3,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^9Z","^9O","^;W"]]]]]],"~$same-keys?",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",57,"^8",7,"^9",57,"^:",17,"^9M",["^1M",["^9N",["^1M",[["~$a","~$b"]]]]]],"^I","^2[","^6","datascript/query.cljc","^:",17,"^9P",["^1M",[["~$a","~$b"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",57,"^9T","^:2","^9",57,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["~$a","~$b"]]]]]],"~$resolve-clause",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",729,"^8",7,"^9",729,"^:",21,"^9M",["^1M",["^9N",["^1M",[["^9O","^9Z"]]]]]],"^I","^42","^6","datascript/query.cljc","^:",21,"^9P",["^1M",[["^9O","^9Z"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",729,"^9T",["^H",[null,"^9U","^9V"]],"^9",729,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^9O","^9Z"]]]]]],"~$limit-context",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",610,"^8",7,"^9",610,"^:",20,"^9M",["^1M",["^9N",["^1M",[["^9O","^:<"]]]]]],"^I","^2N","^6","datascript/query.cljc","^:",20,"^9P",["^1M",[["^9O","^:<"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",610,"^9T",["^H",["^9U","^9V"]],"^9",610,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^9O","^:<"]]]]]],"~$hash-join",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",277,"^8",7,"^9",277,"^:",16,"^9M",["^1M",["^9N",["^1M",[["^<<","^<="]]]]]],"^I","^2R","^6","datascript/query.cljc","^:",16,"^9P",["^1M",[["^<<","^<="]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",277,"^9T","^4G","^9",277,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^<<","^<="]]]]]],"~$-call-fn",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",382,"^8",7,"^9",382,"^:",15,"^9M",["^1M",["^9N",["^1M",[["^9O","^:;","~$f","~$args"]]]]]],"^I","^2S","^6","datascript/query.cljc","^:",15,"^9P",["^1M",[["^9O","^:;","~$f","^<Y"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",382,"^9T","^:K","^9",382,"^9W",4,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^9O","^:;","~$f","^<Y"]]]]]],"~$parse-rules",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",163,"^8",7,"^9",163,"^:",18,"^9M",["^1M",["^9N",["^1M",[["^:G"]]]]]],"^I","^2M","^6","datascript/query.cljc","^:",18,"^9P",["^1M",[["^:G"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",163,"^9T","^9U","^9",163,"^9W",1,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^:G"]]]]]],"~$Context",["^ ","~:num-fields",3,"~:protocols",["^H",["~$cljs.core/IRecord","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/ICounted","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^I","^3A","^6","datascript/query.cljc","^:",19,"~:type",true,"^8",12,"^:B",true,"^7",30,"~:record",true,"^9",30,"^;:","^:K","~:skip-protocol-flag",["^H",["^=2","^=3","^=4","^=5","^=6","^=7","^=8","^=9","^=:","^=;","^=<","^==","^=>","^=?","^=@"]]],"~$sum-rel",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",111,"^8",7,"^9",111,"^:",14,"^9M",["^1M",["^9N",["^1M",[["~$a","~$b"]]]]]],"^I","^3:","^6","datascript/query.cljc","^:",14,"^9P",["^1M",[["~$a","~$b"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",111,"^9T",["^H",["^9V","^4G"]],"^9",111,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["~$a","~$b"]]]]]],"~$rel-with-attr",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",366,"^8",8,"^9",366,"^:",21,"^:7",true,"^9M",["^1M",["^9N",["^1M",[["^9O","^;0"]]]]]],"^:7",true,"^I","^34","^6","datascript/query.cljc","^:",21,"^9P",["^1M",[["^9O","^;0"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",366,"^9T",["^H",["^9V","^:="]],"^9",366,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^9O","^;0"]]]]]],"~$free-var?",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",86,"^8",7,"^9",86,"^:",16,"^9M",["^1M",["^9N",["^1M",[["^;0"]]]]]],"^I","^2L","^6","datascript/query.cljc","^:",16,"^9P",["^1M",[["^;0"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",86,"^9T","^:2","^9",86,"^9W",1,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^;0"]]]]]],"~$map->Context",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^:",19,"^8",12,"^:B",true,"^:C","~:map","^7",30,"^9",30,"^9M",["^1M",["^9N",["^1M",[["~$G__41554"]]]]],"^:H","Factory function for datascript.query/Context, taking a map of keywords to field values."],"^I","^3U","^6","datascript/query.cljc","^:",19,"^9P",["^1M",[["^=I"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^:B",true,"^9S",false,"^:C","^=H","^7",30,"^9T","^3A","^9",30,"^9W",1,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^=I"]]]]],"^:H","Factory function for datascript.query/Context, taking a map of keywords to field values."],"^;R",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",780,"^8",4,"^9",780,"^:",20,"^<R","^6J","^:H",null,"^9M",["^1M",["^9N",["^1M",[["^;S","^9O"]]]]]],"^<R","^6J","^I","^41","^6","datascript/query.cljc","^:",20,"^9P",["^1M",[["^;S","^9O"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",779,"^9T","^9V","^9",780,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^;S","^9O"]]]]],"^:H",null],"~$Relation",["^ ","^=0",2,"^=1",["^H",["^=2","^=3","^=4","^=5","^=6","^=7","^=8","^=9","^=:","^=;","^=<","^==","^=>","^=?","^=@"]],"^I","^4G","^6","datascript/query.cljc","^:",20,"^=A",true,"^8",12,"^:B",true,"^7",37,"^=B",true,"^9",37,"^;:","^:K","^=C",["^H",["^=2","^=3","^=4","^=5","^=6","^=7","^=8","^=9","^=:","^=;","^=<","^==","^=>","^=?","^=@"]]],"~$filter-by-pred",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",420,"^8",7,"^9",420,"^:",21,"^9M",["^1M",["^9N",["^1M",[["^9O","^9Z"]]]]]],"^I","^3O","^6","datascript/query.cljc","^:",21,"^9P",["^1M",[["^9O","^9Z"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",420,"^9T",["^H",["^9U","^9V"]],"^9",420,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^9O","^9Z"]]]]]],"~$split-guards",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",523,"^8",7,"^9",523,"^:",19,"^9M",["^1M",["^9N",["^1M",[["^;2","~$guards"]]]]]],"^I","^3E","^6","datascript/query.cljc","^:",19,"^9P",["^1M",[["^;2","^=M"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",523,"^9T","^:9","^9",523,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^;2","^=M"]]]]]],"~$check-free-subset",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",634,"^8",7,"^9",634,"^:",24,"^9M",["^1M",["^9N",["^1M",[["^:T","^:<","^:U"]]]]]],"^I","^3D","^6","datascript/query.cljc","^:",24,"^9P",["^1M",[["^:T","^:<","^:U"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",634,"^9T","^:=","^9",634,"^9W",3,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^:T","^:<","^:U"]]]]]],"~$normalize-pattern-clause",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",344,"^8",7,"^9",344,"^:",31,"^9M",["^1M",["^9N",["^1M",[["^9Z"]]]]]],"^I","^3R","^6","datascript/query.cljc","^:",31,"^9P",["^1M",[["^9Z"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",344,"^9T",["^H",[null,"^3P"]],"^9",344,"^9W",1,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^9Z"]]]]]],"~$collect",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",774,"^8",7,"^9",774,"^:",14,"^9M",["^1M",["^9N",["^1M",[["^9O","^;="]]]]]],"^I","^40","^6","datascript/query.cljc","^:",14,"^9P",["^1M",[["^9O","^;="]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",774,"^9T",["^H",["^9U","^9V","^<9","^<:","^:="]],"^9",774,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^9O","^;="]]]]]],"~$zip",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",53,"^8",7,"^9",53,"^:",10,"^9M",["^1M",["^9N",["^1M",[["~$a","~$b"],["~$a","~$b","~$&","~$rest"]]]]],"^;?",["^ ","^9S",true,"^;@",2,"^9W",2,"^9P",[["~$a","~$b"]],"^9M",["^1M",[["~$a","~$b"],["~$a","~$b","~$&","^=R"]]],"^9R",["^1M",[null,null]]]],"^I","^3Z","^6","datascript/query.cljc","^:",10,"^;?",["^ ","^9S",true,"^;@",2,"^9W",2,"^9P",[["~$a","~$b"]],"^9M",["^1M",[["~$a","~$b"],["~$a","~$b","~$&","^=R"]]],"^9R",["^1M",[null,null]]],"^9P",[["~$a","~$b"]],"^9Q",null,"^;@",2,"^9R",["^1M",[null,null]],"^8",1,"^9S",true,"^;A",[["^ ","^;@",2,"^9S",false,"^;:",["^H",[null,"^9U","^9V"]]],["^ ","^;@",2,"^9S",true,"^;:","^9V"]],"^7",53,"^9",53,"^9W",2,"^9X",true,"^9M",["^1M",[["~$a","~$b"],["~$a","~$b","~$&","^=R"]]]],"~$map->Relation",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^:",20,"^8",12,"^:B",true,"^:C","^=H","^7",37,"^9",37,"^9M",["^1M",["^9N",["^1M",[["~$G__41574"]]]]],"^:H","Factory function for datascript.query/Relation, taking a map of keywords to field values."],"^I","^3W","^6","datascript/query.cljc","^:",20,"^9P",["^1M",[["^=T"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^:B",true,"^9S",false,"^:C","^=H","^7",37,"^9T","^4G","^9",37,"^9W",1,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^=T"]]]]],"^:H","Factory function for datascript.query/Relation, taking a map of keywords to field values."],"~$hash-attrs",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",268,"^8",7,"^9",268,"^:",17,"^9M",["^1M",["^9N",["^1M",[["~$key-fn","^:N"]]]]]],"^I","^50","^6","datascript/query.cljc","^:",17,"^9P",["^1M",[["^=V","^:N"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",268,"^9T","^9U","^9",268,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^=V","^:N"]]]]]],"~$check-bound",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",618,"^8",7,"^9",618,"^:",18,"^9M",["^1M",["^9N",["^1M",[["^:T","^:<","^:V"]]]]]],"^I","^51","^6","datascript/query.cljc","^:",18,"^9P",["^1M",[["^:T","^:<","^:V"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",618,"^9T","^:=","^9",618,"^9W",3,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^:T","^:<","^:V"]]]]]],"~$lookup-pattern-db",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",317,"^8",7,"^9",317,"^:",24,"^9M",["^1M",["^9N",["^1M",[["^11","^:0"]]]]]],"^I","^45","^6","datascript/query.cljc","^:",24,"^9P",["^1M",[["^11","^:0"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",317,"^9T","^4G","^9",317,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^11","^:0"]]]]]],"^<L",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",835,"^8",4,"^9",835,"^:",17,"^<R","^2;","^:H",null,"^9M",["^1M",["^9N",["^1M",[["^<M","^:M","^:N"]]]]]],"^<R","^2;","^I","^46","^6","datascript/query.cljc","^:",17,"^9P",["^1M",[["^<M","^:M","^:N"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",834,"^9T","^9V","^9",835,"^9W",3,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^<M","^:M","^:N"]]]]],"^:H",null],"~$collapse-rels",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",356,"^8",7,"^9",356,"^:",20,"^9M",["^1M",["^9N",["^1M",[["^:E","~$new-rel"]]]]]],"^I","^4=","^6","datascript/query.cljc","^:",20,"^9P",["^1M",[["^:E","^=Z"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",356,"^9T","^9U","^9",356,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^:E","^=Z"]]]]]],"~$idxs-of",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",809,"^8",8,"^9",809,"^:",15,"^:7",true,"^9M",["^1M",["^9N",["^1M",[["^;E","^;G"]]]]]],"^:7",true,"^I","^4@","^6","datascript/query.cljc","^:",15,"^9P",["^1M",[["^;E","^;G"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",809,"^9T","^3P","^9",809,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^;E","^;G"]]]]]],"~$getter-fn",["^ ","^9L",null,"^5",["^ ","^6","datascript/query.cljc","^7",247,"^8",7,"^9",247,"^:",16,"^9M",["^1M",["^9N",["^1M",[["^:8","~$attr"]]]]]],"^I","^49","^6","datascript/query.cljc","^:",16,"^9P",["^1M",[["^:8","^>1"]]],"^9Q",null,"^9R",["^1M",[null,null]],"^8",1,"^9S",false,"^7",247,"^9T","^:K","^9",247,"^9W",2,"^9X",true,"^9M",["^1M",["^9N",["^1M",[["^:8","^>1"]]]]]]],"^1K",["^ ","^P","^Q","^X","^X","^10","^10","^11","^E","^E","^E","^Q","^Q","^18","^10","^19","^19","^1:","^19"],"~:cljs.analyzer/constants",["^ ","^1;",["^H",["~:used-args","~:args","~:tuples","~:where","~:fn","~:variable","~:else","^:N","~:bindings","~:symbol","~:sources","~:query/binding","~$*","~:value","~:prefix-context","~:qfind","~$or-join","^1Z","~$_","~:rules","^:F","~:qin","~:qwith","~$or","~:rels","~:binding","~:got","~:var","~$not","~$$","~:with","~:pending-guards","~$not-join","^:G","~:expected","~:attrs","~:error","^:E","~:clauses","^1L","~:qreturn-map","~:query/inputs","~:query/where","~:prefix-clauses","~$-differ?","~$and","^:8","~:vars","~:symbols","~:pattern"]],"~:order",["^>F","^><","^>B","^:E","^:F","^:G","^>O","^>5","^:8","^:N","~$_","~$*","^>9","^>P","^>T","^>;","^>8","^>>","^>G","^>=","^>:","^1Z","^>N","^>H","^>S","~$$","^1L","^>I","^>W","^>J","^>M","^>A","^>E","^>V","^>U","^>?","^>Q","^>3","^>L","^>X","^>7","^>4","^>Y","^>Z","^>@","^>D","^>6","^>C","^>K","^>R"]],"^1R",["^ ","^1<",["^H",[]]],"^1S",["^ "],"^1T",["^Y","^X","^19","^S","^15","^[","^U","^E","^Q","^13","^17","^10","^W"]],"^M","^J","~:ns-specs",["^ "],"~:ns-spec-vars",["^H",[]],"~:compiler-options",["^7C",[["^?2","~:static-fns"],true,["^?2","~:shadow-tweaks"],null,["^?2","~:source-map-inline"],null,["^?2","~:elide-asserts"],false,["^?2","~:optimize-constants"],null,["^?2","^1Y"],null,["^?2","~:external-config"],null,["^?2","~:tooling-config"],null,["^?2","~:emit-constants"],null,["^?2","~:load-tests"],null,["^?2","~:form-size-threshold"],null,["^?2","~:global-goog-object&array"],null,["^?2","~:data-readers"],null,["^?2","~:infer-externs"],"~:auto",["^?2","^1["],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^?2","~:fn-invoke-direct"],null,["^?2","~:source-map"],"/dev/null"]]]