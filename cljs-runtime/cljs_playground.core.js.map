{"version":3,"sources":["cljs_playground/core.cljs"],"mappings":";;AAaA,8CAAA,9CAAMA;AAAN,AACE,OAAAC,wBAAA,AAAAC,2BAAA,MAAA,WAAAC;AAAA,AAAA,OAAAF,wBAAA,AAAAC,4DAAA,WAAQG,5CAAc,AAACC;AAAvB,AAAA,OAAAF,sBAAA;;;;AAIF,AAAKG,yBAAE,AAACP;AAER,AAACQ,gDAAOD,uBAAE,AAACE,yGAAQC,qBAAUH;AAE7B,AAAKI,0BAAG,kDAAA,AAAA,lDAACC;AACT,AAACH,yGAAQ,yBAAA,xBAAME;AAEf,qCAAA,rCAAME;AAAN,AAAA;;AAAuB,IAAAC,iBAErB,iBAAAI,WAAA;IAAAC,WAAA;AAAA,AAEE,gHAAA,zGAACV;;AAFH,AAAA,wIAAAS,SAAAC,uDAAAD,SAAAC,zMAACH,iEAAAA,oFAAAA;;IAFoBD,qBACrB,AAAKC,mCAAYC;AADI,AAAA,CAAAF,mDAAAA,iDAAAD,kBAAAC,6BAAAD;AAQvB,4BAAA,5BAAMM;AAAN,AACE,mBAAA,nBAACC;;AACD,OAACR;;AAIH,4BAAA,5BAAMS;AAAN,OACM,AAACC,aAAgBH,pBACjB,qDAAQI","names":["cljs-playground.core/create-garden-calendar","promesa.protocols/-mcat","promesa.protocols/-promise","___27724__auto__","promesa.impl/resolved","current-block","js/logseq.Editor.getCurrentBlock","cljs-playground.core/x","promesa.core.then","cljs.core.println","promesa.core/extract","cljs-playground.core/x1","cljs.core.int_array","cljs-playground.core/slashcommands","G__28252","fexpr__28251","cljs-playground.core/regSlashCmd","js/logseq.Editor.registerSlashCommand","G__28253","G__28254","cljs-playground.core/main","js/logseq.App.showMsg","cljs-playground.core/init","js/logseq.ready","js/console.error"],"sourcesContent":["(ns cljs-playground.core\n  (:require [\"@logseq/libs\"] ;; [applied-science.js-interop :as j]\n ;; [cljs-http.client :as http]\n ;; [cljs-http.client :as http]\n ;; [datascript.core :as d]\n           \n            [promesa.core :as p] \n))\n\n;; (future (Thread/sleep 4000)\n        ;; (println \"I'll print after 4 seconds\"))\n\n\n(defn create-garden-calendar []\n  (p/let [current-block (js/logseq.Editor.getCurrentBlock)]\n  )\n  \n  )\n(def x (create-garden-calendar))\n\n(p/then x (println p/extract x))\n\n(def x1 (int-array '(1 2 3)))\n(println (aget x1 2))\n\n(defn slashcommands [])(\n  (def regSlashCmd js/logseq.Editor.registerSlashCommand)\n  (regSlashCmd\n   \"create-garden-calendar\"\n   #(println \"ok3\")))\n  \n\n\n(defn main []\n  (js/logseq.App.showMsg \"Gardening rocks!\")\n  (slashcommands)\n)  \n   \n\n(defn init []\n  (-> (js/logseq.ready main)\n      (.catch js/console.error)))\n\n\n\n"]}